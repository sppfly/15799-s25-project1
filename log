[INFO] Scanning for projects...
[INFO] 
[INFO] ---------------------< edu.cmu.cs.db:calcite_app >----------------------
[INFO] Building calcite_app 1.0-SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ calcite_app ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] Copying 1 resource from src/main/resources to target/classes
[INFO] 
[INFO] --- compiler:3.11.0:compile (default-compile) @ calcite_app ---
[INFO] Changes detected - recompiling the module! :source
[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!
[INFO] Compiling 6 source files with javac [debug release 21] to target/classes
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  1.623 s
[INFO] Finished at: 2025-04-10T07:52:37Z
[INFO] ------------------------------------------------------------------------
[INFO] Scanning for projects...
[INFO] 
[INFO] ---------------------< edu.cmu.cs.db:calcite_app >----------------------
[INFO] Building calcite_app 1.0-SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- exec:3.1.0:java (default-cli) @ calcite_app ---
Running the app!
	Arg1: /workspaces/15799-s25-project1/queries
	Arg2: 1
[WARNING] 
org.apache.calcite.plan.RelOptPlanner$CannotPlanException: There are not enough rules to produce a node with desired properties: convention=ENUMERABLE.
Missing conversion is LogicalJoin[convention: NONE -> JDBC.DUCK]
There is 1 empty subset: rel#722:RelSubset#51.JDBC.DUCK, the relevant part of the original plan is as follows
714:LogicalJoin(condition=[OR(AND(=($16, $1), =(CAST($19):VARCHAR(8) NOT NULL, 'Brand#52'), OR(=($22, 'SM CASE'), =($22, 'SM BOX'), =($22, 'SM PACK'), =($22, 'SM PKG')), >=($4, 9), <=($4, +(9, 10)), >=($21, 1), <=($21, 5), OR(=($14, 'AIR'), =($14, 'AIR REG')), =(CAST($13):VARCHAR(17) NOT NULL, 'DELIVER IN PERSON')), AND(=($16, $1), =(CAST($19):VARCHAR(8) NOT NULL, 'Brand#42'), OR(=($22, 'MED BAG'), =($22, 'MED BOX'), =($22, 'MED PKG'), =($22, 'MED PACK')), >=($4, 18), <=($4, +(18, 10)), >=($21, 1), <=($21, 10), OR(=($14, 'AIR'), =($14, 'AIR REG')), =(CAST($13):VARCHAR(17) NOT NULL, 'DELIVER IN PERSON')), AND(=($16, $1), =(CAST($19):VARCHAR(8) NOT NULL, 'Brand#23'), OR(=($22, 'LG CASE'), =($22, 'LG BOX'), =($22, 'LG PACK'), =($22, 'LG PKG')), >=($4, 22), <=($4, +(22, 10)), >=($21, 1), <=($21, 15), OR(=($14, 'AIR'), =($14, 'AIR REG')), =(CAST($13):VARCHAR(17) NOT NULL, 'DELIVER IN PERSON')))], joinType=[inner])
  68:JdbcTableScan(subset=[rel#97:RelSubset#6.JDBC.DUCK], table=[[DUCK, lineitem]])
  70:JdbcTableScan(subset=[rel#100:RelSubset#8.JDBC.DUCK], table=[[DUCK, part]])

Root: rel#720:RelSubset#53.ENUMERABLE
Original rel:
JdbcToEnumerableConverter(subset=[rel#38:RelSubset#5.ENUMERABLE]): rowcount = 1.0, cumulative cost = {0.1 rows, 0.1 cpu, 0.0 io}, id = 61
  JdbcSort(subset=[rel#50:RelSubset#5.JDBC.DUCK], sort0=[$0], dir0=[ASC]): rowcount = 1.0, cumulative cost = {0.9 rows, 18.0 cpu, 0.0 io}, id = 49
    JdbcAggregate(subset=[rel#48:RelSubset#3.JDBC.DUCK], group=[{0}], ORDER_COUNT=[COUNT()]): rowcount = 1.0, cumulative cost = {1.125 rows, 0.0 cpu, 0.0 io}, id = 47
      JdbcProject(subset=[rel#46:RelSubset#2.JDBC.DUCK], o_orderpriority=[$5]): rowcount = 6.25, cumulative cost = {5.0 rows, 5.0 cpu, 0.0 io}, id = 45
        JdbcFilter(subset=[rel#44:RelSubset#1.JDBC.DUCK], condition=[AND(>=($4, 1996-01-01), <($4, +(1996-01-01, 3:INTERVAL MONTH)), EXISTS({
LogicalFilter(condition=[AND(=($0, $cor0.o_orderkey), <($11, $12))])
  JdbcTableScan(table=[[DUCK, lineitem]])
}))]): rowcount = 6.25, cumulative cost = {6.25 rows, 100.0 cpu, 0.0 io}, id = 43
          JdbcTableScan(subset=[rel#27:RelSubset#0.JDBC.DUCK], table=[[DUCK, orders]]): rowcount = 100.0, cumulative cost = {100.0 rows, 101.0 cpu, 0.0 io}, id = 1

Sets:
Set#0, type: RecordType(BIGINT o_orderkey, BIGINT o_custkey, VARCHAR(0) o_orderstatus, DECIMAL(15, 2) o_totalprice, DATE o_orderdate, VARCHAR(0) o_orderpriority, VARCHAR(0) o_clerk, INTEGER o_shippriority, VARCHAR(0) o_comment)
	rel#27:RelSubset#0.JDBC.DUCK, best=rel#1
		rel#1:JdbcTableScan.JDBC.DUCK(table=[DUCK, orders]), rowcount=100.0, cumulative cost={100.0 rows, 101.0 cpu, 0.0 io}
	rel#42:RelSubset#0.ENUMERABLE, best=rel#41
		rel#41:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#27), rowcount=100.0, cumulative cost={110.0 rows, 111.0 cpu, 0.0 io}
Set#1, type: RecordType(BIGINT o_orderkey, BIGINT o_custkey, VARCHAR(0) o_orderstatus, DECIMAL(15, 2) o_totalprice, DATE o_orderdate, VARCHAR(0) o_orderpriority, VARCHAR(0) o_clerk, INTEGER o_shippriority, VARCHAR(0) o_comment)
	rel#29:RelSubset#1.NONE, best=null
		rel#28:LogicalFilter.NONE(input=RelSubset#27,condition=AND(>=($4, 1996-01-01), <($4, +(1996-01-01, 3:INTERVAL MONTH)), EXISTS({
LogicalFilter(condition=[AND(=($0, $cor0.o_orderkey), <($11, $12))])
  JdbcTableScan(table=[[DUCK, lineitem]])
})),variablesSet=[$cor0]), rowcount=6.25, cumulative cost={inf}
	rel#44:RelSubset#1.JDBC.DUCK, best=rel#43
		rel#43:JdbcFilter.JDBC.DUCK(input=RelSubset#27,condition=AND(>=($4, 1996-01-01), <($4, +(1996-01-01, 3:INTERVAL MONTH)), EXISTS({
LogicalFilter(condition=[AND(=($0, $cor0.o_orderkey), <($11, $12))])
  JdbcTableScan(table=[[DUCK, lineitem]])
}))), rowcount=6.25, cumulative cost={106.25 rows, 201.0 cpu, 0.0 io}
	rel#53:RelSubset#1.ENUMERABLE, best=rel#52
		rel#52:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#44), rowcount=6.25, cumulative cost={106.875 rows, 201.625 cpu, 0.0 io}
Set#2, type: RecordType(VARCHAR(0) o_orderpriority)
	rel#31:RelSubset#2.NONE, best=null
		rel#30:LogicalProject.NONE(input=RelSubset#29,exprs=[$5]), rowcount=6.25, cumulative cost={inf}
	rel#46:RelSubset#2.JDBC.DUCK, best=rel#45
		rel#45:JdbcProject.JDBC.DUCK(input=RelSubset#44,exprs=[$5]), rowcount=6.25, cumulative cost={111.25 rows, 206.0 cpu, 0.0 io}
	rel#56:RelSubset#2.ENUMERABLE, best=rel#55
		rel#55:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#46), rowcount=6.25, cumulative cost={111.875 rows, 206.625 cpu, 0.0 io}
Set#3, type: RecordType(VARCHAR(0) o_orderpriority, BIGINT ORDER_COUNT)
	rel#33:RelSubset#3.NONE, best=null
		rel#32:LogicalAggregate.NONE(input=RelSubset#31,group={0},ORDER_COUNT=COUNT()), rowcount=1.0, cumulative cost={inf}
	rel#48:RelSubset#3.JDBC.DUCK, best=rel#47
		rel#47:JdbcAggregate.JDBC.DUCK(input=RelSubset#46,group={0},ORDER_COUNT=COUNT()), rowcount=1.0, cumulative cost={112.375 rows, 206.0 cpu, 0.0 io}
	rel#59:RelSubset#3.ENUMERABLE, best=rel#58
		rel#58:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#48), rowcount=1.0, cumulative cost={112.475 rows, 206.1 cpu, 0.0 io}
Set#5, type: RecordType(VARCHAR(0) O_ORDERPRIORITY, BIGINT ORDER_COUNT)
	rel#37:RelSubset#5.NONE, best=null
		rel#36:LogicalSort.NONE(input=RelSubset#33,sort0=$0,dir0=ASC), rowcount=1.0, cumulative cost={inf}
	rel#38:RelSubset#5.ENUMERABLE, best=rel#61
		rel#39:AbstractConverter.ENUMERABLE(input=RelSubset#37,convention=ENUMERABLE), rowcount=1.0, cumulative cost={inf}
		rel#61:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#50), rowcount=1.0, cumulative cost={113.375 rows, 224.1 cpu, 0.0 io}
	rel#50:RelSubset#5.JDBC.DUCK, best=rel#49
		rel#49:JdbcSort.JDBC.DUCK(input=RelSubset#48,sort0=$0,dir0=ASC), rowcount=1.0, cumulative cost={113.275 rows, 224.0 cpu, 0.0 io}
Set#6, type: RecordType(BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment)
	rel#97:RelSubset#6.JDBC.DUCK, best=rel#68
		rel#68:JdbcTableScan.JDBC.DUCK(table=[DUCK, lineitem]), rowcount=100.0, cumulative cost={100.0 rows, 101.0 cpu, 0.0 io}
	rel#113:RelSubset#6.ENUMERABLE, best=rel#112
		rel#112:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#97), rowcount=100.0, cumulative cost={110.0 rows, 111.0 cpu, 0.0 io}
Set#7, type: RecordType(BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment)
	rel#99:RelSubset#7.NONE, best=null
		rel#98:LogicalFilter.NONE(input=RelSubset#97,condition=AND(>=($10, 1995-05-01), <($10, +(1995-05-01, 1:INTERVAL MONTH)))), rowcount=25.0, cumulative cost={inf}
	rel#115:RelSubset#7.JDBC.DUCK, best=rel#114
		rel#114:JdbcFilter.JDBC.DUCK(input=RelSubset#97,condition=AND(>=($10, 1995-05-01), <($10, +(1995-05-01, 1:INTERVAL MONTH)))), rowcount=25.0, cumulative cost={125.0 rows, 201.0 cpu, 0.0 io}
	rel#129:RelSubset#7.ENUMERABLE, best=rel#128
		rel#128:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#115), rowcount=25.0, cumulative cost={127.5 rows, 203.5 cpu, 0.0 io}
Set#8, type: RecordType(BIGINT p_partkey, VARCHAR(0) p_name, VARCHAR(0) p_mfgr, VARCHAR(0) p_brand, VARCHAR(0) p_type, INTEGER p_size, VARCHAR(0) p_container, DECIMAL(15, 2) p_retailprice, VARCHAR(0) p_comment)
	rel#100:RelSubset#8.JDBC.DUCK, best=rel#70
		rel#70:JdbcTableScan.JDBC.DUCK(table=[DUCK, part]), rowcount=100.0, cumulative cost={100.0 rows, 101.0 cpu, 0.0 io}
	rel#118:RelSubset#8.ENUMERABLE, best=rel#117
		rel#117:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#100), rowcount=100.0, cumulative cost={110.0 rows, 111.0 cpu, 0.0 io}
Set#9, type: RecordType(BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment, BIGINT p_partkey, VARCHAR(0) p_name, VARCHAR(0) p_mfgr, VARCHAR(0) p_brand, VARCHAR(0) p_type, INTEGER p_size, VARCHAR(0) p_container, DECIMAL(15, 2) p_retailprice, VARCHAR(0) p_comment)
	rel#102:RelSubset#9.NONE, best=null
		rel#101:LogicalJoin.NONE(left=RelSubset#99,right=RelSubset#100,condition==($1, $16),joinType=inner), rowcount=375.0, cumulative cost={inf}
	rel#120:RelSubset#9.JDBC.DUCK, best=rel#119
		rel#119:JdbcJoin.JDBC.DUCK(left=RelSubset#115,right=RelSubset#100,condition==($1, $16),joinType=inner), rowcount=375.0, cumulative cost={600.0 rows, 302.0 cpu, 0.0 io}
	rel#132:RelSubset#9.ENUMERABLE, best=rel#131
		rel#131:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#120), rowcount=375.0, cumulative cost={637.5 rows, 339.5 cpu, 0.0 io}
Set#10, type: RecordType(DECIMAL(19, 4) $f0, DECIMAL(19, 4) $f1)
	rel#104:RelSubset#10.NONE, best=null
		rel#103:LogicalProject.NONE(input=RelSubset#102,exprs=[CASE(LIKE($20, 'PROMO%'), *($5, -(1, $6)), 0:DECIMAL(19, 4)), *($5, -(1, $6))]), rowcount=375.0, cumulative cost={inf}
	rel#122:RelSubset#10.JDBC.DUCK, best=rel#121
		rel#121:JdbcProject.JDBC.DUCK(input=RelSubset#120,exprs=[CASE(LIKE($20, 'PROMO%'), *($5, -(1, $6)), 0:DECIMAL(19, 4)), *($5, -(1, $6))]), rowcount=375.0, cumulative cost={900.0 rows, 902.0 cpu, 0.0 io}
	rel#135:RelSubset#10.ENUMERABLE, best=rel#134
		rel#134:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#122), rowcount=375.0, cumulative cost={937.5 rows, 939.5 cpu, 0.0 io}
Set#11, type: RecordType(DECIMAL(19, 4) $f0, DECIMAL(19, 4) $f1)
	rel#106:RelSubset#11.NONE, best=null
		rel#105:LogicalAggregate.NONE(input=RelSubset#104,group={},agg#0=SUM($0),agg#1=SUM($1)), rowcount=1.0, cumulative cost={inf}
	rel#124:RelSubset#11.JDBC.DUCK, best=rel#123
		rel#123:JdbcAggregate.JDBC.DUCK(input=RelSubset#122,group={},agg#0=SUM($0),agg#1=SUM($1)), rowcount=1.0, cumulative cost={901.2750000953674 rows, 902.0 cpu, 0.0 io}
	rel#138:RelSubset#11.ENUMERABLE, best=rel#137
		rel#137:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#124), rowcount=1.0, cumulative cost={901.3750000953675 rows, 902.1 cpu, 0.0 io}
Set#12, type: RecordType(DECIMAL(19, 2) PROMO_REVENUE)
	rel#108:RelSubset#12.NONE, best=null
		rel#107:LogicalProject.NONE(input=RelSubset#106,exprs=[/(*(100.00:DECIMAL(5, 2), $0), $1)]), rowcount=1.0, cumulative cost={inf}
	rel#109:RelSubset#12.ENUMERABLE, best=rel#140
		rel#110:AbstractConverter.ENUMERABLE(input=RelSubset#108,convention=ENUMERABLE), rowcount=1.0, cumulative cost={inf}
		rel#140:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#126), rowcount=1.0, cumulative cost={902.1750000953674 rows, 902.9 cpu, 0.0 io}
	rel#126:RelSubset#12.JDBC.DUCK, best=rel#125
		rel#125:JdbcProject.JDBC.DUCK(input=RelSubset#124,exprs=[/(*(100.00:DECIMAL(5, 2), $0), $1)]), rowcount=1.0, cumulative cost={902.0750000953674 rows, 902.8 cpu, 0.0 io}
Set#13, type: RecordType(BIGINT s_suppkey, VARCHAR(0) s_name, VARCHAR(0) s_address, INTEGER s_nationkey, VARCHAR(0) s_phone, DECIMAL(15, 2) s_acctbal, VARCHAR(0) s_comment, BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment, BIGINT o_orderkey, BIGINT o_custkey, VARCHAR(0) o_orderstatus, DECIMAL(15, 2) o_totalprice, DATE o_orderdate, VARCHAR(0) o_orderpriority, VARCHAR(0) o_clerk, INTEGER o_shippriority, VARCHAR(0) o_comment)
	rel#209:RelSubset#13.NONE, best=null
		rel#202:LogicalValues.NONE(type=RecordType(BIGINT s_suppkey, VARCHAR(0) s_name, VARCHAR(0) s_address, INTEGER s_nationkey, VARCHAR(0) s_phone, DECIMAL(15, 2) s_acctbal, VARCHAR(0) s_comment, BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment, BIGINT o_orderkey, BIGINT o_custkey, VARCHAR(0) o_orderstatus, DECIMAL(15, 2) o_totalprice, DATE o_orderdate, VARCHAR(0) o_orderpriority, VARCHAR(0) o_clerk, INTEGER o_shippriority, VARCHAR(0) o_comment),tuples=[]), rowcount=1.0, cumulative cost={inf}
	rel#226:RelSubset#13.JDBC.DUCK, best=rel#225
		rel#225:JdbcValues.JDBC.DUCK(type=RecordType(BIGINT s_suppkey, VARCHAR(0) s_name, VARCHAR(0) s_address, INTEGER s_nationkey, VARCHAR(0) s_phone, DECIMAL(15, 2) s_acctbal, VARCHAR(0) s_comment, BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment, BIGINT o_orderkey, BIGINT o_custkey, VARCHAR(0) o_orderstatus, DECIMAL(15, 2) o_totalprice, DATE o_orderdate, VARCHAR(0) o_orderpriority, VARCHAR(0) o_clerk, INTEGER o_shippriority, VARCHAR(0) o_comment),tuples=[]), rowcount=1.0, cumulative cost={1.0 rows, 1.0 cpu, 0.0 io}
	rel#242:RelSubset#13.ENUMERABLE, best=rel#241
		rel#241:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#226), rowcount=1.0, cumulative cost={1.1 rows, 1.1 cpu, 0.0 io}
Set#14, type: RecordType(INTEGER n_nationkey, VARCHAR(0) n_name, INTEGER n_regionkey, VARCHAR(0) n_comment)
	rel#210:RelSubset#14.JDBC.DUCK, best=rel#158
		rel#158:JdbcTableScan.JDBC.DUCK(table=[DUCK, nation]), rowcount=100.0, cumulative cost={100.0 rows, 101.0 cpu, 0.0 io}
	rel#229:RelSubset#14.ENUMERABLE, best=rel#228
		rel#228:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#210), rowcount=100.0, cumulative cost={110.0 rows, 111.0 cpu, 0.0 io}
Set#15, type: RecordType(INTEGER n_nationkey, VARCHAR(0) n_name, INTEGER n_regionkey, VARCHAR(0) n_comment)
	rel#212:RelSubset#15.NONE, best=null
		rel#211:LogicalFilter.NONE(input=RelSubset#210,condition==(CAST($1):VARCHAR(5) NOT NULL, 'CHINA')), rowcount=15.0, cumulative cost={inf}
	rel#231:RelSubset#15.JDBC.DUCK, best=rel#230
		rel#230:JdbcFilter.JDBC.DUCK(input=RelSubset#210,condition==(CAST($1):VARCHAR(5) NOT NULL, 'CHINA')), rowcount=15.0, cumulative cost={115.0 rows, 201.0 cpu, 0.0 io}
	rel#245:RelSubset#15.ENUMERABLE, best=rel#244
		rel#244:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#231), rowcount=15.0, cumulative cost={116.5 rows, 202.5 cpu, 0.0 io}
Set#16, type: RecordType(BIGINT s_suppkey, VARCHAR(0) s_name, VARCHAR(0) s_address, INTEGER s_nationkey, VARCHAR(0) s_phone, DECIMAL(15, 2) s_acctbal, VARCHAR(0) s_comment, BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment, BIGINT o_orderkey, BIGINT o_custkey, VARCHAR(0) o_orderstatus, DECIMAL(15, 2) o_totalprice, DATE o_orderdate, VARCHAR(0) o_orderpriority, VARCHAR(0) o_clerk, INTEGER o_shippriority, VARCHAR(0) o_comment, INTEGER n_nationkey, VARCHAR(0) n_name, INTEGER n_regionkey, VARCHAR(0) n_comment)
	rel#214:RelSubset#16.NONE, best=null
		rel#213:LogicalJoin.NONE(left=RelSubset#209,right=RelSubset#212,condition==($3, $32),joinType=inner), rowcount=2.25, cumulative cost={inf}
	rel#233:RelSubset#16.JDBC.DUCK, best=rel#232
		rel#232:JdbcJoin.JDBC.DUCK(left=RelSubset#226,right=RelSubset#231,condition==($3, $32),joinType=inner), rowcount=2.25, cumulative cost={118.25 rows, 202.0 cpu, 0.0 io}
	rel#248:RelSubset#16.ENUMERABLE, best=rel#247
		rel#247:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#233), rowcount=2.25, cumulative cost={118.475 rows, 202.225 cpu, 0.0 io}
Set#17, type: RecordType(VARCHAR(0) s_name)
	rel#216:RelSubset#17.NONE, best=null
		rel#215:LogicalProject.NONE(input=RelSubset#214,exprs=[$1]), rowcount=2.25, cumulative cost={inf}
	rel#235:RelSubset#17.JDBC.DUCK, best=rel#234
		rel#234:JdbcProject.JDBC.DUCK(input=RelSubset#233,exprs=[$1]), rowcount=2.25, cumulative cost={120.05 rows, 203.8 cpu, 0.0 io}
	rel#251:RelSubset#17.ENUMERABLE, best=rel#250
		rel#250:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#235), rowcount=2.25, cumulative cost={120.27499999999999 rows, 204.025 cpu, 0.0 io}
Set#18, type: RecordType(VARCHAR(0) s_name, BIGINT NUMWAIT)
	rel#218:RelSubset#18.NONE, best=null
		rel#217:LogicalAggregate.NONE(input=RelSubset#216,group={0},NUMWAIT=COUNT()), rowcount=1.0, cumulative cost={inf}
	rel#237:RelSubset#18.JDBC.DUCK, best=rel#236
		rel#236:JdbcAggregate.JDBC.DUCK(input=RelSubset#235,group={0},NUMWAIT=COUNT()), rowcount=1.0, cumulative cost={121.175 rows, 203.8 cpu, 0.0 io}
	rel#254:RelSubset#18.ENUMERABLE, best=rel#253
		rel#253:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#237), rowcount=1.0, cumulative cost={121.27499999999999 rows, 203.9 cpu, 0.0 io}
Set#20, type: RecordType(VARCHAR(0) S_NAME, BIGINT NUMWAIT)
	rel#222:RelSubset#20.NONE, best=null
		rel#221:LogicalSort.NONE(input=RelSubset#218,sort0=$1,sort1=$0,dir0=DESC,dir1=ASC,fetch=100), rowcount=1.0, cumulative cost={inf}
	rel#223:RelSubset#20.ENUMERABLE, best=rel#256
		rel#224:AbstractConverter.ENUMERABLE(input=RelSubset#222,convention=ENUMERABLE), rowcount=1.0, cumulative cost={inf}
		rel#256:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#239), rowcount=1.0, cumulative cost={122.175 rows, 221.9 cpu, 0.0 io}
	rel#239:RelSubset#20.JDBC.DUCK, best=rel#238
		rel#238:JdbcSort.JDBC.DUCK(input=RelSubset#237,sort0=$1,sort1=$0,dir0=DESC,dir1=ASC,fetch=100), rowcount=1.0, cumulative cost={122.075 rows, 221.8 cpu, 0.0 io}
Set#21, type: RecordType(BIGINT p_partkey, VARCHAR(0) p_name, VARCHAR(0) p_mfgr, VARCHAR(0) p_brand, VARCHAR(0) p_type, INTEGER p_size, VARCHAR(0) p_container, DECIMAL(15, 2) p_retailprice, VARCHAR(0) p_comment)
	rel#344:RelSubset#21.NONE, best=null
		rel#343:LogicalFilter.NONE(input=RelSubset#100,condition=LIKE($1, '%forest%')), rowcount=25.0, cumulative cost={inf}
	rel#366:RelSubset#21.JDBC.DUCK, best=rel#365
		rel#365:JdbcFilter.JDBC.DUCK(input=RelSubset#100,condition=LIKE($1, '%forest%')), rowcount=25.0, cumulative cost={125.0 rows, 201.0 cpu, 0.0 io}
	rel#391:RelSubset#21.ENUMERABLE, best=rel#390
		rel#390:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#366), rowcount=25.0, cumulative cost={127.5 rows, 203.5 cpu, 0.0 io}
Set#22, type: RecordType(BIGINT s_suppkey, VARCHAR(0) s_name, VARCHAR(0) s_address, INTEGER s_nationkey, VARCHAR(0) s_phone, DECIMAL(15, 2) s_acctbal, VARCHAR(0) s_comment)
	rel#345:RelSubset#22.JDBC.DUCK, best=rel#266
		rel#266:JdbcTableScan.JDBC.DUCK(table=[DUCK, supplier]), rowcount=100.0, cumulative cost={100.0 rows, 101.0 cpu, 0.0 io}
	rel#369:RelSubset#22.ENUMERABLE, best=rel#368
		rel#368:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#345), rowcount=100.0, cumulative cost={110.0 rows, 111.0 cpu, 0.0 io}
Set#23, type: RecordType(BIGINT p_partkey, VARCHAR(0) p_name, VARCHAR(0) p_mfgr, VARCHAR(0) p_brand, VARCHAR(0) p_type, INTEGER p_size, VARCHAR(0) p_container, DECIMAL(15, 2) p_retailprice, VARCHAR(0) p_comment, BIGINT s_suppkey, VARCHAR(0) s_name, VARCHAR(0) s_address, INTEGER s_nationkey, VARCHAR(0) s_phone, DECIMAL(15, 2) s_acctbal, VARCHAR(0) s_comment)
	rel#347:RelSubset#23.NONE, best=null
		rel#346:LogicalJoin.NONE(left=RelSubset#344,right=RelSubset#345,condition=true,joinType=inner), rowcount=2500.0, cumulative cost={inf}
	rel#371:RelSubset#23.JDBC.DUCK, best=rel#370
		rel#370:JdbcJoin.JDBC.DUCK(left=RelSubset#366,right=RelSubset#345,condition=true,joinType=inner), rowcount=2500.0, cumulative cost={2725.0 rows, 302.0 cpu, 0.0 io}
	rel#394:RelSubset#23.ENUMERABLE, best=rel#393
		rel#393:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#371), rowcount=2500.0, cumulative cost={2975.0 rows, 552.0 cpu, 0.0 io}
Set#24, type: RecordType(BIGINT p_partkey, VARCHAR(0) p_name, VARCHAR(0) p_mfgr, VARCHAR(0) p_brand, VARCHAR(0) p_type, INTEGER p_size, VARCHAR(0) p_container, DECIMAL(15, 2) p_retailprice, VARCHAR(0) p_comment, BIGINT s_suppkey, VARCHAR(0) s_name, VARCHAR(0) s_address, INTEGER s_nationkey, VARCHAR(0) s_phone, DECIMAL(15, 2) s_acctbal, VARCHAR(0) s_comment, BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment)
	rel#349:RelSubset#24.NONE, best=null
		rel#348:LogicalJoin.NONE(left=RelSubset#347,right=RelSubset#97,condition=AND(=($9, $18), =($0, $17)),joinType=inner), rowcount=5625.0, cumulative cost={inf}
	rel#373:RelSubset#24.JDBC.DUCK, best=rel#372
		rel#372:JdbcJoin.JDBC.DUCK(left=RelSubset#371,right=RelSubset#97,condition=AND(=($9, $18), =($0, $17)),joinType=inner), rowcount=5625.0, cumulative cost={8450.0 rows, 403.0 cpu, 0.0 io}
	rel#397:RelSubset#24.ENUMERABLE, best=rel#396
		rel#396:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#373), rowcount=5625.0, cumulative cost={9012.5 rows, 965.5 cpu, 0.0 io}
Set#25, type: RecordType(BIGINT ps_partkey, BIGINT ps_suppkey, BIGINT ps_availqty, DECIMAL(15, 2) ps_supplycost, VARCHAR(0) ps_comment)
	rel#350:RelSubset#25.JDBC.DUCK, best=rel#274
		rel#274:JdbcTableScan.JDBC.DUCK(table=[DUCK, partsupp]), rowcount=100.0, cumulative cost={100.0 rows, 101.0 cpu, 0.0 io}
	rel#376:RelSubset#25.ENUMERABLE, best=rel#375
		rel#375:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#350), rowcount=100.0, cumulative cost={110.0 rows, 111.0 cpu, 0.0 io}
Set#26, type: RecordType(BIGINT p_partkey, VARCHAR(0) p_name, VARCHAR(0) p_mfgr, VARCHAR(0) p_brand, VARCHAR(0) p_type, INTEGER p_size, VARCHAR(0) p_container, DECIMAL(15, 2) p_retailprice, VARCHAR(0) p_comment, BIGINT s_suppkey, VARCHAR(0) s_name, VARCHAR(0) s_address, INTEGER s_nationkey, VARCHAR(0) s_phone, DECIMAL(15, 2) s_acctbal, VARCHAR(0) s_comment, BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment, BIGINT ps_partkey, BIGINT ps_suppkey, BIGINT ps_availqty, DECIMAL(15, 2) ps_supplycost, VARCHAR(0) ps_comment)
	rel#352:RelSubset#26.NONE, best=null
		rel#351:LogicalJoin.NONE(left=RelSubset#349,right=RelSubset#350,condition=AND(=($33, $18), =($32, $17)),joinType=inner), rowcount=12656.25, cumulative cost={inf}
	rel#378:RelSubset#26.JDBC.DUCK, best=rel#377
		rel#377:JdbcJoin.JDBC.DUCK(left=RelSubset#373,right=RelSubset#350,condition=AND(=($33, $18), =($32, $17)),joinType=inner), rowcount=12656.25, cumulative cost={21206.25 rows, 504.0 cpu, 0.0 io}
	rel#400:RelSubset#26.ENUMERABLE, best=rel#399
		rel#399:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#378), rowcount=12656.25, cumulative cost={22471.875 rows, 1769.625 cpu, 0.0 io}
Set#27, type: RecordType(BIGINT p_partkey, VARCHAR(0) p_name, VARCHAR(0) p_mfgr, VARCHAR(0) p_brand, VARCHAR(0) p_type, INTEGER p_size, VARCHAR(0) p_container, DECIMAL(15, 2) p_retailprice, VARCHAR(0) p_comment, BIGINT s_suppkey, VARCHAR(0) s_name, VARCHAR(0) s_address, INTEGER s_nationkey, VARCHAR(0) s_phone, DECIMAL(15, 2) s_acctbal, VARCHAR(0) s_comment, BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment, BIGINT ps_partkey, BIGINT ps_suppkey, BIGINT ps_availqty, DECIMAL(15, 2) ps_supplycost, VARCHAR(0) ps_comment, BIGINT o_orderkey, BIGINT o_custkey, VARCHAR(0) o_orderstatus, DECIMAL(15, 2) o_totalprice, DATE o_orderdate, VARCHAR(0) o_orderpriority, VARCHAR(0) o_clerk, INTEGER o_shippriority, VARCHAR(0) o_comment)
	rel#354:RelSubset#27.NONE, best=null
		rel#353:LogicalJoin.NONE(left=RelSubset#352,right=RelSubset#27,condition==($37, $16),joinType=inner), rowcount=189843.75, cumulative cost={inf}
	rel#380:RelSubset#27.JDBC.DUCK, best=rel#379
		rel#379:JdbcJoin.JDBC.DUCK(left=RelSubset#378,right=RelSubset#27,condition==($37, $16),joinType=inner), rowcount=189843.75, cumulative cost={211150.0 rows, 605.0 cpu, 0.0 io}
	rel#403:RelSubset#27.ENUMERABLE, best=rel#402
		rel#402:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#380), rowcount=189843.75, cumulative cost={230134.375 rows, 19589.375 cpu, 0.0 io}
Set#28, type: RecordType(BIGINT p_partkey, VARCHAR(0) p_name, VARCHAR(0) p_mfgr, VARCHAR(0) p_brand, VARCHAR(0) p_type, INTEGER p_size, VARCHAR(0) p_container, DECIMAL(15, 2) p_retailprice, VARCHAR(0) p_comment, BIGINT s_suppkey, VARCHAR(0) s_name, VARCHAR(0) s_address, INTEGER s_nationkey, VARCHAR(0) s_phone, DECIMAL(15, 2) s_acctbal, VARCHAR(0) s_comment, BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment, BIGINT ps_partkey, BIGINT ps_suppkey, BIGINT ps_availqty, DECIMAL(15, 2) ps_supplycost, VARCHAR(0) ps_comment, BIGINT o_orderkey, BIGINT o_custkey, VARCHAR(0) o_orderstatus, DECIMAL(15, 2) o_totalprice, DATE o_orderdate, VARCHAR(0) o_orderpriority, VARCHAR(0) o_clerk, INTEGER o_shippriority, VARCHAR(0) o_comment, INTEGER n_nationkey, VARCHAR(0) n_name, INTEGER n_regionkey, VARCHAR(0) n_comment)
	rel#356:RelSubset#28.NONE, best=null
		rel#355:LogicalJoin.NONE(left=RelSubset#354,right=RelSubset#210,condition==($12, $46),joinType=inner), rowcount=2847656.25, cumulative cost={inf}
	rel#382:RelSubset#28.JDBC.DUCK, best=rel#381
		rel#381:JdbcJoin.JDBC.DUCK(left=RelSubset#380,right=RelSubset#210,condition==($12, $46),joinType=inner), rowcount=2847656.25, cumulative cost={3058906.25 rows, 706.0 cpu, 0.0 io}
	rel#406:RelSubset#28.ENUMERABLE, best=rel#405
		rel#405:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#382), rowcount=2847656.25, cumulative cost={3343671.875 rows, 285471.625 cpu, 0.0 io}
Set#29, type: RecordType(VARCHAR(0) NATION, BIGINT O_YEAR, DECIMAL(19, 4) AMOUNT)
	rel#358:RelSubset#29.NONE, best=null
		rel#357:LogicalProject.NONE(input=RelSubset#356,exprs=[$47, EXTRACT(FLAG(YEAR), $41), -(*($21, -(1, $22)), *($35, $20))]), rowcount=2847656.25, cumulative cost={inf}
	rel#384:RelSubset#29.JDBC.DUCK, best=rel#383
		rel#383:JdbcProject.JDBC.DUCK(input=RelSubset#382,exprs=[$47, EXTRACT(FLAG(YEAR), $41), -(*($21, -(1, $22)), *($35, $20))]), rowcount=2847656.25, cumulative cost={5337031.25 rows, 6835081.0 cpu, 0.0 io}
	rel#409:RelSubset#29.ENUMERABLE, best=rel#408
		rel#408:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#384), rowcount=2847656.25, cumulative cost={5621796.875 rows, 7119846.625 cpu, 0.0 io}
Set#30, type: RecordType(VARCHAR(0) NATION, BIGINT O_YEAR, DECIMAL(19, 4) SUM_PROFIT)
	rel#360:RelSubset#30.NONE, best=null
		rel#359:LogicalAggregate.NONE(input=RelSubset#358,group={0, 1},SUM_PROFIT=SUM($2)), rowcount=284765.625, cumulative cost={inf}
	rel#386:RelSubset#30.JDBC.DUCK, best=rel#385
		rel#385:JdbcAggregate.JDBC.DUCK(input=RelSubset#384,group={0, 1},SUM_PROFIT=SUM($2)), rowcount=284765.625, cumulative cost={5660952.162016183 rows, 6835081.0 cpu, 0.0 io}
	rel#412:RelSubset#30.ENUMERABLE, best=rel#411
		rel#411:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#386), rowcount=284765.625, cumulative cost={5689428.724516183 rows, 6863557.5625 cpu, 0.0 io}
Set#31, type: RecordType(VARCHAR(0) NATION, BIGINT O_YEAR, DECIMAL(19, 4) SUM_PROFIT)
	rel#362:RelSubset#31.NONE, best=null
		rel#361:LogicalSort.NONE(input=RelSubset#360,sort0=$0,sort1=$1,dir0=ASC,dir1=DESC), rowcount=284765.625, cumulative cost={inf}
	rel#363:RelSubset#31.ENUMERABLE, best=rel#414
		rel#364:AbstractConverter.ENUMERABLE(input=RelSubset#362,convention=ENUMERABLE), rowcount=284765.625, cumulative cost={inf}
		rel#414:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#388), rowcount=284765.625, cumulative cost={5945717.787016183 rows, 8.411577579826382E7 cpu, 0.0 io}
	rel#388:RelSubset#31.JDBC.DUCK, best=rel#387
		rel#387:JdbcSort.JDBC.DUCK(input=RelSubset#386,sort0=$0,sort1=$1,dir0=ASC,dir1=DESC), rowcount=284765.625, cumulative cost={5917241.224516183 rows, 8.408729923576382E7 cpu, 0.0 io}
Set#32, type: RecordType(BIGINT c_custkey, VARCHAR(0) c_name, VARCHAR(0) c_address, INTEGER c_nationkey, VARCHAR(0) c_phone, DECIMAL(15, 2) c_acctbal, VARCHAR(0) c_mktsegment, VARCHAR(0) c_comment)
	rel#451:RelSubset#32.JDBC.DUCK, best=rel#426
		rel#426:JdbcTableScan.JDBC.DUCK(table=[DUCK, customer]), rowcount=100.0, cumulative cost={100.0 rows, 101.0 cpu, 0.0 io}
	rel#464:RelSubset#32.ENUMERABLE, best=rel#463
		rel#463:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#451), rowcount=100.0, cumulative cost={110.0 rows, 111.0 cpu, 0.0 io}
Set#33, type: RecordType(BIGINT c_custkey, VARCHAR(0) c_name, VARCHAR(0) c_address, INTEGER c_nationkey, VARCHAR(0) c_phone, DECIMAL(15, 2) c_acctbal, VARCHAR(0) c_mktsegment, VARCHAR(0) c_comment)
	rel#453:RelSubset#33.NONE, best=null
		rel#452:LogicalFilter.NONE(input=RelSubset#451,condition=<($0, 1000)), rowcount=50.0, cumulative cost={inf}
	rel#466:RelSubset#33.JDBC.DUCK, best=rel#465
		rel#465:JdbcFilter.JDBC.DUCK(input=RelSubset#451,condition=<($0, 1000)), rowcount=50.0, cumulative cost={150.0 rows, 201.0 cpu, 0.0 io}
	rel#475:RelSubset#33.ENUMERABLE, best=rel#474
		rel#474:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#466), rowcount=50.0, cumulative cost={155.0 rows, 206.0 cpu, 0.0 io}
Set#34, type: RecordType(BIGINT c_custkey, VARCHAR(0) c_name, VARCHAR(0) c_address, INTEGER c_nationkey, VARCHAR(0) c_phone, DECIMAL(15, 2) c_acctbal, VARCHAR(0) c_mktsegment, VARCHAR(0) c_comment, BIGINT o_orderkey, BIGINT o_custkey, VARCHAR(0) o_orderstatus, DECIMAL(15, 2) o_totalprice, DATE o_orderdate, VARCHAR(0) o_orderpriority, VARCHAR(0) o_clerk, INTEGER o_shippriority, VARCHAR(0) o_comment)
	rel#455:RelSubset#34.NONE, best=null
		rel#454:LogicalJoin.NONE(left=RelSubset#453,right=RelSubset#27,condition==($9, $0),joinType=inner), rowcount=750.0, cumulative cost={inf}
	rel#468:RelSubset#34.JDBC.DUCK, best=rel#467
		rel#467:JdbcJoin.JDBC.DUCK(left=RelSubset#466,right=RelSubset#27,condition==($9, $0),joinType=inner), rowcount=750.0, cumulative cost={1000.0 rows, 302.0 cpu, 0.0 io}
	rel#478:RelSubset#34.ENUMERABLE, best=rel#477
		rel#477:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#468), rowcount=750.0, cumulative cost={1075.0 rows, 377.0 cpu, 0.0 io}
Set#35, type: RecordType(BIGINT C_CUSTKEY, BIGINT O_ORDERKEY, VARCHAR(0) C_NAME, DECIMAL(15, 2) O_TOTALPRICE)
	rel#457:RelSubset#35.NONE, best=null
		rel#456:LogicalProject.NONE(input=RelSubset#455,inputs=0,exprs=[$8, $1, $11]), rowcount=750.0, cumulative cost={inf}
	rel#470:RelSubset#35.JDBC.DUCK, best=rel#469
		rel#469:JdbcProject.JDBC.DUCK(input=RelSubset#468,inputs=0,exprs=[$8, $1, $11]), rowcount=750.0, cumulative cost={1600.0 rows, 2702.0 cpu, 0.0 io}
	rel#481:RelSubset#35.ENUMERABLE, best=rel#480
		rel#480:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#470), rowcount=750.0, cumulative cost={1675.0 rows, 2777.0 cpu, 0.0 io}
Set#36, type: RecordType(BIGINT C_CUSTKEY, BIGINT O_ORDERKEY, VARCHAR(0) C_NAME, DECIMAL(15, 2) O_TOTALPRICE)
	rel#459:RelSubset#36.NONE, best=null
		rel#458:LogicalSort.NONE(input=RelSubset#457,sort0=$0,dir0=ASC), rowcount=750.0, cumulative cost={inf}
	rel#460:RelSubset#36.ENUMERABLE, best=rel#483
		rel#461:AbstractConverter.ENUMERABLE(input=RelSubset#459,convention=ENUMERABLE), rowcount=750.0, cumulative cost={inf}
		rel#483:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#472), rowcount=750.0, cumulative cost={2350.0 rows, 127896.38360342373 cpu, 0.0 io}
	rel#472:RelSubset#36.JDBC.DUCK, best=rel#471
		rel#471:JdbcSort.JDBC.DUCK(input=RelSubset#470,sort0=$0,dir0=ASC), rowcount=750.0, cumulative cost={2275.0 rows, 127821.38360342373 cpu, 0.0 io}
Set#37, type: RecordType(BIGINT o_orderkey, BIGINT o_custkey, VARCHAR(0) o_orderstatus, DECIMAL(15, 2) o_totalprice, DATE o_orderdate, VARCHAR(0) o_orderpriority, VARCHAR(0) o_clerk, INTEGER o_shippriority, VARCHAR(0) o_comment)
	rel#550:RelSubset#37.NONE, best=null
		rel#549:LogicalFilter.NONE(input=RelSubset#27,condition=AND(>=($4, 1993-02-01), <($4, +(1993-02-01, 3:INTERVAL MONTH)))), rowcount=25.0, cumulative cost={inf}
	rel#570:RelSubset#37.JDBC.DUCK, best=rel#569
		rel#569:JdbcFilter.JDBC.DUCK(input=RelSubset#27,condition=AND(>=($4, 1993-02-01), <($4, +(1993-02-01, 3:INTERVAL MONTH)))), rowcount=25.0, cumulative cost={125.0 rows, 201.0 cpu, 0.0 io}
	rel#589:RelSubset#37.ENUMERABLE, best=rel#588
		rel#588:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#570), rowcount=25.0, cumulative cost={127.5 rows, 203.5 cpu, 0.0 io}
Set#38, type: RecordType(BIGINT c_custkey, VARCHAR(0) c_name, VARCHAR(0) c_address, INTEGER c_nationkey, VARCHAR(0) c_phone, DECIMAL(15, 2) c_acctbal, VARCHAR(0) c_mktsegment, VARCHAR(0) c_comment, BIGINT o_orderkey, BIGINT o_custkey, VARCHAR(0) o_orderstatus, DECIMAL(15, 2) o_totalprice, DATE o_orderdate, VARCHAR(0) o_orderpriority, VARCHAR(0) o_clerk, INTEGER o_shippriority, VARCHAR(0) o_comment)
	rel#552:RelSubset#38.NONE, best=null
		rel#551:LogicalJoin.NONE(left=RelSubset#451,right=RelSubset#550,condition==($0, $9),joinType=inner), rowcount=375.0, cumulative cost={inf}
	rel#572:RelSubset#38.JDBC.DUCK, best=rel#571
		rel#571:JdbcJoin.JDBC.DUCK(left=RelSubset#451,right=RelSubset#570,condition==($0, $9),joinType=inner), rowcount=375.0, cumulative cost={600.0 rows, 302.0 cpu, 0.0 io}
	rel#592:RelSubset#38.ENUMERABLE, best=rel#591
		rel#591:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#572), rowcount=375.0, cumulative cost={637.5 rows, 339.5 cpu, 0.0 io}
Set#39, type: RecordType(BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment)
	rel#554:RelSubset#39.NONE, best=null
		rel#553:LogicalFilter.NONE(input=RelSubset#97,condition==(CAST($8):VARCHAR(1) NOT NULL, 'R')), rowcount=15.0, cumulative cost={inf}
	rel#574:RelSubset#39.JDBC.DUCK, best=rel#573
		rel#573:JdbcFilter.JDBC.DUCK(input=RelSubset#97,condition==(CAST($8):VARCHAR(1) NOT NULL, 'R')), rowcount=15.0, cumulative cost={115.0 rows, 201.0 cpu, 0.0 io}
	rel#595:RelSubset#39.ENUMERABLE, best=rel#594
		rel#594:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#574), rowcount=15.0, cumulative cost={116.5 rows, 202.5 cpu, 0.0 io}
Set#40, type: RecordType(BIGINT c_custkey, VARCHAR(0) c_name, VARCHAR(0) c_address, INTEGER c_nationkey, VARCHAR(0) c_phone, DECIMAL(15, 2) c_acctbal, VARCHAR(0) c_mktsegment, VARCHAR(0) c_comment, BIGINT o_orderkey, BIGINT o_custkey, VARCHAR(0) o_orderstatus, DECIMAL(15, 2) o_totalprice, DATE o_orderdate, VARCHAR(0) o_orderpriority, VARCHAR(0) o_clerk, INTEGER o_shippriority, VARCHAR(0) o_comment, BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment)
	rel#556:RelSubset#40.NONE, best=null
		rel#555:LogicalJoin.NONE(left=RelSubset#552,right=RelSubset#554,condition==($17, $8),joinType=inner), rowcount=843.75, cumulative cost={inf}
	rel#576:RelSubset#40.JDBC.DUCK, best=rel#575
		rel#575:JdbcJoin.JDBC.DUCK(left=RelSubset#572,right=RelSubset#574,condition==($17, $8),joinType=inner), rowcount=843.75, cumulative cost={1558.75 rows, 503.0 cpu, 0.0 io}
	rel#598:RelSubset#40.ENUMERABLE, best=rel#597
		rel#597:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#576), rowcount=843.75, cumulative cost={1643.125 rows, 587.375 cpu, 0.0 io}
Set#41, type: RecordType(BIGINT c_custkey, VARCHAR(0) c_name, VARCHAR(0) c_address, INTEGER c_nationkey, VARCHAR(0) c_phone, DECIMAL(15, 2) c_acctbal, VARCHAR(0) c_mktsegment, VARCHAR(0) c_comment, BIGINT o_orderkey, BIGINT o_custkey, VARCHAR(0) o_orderstatus, DECIMAL(15, 2) o_totalprice, DATE o_orderdate, VARCHAR(0) o_orderpriority, VARCHAR(0) o_clerk, INTEGER o_shippriority, VARCHAR(0) o_comment, BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment, INTEGER n_nationkey, VARCHAR(0) n_name, INTEGER n_regionkey, VARCHAR(0) n_comment)
	rel#558:RelSubset#41.NONE, best=null
		rel#557:LogicalJoin.NONE(left=RelSubset#556,right=RelSubset#210,condition==($3, $33),joinType=inner), rowcount=12656.25, cumulative cost={inf}
	rel#578:RelSubset#41.JDBC.DUCK, best=rel#577
		rel#577:JdbcJoin.JDBC.DUCK(left=RelSubset#576,right=RelSubset#210,condition==($3, $33),joinType=inner), rowcount=12656.25, cumulative cost={14315.0 rows, 604.0 cpu, 0.0 io}
	rel#601:RelSubset#41.ENUMERABLE, best=rel#600
		rel#600:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#578), rowcount=12656.25, cumulative cost={15580.625 rows, 1869.625 cpu, 0.0 io}
Set#42, type: RecordType(BIGINT c_custkey, VARCHAR(0) c_name, DECIMAL(15, 2) c_acctbal, VARCHAR(0) c_phone, VARCHAR(0) n_name, VARCHAR(0) c_address, VARCHAR(0) c_comment, DECIMAL(19, 4) $f7)
	rel#560:RelSubset#42.NONE, best=null
		rel#559:LogicalProject.NONE(input=RelSubset#558,inputs=0..1,exprs=[$5, $4, $34, $2, $7, *($22, -(1, $23))]), rowcount=12656.25, cumulative cost={inf}
	rel#580:RelSubset#42.JDBC.DUCK, best=rel#579
		rel#579:JdbcProject.JDBC.DUCK(input=RelSubset#578,inputs=0..1,exprs=[$5, $4, $34, $2, $7, *($22, -(1, $23))]), rowcount=12656.25, cumulative cost={24440.0 rows, 81604.0 cpu, 0.0 io}
	rel#604:RelSubset#42.ENUMERABLE, best=rel#603
		rel#603:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#580), rowcount=12656.25, cumulative cost={25705.625 rows, 82869.625 cpu, 0.0 io}
Set#43, type: RecordType(BIGINT c_custkey, VARCHAR(0) c_name, DECIMAL(15, 2) c_acctbal, VARCHAR(0) c_phone, VARCHAR(0) n_name, VARCHAR(0) c_address, VARCHAR(0) c_comment, DECIMAL(19, 4) REVENUE)
	rel#562:RelSubset#43.NONE, best=null
		rel#561:LogicalAggregate.NONE(input=RelSubset#560,group={0, 1, 2, 3, 4, 5, 6},REVENUE=SUM($7)), rowcount=1265.625, cumulative cost={inf}
	rel#582:RelSubset#43.JDBC.DUCK, best=rel#581
		rel#581:JdbcAggregate.JDBC.DUCK(input=RelSubset#580,group={0, 1, 2, 3, 4, 5, 6},REVENUE=SUM($7)), rowcount=1265.625, cumulative cost={25879.648497849703 rows, 81604.0 cpu, 0.0 io}
	rel#607:RelSubset#43.ENUMERABLE, best=rel#606
		rel#606:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#582), rowcount=1265.625, cumulative cost={26006.210997849703 rows, 81730.5625 cpu, 0.0 io}
Set#44, type: RecordType(BIGINT C_CUSTKEY, VARCHAR(0) C_NAME, DECIMAL(19, 4) REVENUE, DECIMAL(15, 2) C_ACCTBAL, VARCHAR(0) N_NAME, VARCHAR(0) C_ADDRESS, VARCHAR(0) C_PHONE, VARCHAR(0) C_COMMENT)
	rel#564:RelSubset#44.NONE, best=null
		rel#563:LogicalProject.NONE(input=RelSubset#562,inputs=0..1,exprs=[$7, $2, $4, $5, $3, $6]), rowcount=1265.625, cumulative cost={inf}
	rel#584:RelSubset#44.JDBC.DUCK, best=rel#583
		rel#583:JdbcProject.JDBC.DUCK(input=RelSubset#582,inputs=0..1,exprs=[$7, $2, $4, $5, $3, $6]), rowcount=1265.625, cumulative cost={26892.148497849703 rows, 89704.0 cpu, 0.0 io}
	rel#610:RelSubset#44.ENUMERABLE, best=rel#609
		rel#609:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#584), rowcount=1265.625, cumulative cost={27018.710997849703 rows, 89830.5625 cpu, 0.0 io}
Set#45, type: RecordType(BIGINT C_CUSTKEY, VARCHAR(0) C_NAME, DECIMAL(19, 4) REVENUE, DECIMAL(15, 2) C_ACCTBAL, VARCHAR(0) N_NAME, VARCHAR(0) C_ADDRESS, VARCHAR(0) C_PHONE, VARCHAR(0) C_COMMENT)
	rel#566:RelSubset#45.NONE, best=null
		rel#565:LogicalSort.NONE(input=RelSubset#564,sort0=$2,dir0=DESC,fetch=20), rowcount=20.0, cumulative cost={inf}
	rel#567:RelSubset#45.ENUMERABLE, best=rel#612
		rel#568:AbstractConverter.ENUMERABLE(input=RelSubset#566,convention=ENUMERABLE), rowcount=20.0, cumulative cost={inf}
		rel#612:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#586), rowcount=20.0, cumulative cost={26912.148497849703 rows, 239848.3568851841 cpu, 0.0 io}
	rel#586:RelSubset#45.JDBC.DUCK, best=rel#585
		rel#585:JdbcSort.JDBC.DUCK(input=RelSubset#584,sort0=$2,dir0=DESC,fetch=20), rowcount=20.0, cumulative cost={26910.148497849703 rows, 239846.3568851841 cpu, 0.0 io}
Set#46, type: RecordType(BIGINT supplier_no, DECIMAL(19, 4) total_revenue)
	rel#653:RelSubset#46.JDBC.DUCK, best=rel#626
		rel#626:JdbcTableScan.JDBC.DUCK(table=[DUCK, revenue0r15721]), rowcount=100.0, cumulative cost={100.0 rows, 101.0 cpu, 0.0 io}
	rel#666:RelSubset#46.ENUMERABLE, best=rel#665
		rel#665:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#653), rowcount=100.0, cumulative cost={110.0 rows, 111.0 cpu, 0.0 io}
Set#47, type: RecordType(BIGINT supplier_no, DECIMAL(19, 4) total_revenue)
	rel#655:RelSubset#47.NONE, best=null
		rel#654:LogicalFilter.NONE(input=RelSubset#653,condition==($1, $SCALAR_QUERY({
LogicalAggregate(group=[{}], EXPR$0=[MAX($0)])
  LogicalProject(total_revenue=[$1])
    JdbcTableScan(table=[[DUCK, revenue0r15721]])
}))), rowcount=15.0, cumulative cost={inf}
	rel#668:RelSubset#47.JDBC.DUCK, best=rel#667
		rel#667:JdbcFilter.JDBC.DUCK(input=RelSubset#653,condition==($1, $SCALAR_QUERY({
LogicalAggregate(group=[{}], EXPR$0=[MAX($0)])
  LogicalProject(total_revenue=[$1])
    JdbcTableScan(table=[[DUCK, revenue0r15721]])
}))), rowcount=15.0, cumulative cost={115.0 rows, 201.0 cpu, 0.0 io}
	rel#677:RelSubset#47.ENUMERABLE, best=rel#676
		rel#676:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#668), rowcount=15.0, cumulative cost={116.5 rows, 202.5 cpu, 0.0 io}
Set#48, type: RecordType(BIGINT s_suppkey, VARCHAR(0) s_name, VARCHAR(0) s_address, INTEGER s_nationkey, VARCHAR(0) s_phone, DECIMAL(15, 2) s_acctbal, VARCHAR(0) s_comment, BIGINT supplier_no, DECIMAL(19, 4) total_revenue)
	rel#657:RelSubset#48.NONE, best=null
		rel#656:LogicalJoin.NONE(left=RelSubset#345,right=RelSubset#655,condition==($0, $7),joinType=inner), rowcount=225.0, cumulative cost={inf}
	rel#670:RelSubset#48.JDBC.DUCK, best=rel#669
		rel#669:JdbcJoin.JDBC.DUCK(left=RelSubset#345,right=RelSubset#668,condition==($0, $7),joinType=inner), rowcount=225.0, cumulative cost={440.0 rows, 302.0 cpu, 0.0 io}
	rel#680:RelSubset#48.ENUMERABLE, best=rel#679
		rel#679:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#670), rowcount=225.0, cumulative cost={462.5 rows, 324.5 cpu, 0.0 io}
Set#49, type: RecordType(BIGINT S_SUPPKEY, VARCHAR(0) S_NAME, VARCHAR(0) S_ADDRESS, VARCHAR(0) S_PHONE, DECIMAL(19, 4) TOTAL_REVENUE)
	rel#659:RelSubset#49.NONE, best=null
		rel#658:LogicalProject.NONE(input=RelSubset#657,inputs=0..2,exprs=[$4, $8]), rowcount=225.0, cumulative cost={inf}
	rel#672:RelSubset#49.JDBC.DUCK, best=rel#671
		rel#671:JdbcProject.JDBC.DUCK(input=RelSubset#670,inputs=0..2,exprs=[$4, $8]), rowcount=225.0, cumulative cost={620.0 rows, 1202.0 cpu, 0.0 io}
	rel#683:RelSubset#49.ENUMERABLE, best=rel#682
		rel#682:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#672), rowcount=225.0, cumulative cost={642.5 rows, 1224.5 cpu, 0.0 io}
Set#50, type: RecordType(BIGINT S_SUPPKEY, VARCHAR(0) S_NAME, VARCHAR(0) S_ADDRESS, VARCHAR(0) S_PHONE, DECIMAL(19, 4) TOTAL_REVENUE)
	rel#661:RelSubset#50.NONE, best=null
		rel#660:LogicalSort.NONE(input=RelSubset#659,sort0=$0,dir0=ASC), rowcount=225.0, cumulative cost={inf}
	rel#662:RelSubset#50.ENUMERABLE, best=rel#685
		rel#663:AbstractConverter.ENUMERABLE(input=RelSubset#661,convention=ENUMERABLE), rowcount=225.0, cumulative cost={inf}
		rel#685:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#674), rowcount=225.0, cumulative cost={845.0 rows, 36320.83060628464 cpu, 0.0 io}
	rel#674:RelSubset#50.JDBC.DUCK, best=rel#673
		rel#673:JdbcSort.JDBC.DUCK(input=RelSubset#672,sort0=$0,dir0=ASC), rowcount=225.0, cumulative cost={822.5 rows, 36298.33060628464 cpu, 0.0 io}
Set#51, type: RecordType(BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment, BIGINT p_partkey, VARCHAR(0) p_name, VARCHAR(0) p_mfgr, VARCHAR(0) p_brand, VARCHAR(0) p_type, INTEGER p_size, VARCHAR(0) p_container, DECIMAL(15, 2) p_retailprice, VARCHAR(0) p_comment)
	rel#715:RelSubset#51.NONE, best=null
		rel#714:LogicalJoin.NONE(left=RelSubset#97,right=RelSubset#100,condition=OR(AND(=($16, $1), =(CAST($19):VARCHAR(8) NOT NULL, 'Brand#52'), OR(=($22, 'SM CASE'), =($22, 'SM BOX'), =($22, 'SM PACK'), =($22, 'SM PKG')), >=($4, 9), <=($4, +(9, 10)), >=($21, 1), <=($21, 5), OR(=($14, 'AIR'), =($14, 'AIR REG')), =(CAST($13):VARCHAR(17) NOT NULL, 'DELIVER IN PERSON')), AND(=($16, $1), =(CAST($19):VARCHAR(8) NOT NULL, 'Brand#42'), OR(=($22, 'MED BAG'), =($22, 'MED BOX'), =($22, 'MED PKG'), =($22, 'MED PACK')), >=($4, 18), <=($4, +(18, 10)), >=($21, 1), <=($21, 10), OR(=($14, 'AIR'), =($14, 'AIR REG')), =(CAST($13):VARCHAR(17) NOT NULL, 'DELIVER IN PERSON')), AND(=($16, $1), =(CAST($19):VARCHAR(8) NOT NULL, 'Brand#23'), OR(=($22, 'LG CASE'), =($22, 'LG BOX'), =($22, 'LG PACK'), =($22, 'LG PKG')), >=($4, 22), <=($4, +(22, 10)), >=($21, 1), <=($21, 15), OR(=($14, 'AIR'), =($14, 'AIR REG')), =(CAST($13):VARCHAR(17) NOT NULL, 'DELIVER IN PERSON'))),joinType=inner), rowcount=2500.0, cumulative cost={inf}
	rel#722:RelSubset#51.JDBC.DUCK, best=null
Set#52, type: RecordType(DECIMAL(19, 4) $f0)
	rel#717:RelSubset#52.NONE, best=null
		rel#716:LogicalProject.NONE(input=RelSubset#715,exprs=[*($5, -(1, $6))]), rowcount=2500.0, cumulative cost={inf}
	rel#724:RelSubset#52.JDBC.DUCK, best=null
		rel#723:JdbcProject.JDBC.DUCK(input=RelSubset#722,exprs=[*($5, -(1, $6))]), rowcount=2500.0, cumulative cost={inf}
	rel#729:RelSubset#52.ENUMERABLE, best=null
		rel#728:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#724), rowcount=2500.0, cumulative cost={inf}
Set#53, type: RecordType(DECIMAL(19, 4) REVENUE)
	rel#719:RelSubset#53.NONE, best=null
		rel#718:LogicalAggregate.NONE(input=RelSubset#717,group={},REVENUE=SUM($0)), rowcount=1.0, cumulative cost={inf}
	rel#720:RelSubset#53.ENUMERABLE, best=null
		rel#721:AbstractConverter.ENUMERABLE(input=RelSubset#719,convention=ENUMERABLE), rowcount=1.0, cumulative cost={inf}
		rel#731:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#726), rowcount=1.0, cumulative cost={inf}
	rel#726:RelSubset#53.JDBC.DUCK, best=null
		rel#725:JdbcAggregate.JDBC.DUCK(input=RelSubset#724,group={},REVENUE=SUM($0)), rowcount=1.0, cumulative cost={inf}

Graphviz:
digraph G {
	root [style=filled,label="Root"];
	subgraph cluster0{
		label="Set 0 RecordType(BIGINT o_orderkey, BIGINT o_custkey, VARCHAR(0) o_orderstatus, DECIMAL(15, 2) o_totalprice, DATE o_orderdate, VARCHAR(0) o_orderpriority, VARCHAR(0) o_clerk, INTEGER o_shippriority, VARCHAR(0) o_comment)";
		rel1 [label="rel#1:JdbcTableScan\ntable=[DUCK, orders]\nrows=100.0, cost={100.0 rows, 101.0 cpu, 0.0 io}",color=blue,shape=box]
		rel41 [label="rel#41:JdbcToEnumerableConverter\ninput=RelSubset#27\nrows=100.0, cost={110.0 rows, 111.0 cpu, 0.0 io}",color=blue,shape=box]
		subset27 [label="rel#27:RelSubset#0.JDBC.DUCK"]
		subset42 [label="rel#42:RelSubset#0.ENUMERABLE"]
	}
	subgraph cluster1{
		label="Set 1 RecordType(BIGINT o_orderkey, BIGINT o_custkey, VARCHAR(0) o_orderstatus, DECIMAL(15, 2) o_totalprice, DATE o_orderdate, VARCHAR(0) o_orderpriority, VARCHAR(0) o_clerk, INTEGER o_shippriority, VARCHAR(0) o_comment)";
		rel28 [label="rel#28:LogicalFilter\ninput=RelSubset#27,condition=AND(>=($4, 1996-01-01), <($4, +(1996-01-01, 3:INTERVAL MONTH)), EXISTS({\nLogicalFilter(condition=[AND(=($0, $cor0.o_orderkey), <($11, $12))])\n  JdbcTableScan(table=[[DUCK, lineitem]])\n})),variablesSet=[$cor0]\nrows=6.25, cost={inf}",shape=box]
		rel43 [label="rel#43:JdbcFilter\ninput=RelSubset#27,condition=AND(>=($4, 1996-01-01), <($4, +(1996-01-01, 3:INTERVAL MONTH)), EXISTS({\nLogicalFilter(condition=[AND(=($0, $cor0.o_orderkey), <($11, $12))])\n  JdbcTableScan(table=[[DUCK, lineitem]])\n}))\nrows=6.25, cost={106.25 rows, 201.0 cpu, 0.0 io}",color=blue,shape=box]
		rel52 [label="rel#52:JdbcToEnumerableConverter\ninput=RelSubset#44\nrows=6.25, cost={106.875 rows, 201.625 cpu, 0.0 io}",color=blue,shape=box]
		subset29 [label="rel#29:RelSubset#1.NONE"]
		subset44 [label="rel#44:RelSubset#1.JDBC.DUCK"]
		subset53 [label="rel#53:RelSubset#1.ENUMERABLE"]
	}
	subgraph cluster2{
		label="Set 2 RecordType(VARCHAR(0) o_orderpriority)";
		rel30 [label="rel#30:LogicalProject\ninput=RelSubset#29,exprs=[$5]\nrows=6.25, cost={inf}",shape=box]
		rel45 [label="rel#45:JdbcProject\ninput=RelSubset#44,exprs=[$5]\nrows=6.25, cost={111.25 rows, 206.0 cpu, 0.0 io}",color=blue,shape=box]
		rel55 [label="rel#55:JdbcToEnumerableConverter\ninput=RelSubset#46\nrows=6.25, cost={111.875 rows, 206.625 cpu, 0.0 io}",color=blue,shape=box]
		subset31 [label="rel#31:RelSubset#2.NONE"]
		subset46 [label="rel#46:RelSubset#2.JDBC.DUCK"]
		subset56 [label="rel#56:RelSubset#2.ENUMERABLE"]
	}
	subgraph cluster3{
		label="Set 3 RecordType(VARCHAR(0) o_orderpriority, BIGINT ORDER_COUNT)";
		rel32 [label="rel#32:LogicalAggregate\ninput=RelSubset#31,group={0},ORDER_COUNT=COUNT()\nrows=1.0, cost={inf}",shape=box]
		rel47 [label="rel#47:JdbcAggregate\ninput=RelSubset#46,group={0},ORDER_COUNT=COUNT()\nrows=1.0, cost={112.375 rows, 206.0 cpu, 0.0 io}",color=blue,shape=box]
		rel58 [label="rel#58:JdbcToEnumerableConverter\ninput=RelSubset#48\nrows=1.0, cost={112.475 rows, 206.1 cpu, 0.0 io}",color=blue,shape=box]
		subset33 [label="rel#33:RelSubset#3.NONE"]
		subset48 [label="rel#48:RelSubset#3.JDBC.DUCK"]
		subset59 [label="rel#59:RelSubset#3.ENUMERABLE"]
	}
	subgraph cluster5{
		label="Set 5 RecordType(VARCHAR(0) O_ORDERPRIORITY, BIGINT ORDER_COUNT)";
		rel36 [label="rel#36:LogicalSort\ninput=RelSubset#33,sort0=$0,dir0=ASC\nrows=1.0, cost={inf}",shape=box]
		rel39 [label="rel#39:AbstractConverter\ninput=RelSubset#37,convention=ENUMERABLE\nrows=1.0, cost={inf}",shape=box]
		rel49 [label="rel#49:JdbcSort\ninput=RelSubset#48,sort0=$0,dir0=ASC\nrows=1.0, cost={113.275 rows, 224.0 cpu, 0.0 io}",color=blue,shape=box]
		rel61 [label="rel#61:JdbcToEnumerableConverter\ninput=RelSubset#50\nrows=1.0, cost={113.375 rows, 224.1 cpu, 0.0 io}",color=blue,shape=box]
		subset37 [label="rel#37:RelSubset#5.NONE"]
		subset38 [label="rel#38:RelSubset#5.ENUMERABLE"]
		subset50 [label="rel#50:RelSubset#5.JDBC.DUCK"]
	}
	subgraph cluster6{
		label="Set 6 RecordType(BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment)";
		rel68 [label="rel#68:JdbcTableScan\ntable=[DUCK, lineitem]\nrows=100.0, cost={100.0 rows, 101.0 cpu, 0.0 io}",color=blue,shape=box]
		rel112 [label="rel#112:JdbcToEnumerableConverter\ninput=RelSubset#97\nrows=100.0, cost={110.0 rows, 111.0 cpu, 0.0 io}",color=blue,shape=box]
		subset97 [label="rel#97:RelSubset#6.JDBC.DUCK"]
		subset113 [label="rel#113:RelSubset#6.ENUMERABLE"]
	}
	subgraph cluster7{
		label="Set 7 RecordType(BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment)";
		rel98 [label="rel#98:LogicalFilter\ninput=RelSubset#97,condition=AND(>=($10, 1995-05-01), <($10, +(1995-05-01, 1:INTERVAL MONTH)))\nrows=25.0, cost={inf}",shape=box]
		rel114 [label="rel#114:JdbcFilter\ninput=RelSubset#97,condition=AND(>=($10, 1995-05-01), <($10, +(1995-05-01, 1:INTERVAL MONTH)))\nrows=25.0, cost={125.0 rows, 201.0 cpu, 0.0 io}",color=blue,shape=box]
		rel128 [label="rel#128:JdbcToEnumerableConverter\ninput=RelSubset#115\nrows=25.0, cost={127.5 rows, 203.5 cpu, 0.0 io}",color=blue,shape=box]
		subset99 [label="rel#99:RelSubset#7.NONE"]
		subset115 [label="rel#115:RelSubset#7.JDBC.DUCK"]
		subset129 [label="rel#129:RelSubset#7.ENUMERABLE"]
	}
	subgraph cluster8{
		label="Set 8 RecordType(BIGINT p_partkey, VARCHAR(0) p_name, VARCHAR(0) p_mfgr, VARCHAR(0) p_brand, VARCHAR(0) p_type, INTEGER p_size, VARCHAR(0) p_container, DECIMAL(15, 2) p_retailprice, VARCHAR(0) p_comment)";
		rel70 [label="rel#70:JdbcTableScan\ntable=[DUCK, part]\nrows=100.0, cost={100.0 rows, 101.0 cpu, 0.0 io}",color=blue,shape=box]
		rel117 [label="rel#117:JdbcToEnumerableConverter\ninput=RelSubset#100\nrows=100.0, cost={110.0 rows, 111.0 cpu, 0.0 io}",color=blue,shape=box]
		subset100 [label="rel#100:RelSubset#8.JDBC.DUCK"]
		subset118 [label="rel#118:RelSubset#8.ENUMERABLE"]
	}
	subgraph cluster9{
		label="Set 9 RecordType(BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment, BIGINT p_partkey, VARCHAR(0) p_name, VARCHAR(0) p_mfgr, VARCHAR(0) p_brand, VARCHAR(0) p_type, INTEGER p_size, VARCHAR(0) p_container, DECIMAL(15, 2) p_retailprice, VARCHAR(0) p_comment)";
		rel101 [label="rel#101:LogicalJoin\nleft=RelSubset#99,right=RelSubset#100,condition==($1, $16),joinType=inner\nrows=375.0, cost={inf}",shape=box]
		rel119 [label="rel#119:JdbcJoin\nleft=RelSubset#115,right=RelSubset#100,condition==($1, $16),joinType=inner\nrows=375.0, cost={600.0 rows, 302.0 cpu, 0.0 io}",color=blue,shape=box]
		rel131 [label="rel#131:JdbcToEnumerableConverter\ninput=RelSubset#120\nrows=375.0, cost={637.5 rows, 339.5 cpu, 0.0 io}",color=blue,shape=box]
		subset102 [label="rel#102:RelSubset#9.NONE"]
		subset120 [label="rel#120:RelSubset#9.JDBC.DUCK"]
		subset132 [label="rel#132:RelSubset#9.ENUMERABLE"]
	}
	subgraph cluster10{
		label="Set 10 RecordType(DECIMAL(19, 4) $f0, DECIMAL(19, 4) $f1)";
		rel103 [label="rel#103:LogicalProject\ninput=RelSubset#102,exprs=[CASE(LIKE($20, 'PROMO%'), *($5, -(1, $6)), 0:DECIMAL(19, 4)), *($5, -(1, $6))]\nrows=375.0, cost={inf}",shape=box]
		rel121 [label="rel#121:JdbcProject\ninput=RelSubset#120,exprs=[CASE(LIKE($20, 'PROMO%'), *($5, -(1, $6)), 0:DECIMAL(19, 4)), *($5, -(1, $6))]\nrows=375.0, cost={900.0 rows, 902.0 cpu, 0.0 io}",color=blue,shape=box]
		rel134 [label="rel#134:JdbcToEnumerableConverter\ninput=RelSubset#122\nrows=375.0, cost={937.5 rows, 939.5 cpu, 0.0 io}",color=blue,shape=box]
		subset104 [label="rel#104:RelSubset#10.NONE"]
		subset122 [label="rel#122:RelSubset#10.JDBC.DUCK"]
		subset135 [label="rel#135:RelSubset#10.ENUMERABLE"]
	}
	subgraph cluster11{
		label="Set 11 RecordType(DECIMAL(19, 4) $f0, DECIMAL(19, 4) $f1)";
		rel105 [label="rel#105:LogicalAggregate\ninput=RelSubset#104,group={},agg#0=SUM($0),agg#1=SUM($1)\nrows=1.0, cost={inf}",shape=box]
		rel123 [label="rel#123:JdbcAggregate\ninput=RelSubset#122,group={},agg#0=SUM($0),agg#1=SUM($1)\nrows=1.0, cost={901.2750000953674 rows, 902.0 cpu, 0.0 io}",color=blue,shape=box]
		rel137 [label="rel#137:JdbcToEnumerableConverter\ninput=RelSubset#124\nrows=1.0, cost={901.3750000953675 rows, 902.1 cpu, 0.0 io}",color=blue,shape=box]
		subset106 [label="rel#106:RelSubset#11.NONE"]
		subset124 [label="rel#124:RelSubset#11.JDBC.DUCK"]
		subset138 [label="rel#138:RelSubset#11.ENUMERABLE"]
	}
	subgraph cluster12{
		label="Set 12 RecordType(DECIMAL(19, 2) PROMO_REVENUE)";
		rel107 [label="rel#107:LogicalProject\ninput=RelSubset#106,exprs=[/(*(100.00:DECIMAL(5, 2), $0), $1)]\nrows=1.0, cost={inf}",shape=box]
		rel110 [label="rel#110:AbstractConverter\ninput=RelSubset#108,convention=ENUMERABLE\nrows=1.0, cost={inf}",shape=box]
		rel125 [label="rel#125:JdbcProject\ninput=RelSubset#124,exprs=[/(*(100.00:DECIMAL(5, 2), $0), $1)]\nrows=1.0, cost={902.0750000953674 rows, 902.8 cpu, 0.0 io}",color=blue,shape=box]
		rel140 [label="rel#140:JdbcToEnumerableConverter\ninput=RelSubset#126\nrows=1.0, cost={902.1750000953674 rows, 902.9 cpu, 0.0 io}",color=blue,shape=box]
		subset108 [label="rel#108:RelSubset#12.NONE"]
		subset109 [label="rel#109:RelSubset#12.ENUMERABLE"]
		subset126 [label="rel#126:RelSubset#12.JDBC.DUCK"]
	}
	subgraph cluster13{
		label="Set 13 RecordType(BIGINT s_suppkey, VARCHAR(0) s_name, VARCHAR(0) s_address, INTEGER s_nationkey, VARCHAR(0) s_phone, DECIMAL(15, 2) s_acctbal, VARCHAR(0) s_comment, BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment, BIGINT o_orderkey, BIGINT o_custkey, VARCHAR(0) o_orderstatus, DECIMAL(15, 2) o_totalprice, DATE o_orderdate, VARCHAR(0) o_orderpriority, VARCHAR(0) o_clerk, INTEGER o_shippriority, VARCHAR(0) o_comment)";
		rel202 [label="rel#202:LogicalValues\ntype=RecordType(BIGINT s_suppkey, VARCHAR(0) s_name, VARCHAR(0) s_address, INTEGER s_nationkey, VARCHAR(0) s_phone, DECIMAL(15, 2) s_acctbal, VARCHAR(0) s_comment, BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment, BIGINT o_orderkey, BIGINT o_custkey, VARCHAR(0) o_orderstatus, DECIMAL(15, 2) o_totalprice, DATE o_orderdate, VARCHAR(0) o_orderpriority, VARCHAR(0) o_clerk, INTEGER o_shippriority, VARCHAR(0) o_comment),tuples=[]\nrows=1.0, cost={inf}",shape=box]
		rel225 [label="rel#225:JdbcValues\ntype=RecordType(BIGINT s_suppkey, VARCHAR(0) s_name, VARCHAR(0) s_address, INTEGER s_nationkey, VARCHAR(0) s_phone, DECIMAL(15, 2) s_acctbal, VARCHAR(0) s_comment, BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment, BIGINT o_orderkey, BIGINT o_custkey, VARCHAR(0) o_orderstatus, DECIMAL(15, 2) o_totalprice, DATE o_orderdate, VARCHAR(0) o_orderpriority, VARCHAR(0) o_clerk, INTEGER o_shippriority, VARCHAR(0) o_comment),tuples=[]\nrows=1.0, cost={1.0 rows, 1.0 cpu, 0.0 io}",color=blue,shape=box]
		rel241 [label="rel#241:JdbcToEnumerableConverter\ninput=RelSubset#226\nrows=1.0, cost={1.1 rows, 1.1 cpu, 0.0 io}",color=blue,shape=box]
		subset209 [label="rel#209:RelSubset#13.NONE"]
		subset226 [label="rel#226:RelSubset#13.JDBC.DUCK"]
		subset242 [label="rel#242:RelSubset#13.ENUMERABLE"]
	}
	subgraph cluster14{
		label="Set 14 RecordType(INTEGER n_nationkey, VARCHAR(0) n_name, INTEGER n_regionkey, VARCHAR(0) n_comment)";
		rel158 [label="rel#158:JdbcTableScan\ntable=[DUCK, nation]\nrows=100.0, cost={100.0 rows, 101.0 cpu, 0.0 io}",color=blue,shape=box]
		rel228 [label="rel#228:JdbcToEnumerableConverter\ninput=RelSubset#210\nrows=100.0, cost={110.0 rows, 111.0 cpu, 0.0 io}",color=blue,shape=box]
		subset210 [label="rel#210:RelSubset#14.JDBC.DUCK"]
		subset229 [label="rel#229:RelSubset#14.ENUMERABLE"]
	}
	subgraph cluster15{
		label="Set 15 RecordType(INTEGER n_nationkey, VARCHAR(0) n_name, INTEGER n_regionkey, VARCHAR(0) n_comment)";
		rel211 [label="rel#211:LogicalFilter\ninput=RelSubset#210,condition==(CAST($1):VARCHAR(5) NOT NULL, 'CHINA')\nrows=15.0, cost={inf}",shape=box]
		rel230 [label="rel#230:JdbcFilter\ninput=RelSubset#210,condition==(CAST($1):VARCHAR(5) NOT NULL, 'CHINA')\nrows=15.0, cost={115.0 rows, 201.0 cpu, 0.0 io}",color=blue,shape=box]
		rel244 [label="rel#244:JdbcToEnumerableConverter\ninput=RelSubset#231\nrows=15.0, cost={116.5 rows, 202.5 cpu, 0.0 io}",color=blue,shape=box]
		subset212 [label="rel#212:RelSubset#15.NONE"]
		subset231 [label="rel#231:RelSubset#15.JDBC.DUCK"]
		subset245 [label="rel#245:RelSubset#15.ENUMERABLE"]
	}
	subgraph cluster16{
		label="Set 16 RecordType(BIGINT s_suppkey, VARCHAR(0) s_name, VARCHAR(0) s_address, INTEGER s_nationkey, VARCHAR(0) s_phone, DECIMAL(15, 2) s_acctbal, VARCHAR(0) s_comment, BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment, BIGINT o_orderkey, BIGINT o_custkey, VARCHAR(0) o_orderstatus, DECIMAL(15, 2) o_totalprice, DATE o_orderdate, VARCHAR(0) o_orderpriority, VARCHAR(0) o_clerk, INTEGER o_shippriority, VARCHAR(0) o_comment, INTEGER n_nationkey, VARCHAR(0) n_name, INTEGER n_regionkey, VARCHAR(0) n_comment)";
		rel213 [label="rel#213:LogicalJoin\nleft=RelSubset#209,right=RelSubset#212,condition==($3, $32),joinType=inner\nrows=2.25, cost={inf}",shape=box]
		rel232 [label="rel#232:JdbcJoin\nleft=RelSubset#226,right=RelSubset#231,condition==($3, $32),joinType=inner\nrows=2.25, cost={118.25 rows, 202.0 cpu, 0.0 io}",color=blue,shape=box]
		rel247 [label="rel#247:JdbcToEnumerableConverter\ninput=RelSubset#233\nrows=2.25, cost={118.475 rows, 202.225 cpu, 0.0 io}",color=blue,shape=box]
		subset214 [label="rel#214:RelSubset#16.NONE"]
		subset233 [label="rel#233:RelSubset#16.JDBC.DUCK"]
		subset248 [label="rel#248:RelSubset#16.ENUMERABLE"]
	}
	subgraph cluster17{
		label="Set 17 RecordType(VARCHAR(0) s_name)";
		rel215 [label="rel#215:LogicalProject\ninput=RelSubset#214,exprs=[$1]\nrows=2.25, cost={inf}",shape=box]
		rel234 [label="rel#234:JdbcProject\ninput=RelSubset#233,exprs=[$1]\nrows=2.25, cost={120.05 rows, 203.8 cpu, 0.0 io}",color=blue,shape=box]
		rel250 [label="rel#250:JdbcToEnumerableConverter\ninput=RelSubset#235\nrows=2.25, cost={120.27499999999999 rows, 204.025 cpu, 0.0 io}",color=blue,shape=box]
		subset216 [label="rel#216:RelSubset#17.NONE"]
		subset235 [label="rel#235:RelSubset#17.JDBC.DUCK"]
		subset251 [label="rel#251:RelSubset#17.ENUMERABLE"]
	}
	subgraph cluster18{
		label="Set 18 RecordType(VARCHAR(0) s_name, BIGINT NUMWAIT)";
		rel217 [label="rel#217:LogicalAggregate\ninput=RelSubset#216,group={0},NUMWAIT=COUNT()\nrows=1.0, cost={inf}",shape=box]
		rel236 [label="rel#236:JdbcAggregate\ninput=RelSubset#235,group={0},NUMWAIT=COUNT()\nrows=1.0, cost={121.175 rows, 203.8 cpu, 0.0 io}",color=blue,shape=box]
		rel253 [label="rel#253:JdbcToEnumerableConverter\ninput=RelSubset#237\nrows=1.0, cost={121.27499999999999 rows, 203.9 cpu, 0.0 io}",color=blue,shape=box]
		subset218 [label="rel#218:RelSubset#18.NONE"]
		subset237 [label="rel#237:RelSubset#18.JDBC.DUCK"]
		subset254 [label="rel#254:RelSubset#18.ENUMERABLE"]
	}
	subgraph cluster20{
		label="Set 20 RecordType(VARCHAR(0) S_NAME, BIGINT NUMWAIT)";
		rel221 [label="rel#221:LogicalSort\ninput=RelSubset#218,sort0=$1,sort1=$0,dir0=DESC,dir1=ASC,fetch=100\nrows=1.0, cost={inf}",shape=box]
		rel224 [label="rel#224:AbstractConverter\ninput=RelSubset#222,convention=ENUMERABLE\nrows=1.0, cost={inf}",shape=box]
		rel238 [label="rel#238:JdbcSort\ninput=RelSubset#237,sort0=$1,sort1=$0,dir0=DESC,dir1=ASC,fetch=100\nrows=1.0, cost={122.075 rows, 221.8 cpu, 0.0 io}",color=blue,shape=box]
		rel256 [label="rel#256:JdbcToEnumerableConverter\ninput=RelSubset#239\nrows=1.0, cost={122.175 rows, 221.9 cpu, 0.0 io}",color=blue,shape=box]
		subset222 [label="rel#222:RelSubset#20.NONE"]
		subset223 [label="rel#223:RelSubset#20.ENUMERABLE"]
		subset239 [label="rel#239:RelSubset#20.JDBC.DUCK"]
	}
	subgraph cluster21{
		label="Set 21 RecordType(BIGINT p_partkey, VARCHAR(0) p_name, VARCHAR(0) p_mfgr, VARCHAR(0) p_brand, VARCHAR(0) p_type, INTEGER p_size, VARCHAR(0) p_container, DECIMAL(15, 2) p_retailprice, VARCHAR(0) p_comment)";
		rel343 [label="rel#343:LogicalFilter\ninput=RelSubset#100,condition=LIKE($1, '%forest%')\nrows=25.0, cost={inf}",shape=box]
		rel365 [label="rel#365:JdbcFilter\ninput=RelSubset#100,condition=LIKE($1, '%forest%')\nrows=25.0, cost={125.0 rows, 201.0 cpu, 0.0 io}",color=blue,shape=box]
		rel390 [label="rel#390:JdbcToEnumerableConverter\ninput=RelSubset#366\nrows=25.0, cost={127.5 rows, 203.5 cpu, 0.0 io}",color=blue,shape=box]
		subset344 [label="rel#344:RelSubset#21.NONE"]
		subset366 [label="rel#366:RelSubset#21.JDBC.DUCK"]
		subset391 [label="rel#391:RelSubset#21.ENUMERABLE"]
	}
	subgraph cluster22{
		label="Set 22 RecordType(BIGINT s_suppkey, VARCHAR(0) s_name, VARCHAR(0) s_address, INTEGER s_nationkey, VARCHAR(0) s_phone, DECIMAL(15, 2) s_acctbal, VARCHAR(0) s_comment)";
		rel266 [label="rel#266:JdbcTableScan\ntable=[DUCK, supplier]\nrows=100.0, cost={100.0 rows, 101.0 cpu, 0.0 io}",color=blue,shape=box]
		rel368 [label="rel#368:JdbcToEnumerableConverter\ninput=RelSubset#345\nrows=100.0, cost={110.0 rows, 111.0 cpu, 0.0 io}",color=blue,shape=box]
		subset345 [label="rel#345:RelSubset#22.JDBC.DUCK"]
		subset369 [label="rel#369:RelSubset#22.ENUMERABLE"]
	}
	subgraph cluster23{
		label="Set 23 RecordType(BIGINT p_partkey, VARCHAR(0) p_name, VARCHAR(0) p_mfgr, VARCHAR(0) p_brand, VARCHAR(0) p_type, INTEGER p_size, VARCHAR(0) p_container, DECIMAL(15, 2) p_retailprice, VARCHAR(0) p_comment, BIGINT s_suppkey, VARCHAR(0) s_name, VARCHAR(0) s_address, INTEGER s_nationkey, VARCHAR(0) s_phone, DECIMAL(15, 2) s_acctbal, VARCHAR(0) s_comment)";
		rel346 [label="rel#346:LogicalJoin\nleft=RelSubset#344,right=RelSubset#345,condition=true,joinType=inner\nrows=2500.0, cost={inf}",shape=box]
		rel370 [label="rel#370:JdbcJoin\nleft=RelSubset#366,right=RelSubset#345,condition=true,joinType=inner\nrows=2500.0, cost={2725.0 rows, 302.0 cpu, 0.0 io}",color=blue,shape=box]
		rel393 [label="rel#393:JdbcToEnumerableConverter\ninput=RelSubset#371\nrows=2500.0, cost={2975.0 rows, 552.0 cpu, 0.0 io}",color=blue,shape=box]
		subset347 [label="rel#347:RelSubset#23.NONE"]
		subset371 [label="rel#371:RelSubset#23.JDBC.DUCK"]
		subset394 [label="rel#394:RelSubset#23.ENUMERABLE"]
	}
	subgraph cluster24{
		label="Set 24 RecordType(BIGINT p_partkey, VARCHAR(0) p_name, VARCHAR(0) p_mfgr, VARCHAR(0) p_brand, VARCHAR(0) p_type, INTEGER p_size, VARCHAR(0) p_container, DECIMAL(15, 2) p_retailprice, VARCHAR(0) p_comment, BIGINT s_suppkey, VARCHAR(0) s_name, VARCHAR(0) s_address, INTEGER s_nationkey, VARCHAR(0) s_phone, DECIMAL(15, 2) s_acctbal, VARCHAR(0) s_comment, BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment)";
		rel348 [label="rel#348:LogicalJoin\nleft=RelSubset#347,right=RelSubset#97,condition=AND(=($9, $18), =($0, $17)),joinType=inner\nrows=5625.0, cost={inf}",shape=box]
		rel372 [label="rel#372:JdbcJoin\nleft=RelSubset#371,right=RelSubset#97,condition=AND(=($9, $18), =($0, $17)),joinType=inner\nrows=5625.0, cost={8450.0 rows, 403.0 cpu, 0.0 io}",color=blue,shape=box]
		rel396 [label="rel#396:JdbcToEnumerableConverter\ninput=RelSubset#373\nrows=5625.0, cost={9012.5 rows, 965.5 cpu, 0.0 io}",color=blue,shape=box]
		subset349 [label="rel#349:RelSubset#24.NONE"]
		subset373 [label="rel#373:RelSubset#24.JDBC.DUCK"]
		subset397 [label="rel#397:RelSubset#24.ENUMERABLE"]
	}
	subgraph cluster25{
		label="Set 25 RecordType(BIGINT ps_partkey, BIGINT ps_suppkey, BIGINT ps_availqty, DECIMAL(15, 2) ps_supplycost, VARCHAR(0) ps_comment)";
		rel274 [label="rel#274:JdbcTableScan\ntable=[DUCK, partsupp]\nrows=100.0, cost={100.0 rows, 101.0 cpu, 0.0 io}",color=blue,shape=box]
		rel375 [label="rel#375:JdbcToEnumerableConverter\ninput=RelSubset#350\nrows=100.0, cost={110.0 rows, 111.0 cpu, 0.0 io}",color=blue,shape=box]
		subset350 [label="rel#350:RelSubset#25.JDBC.DUCK"]
		subset376 [label="rel#376:RelSubset#25.ENUMERABLE"]
	}
	subgraph cluster26{
		label="Set 26 RecordType(BIGINT p_partkey, VARCHAR(0) p_name, VARCHAR(0) p_mfgr, VARCHAR(0) p_brand, VARCHAR(0) p_type, INTEGER p_size, VARCHAR(0) p_container, DECIMAL(15, 2) p_retailprice, VARCHAR(0) p_comment, BIGINT s_suppkey, VARCHAR(0) s_name, VARCHAR(0) s_address, INTEGER s_nationkey, VARCHAR(0) s_phone, DECIMAL(15, 2) s_acctbal, VARCHAR(0) s_comment, BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment, BIGINT ps_partkey, BIGINT ps_suppkey, BIGINT ps_availqty, DECIMAL(15, 2) ps_supplycost, VARCHAR(0) ps_comment)";
		rel351 [label="rel#351:LogicalJoin\nleft=RelSubset#349,right=RelSubset#350,condition=AND(=($33, $18), =($32, $17)),joinType=inner\nrows=12656.25, cost={inf}",shape=box]
		rel377 [label="rel#377:JdbcJoin\nleft=RelSubset#373,right=RelSubset#350,condition=AND(=($33, $18), =($32, $17)),joinType=inner\nrows=12656.25, cost={21206.25 rows, 504.0 cpu, 0.0 io}",color=blue,shape=box]
		rel399 [label="rel#399:JdbcToEnumerableConverter\ninput=RelSubset#378\nrows=12656.25, cost={22471.875 rows, 1769.625 cpu, 0.0 io}",color=blue,shape=box]
		subset352 [label="rel#352:RelSubset#26.NONE"]
		subset378 [label="rel#378:RelSubset#26.JDBC.DUCK"]
		subset400 [label="rel#400:RelSubset#26.ENUMERABLE"]
	}
	subgraph cluster27{
		label="Set 27 RecordType(BIGINT p_partkey, VARCHAR(0) p_name, VARCHAR(0) p_mfgr, VARCHAR(0) p_brand, VARCHAR(0) p_type, INTEGER p_size, VARCHAR(0) p_container, DECIMAL(15, 2) p_retailprice, VARCHAR(0) p_comment, BIGINT s_suppkey, VARCHAR(0) s_name, VARCHAR(0) s_address, INTEGER s_nationkey, VARCHAR(0) s_phone, DECIMAL(15, 2) s_acctbal, VARCHAR(0) s_comment, BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment, BIGINT ps_partkey, BIGINT ps_suppkey, BIGINT ps_availqty, DECIMAL(15, 2) ps_supplycost, VARCHAR(0) ps_comment, BIGINT o_orderkey, BIGINT o_custkey, VARCHAR(0) o_orderstatus, DECIMAL(15, 2) o_totalprice, DATE o_orderdate, VARCHAR(0) o_orderpriority, VARCHAR(0) o_clerk, INTEGER o_shippriority, VARCHAR(0) o_comment)";
		rel353 [label="rel#353:LogicalJoin\nleft=RelSubset#352,right=RelSubset#27,condition==($37, $16),joinType=inner\nrows=189843.75, cost={inf}",shape=box]
		rel379 [label="rel#379:JdbcJoin\nleft=RelSubset#378,right=RelSubset#27,condition==($37, $16),joinType=inner\nrows=189843.75, cost={211150.0 rows, 605.0 cpu, 0.0 io}",color=blue,shape=box]
		rel402 [label="rel#402:JdbcToEnumerableConverter\ninput=RelSubset#380\nrows=189843.75, cost={230134.375 rows, 19589.375 cpu, 0.0 io}",color=blue,shape=box]
		subset354 [label="rel#354:RelSubset#27.NONE"]
		subset380 [label="rel#380:RelSubset#27.JDBC.DUCK"]
		subset403 [label="rel#403:RelSubset#27.ENUMERABLE"]
	}
	subgraph cluster28{
		label="Set 28 RecordType(BIGINT p_partkey, VARCHAR(0) p_name, VARCHAR(0) p_mfgr, VARCHAR(0) p_brand, VARCHAR(0) p_type, INTEGER p_size, VARCHAR(0) p_container, DECIMAL(15, 2) p_retailprice, VARCHAR(0) p_comment, BIGINT s_suppkey, VARCHAR(0) s_name, VARCHAR(0) s_address, INTEGER s_nationkey, VARCHAR(0) s_phone, DECIMAL(15, 2) s_acctbal, VARCHAR(0) s_comment, BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment, BIGINT ps_partkey, BIGINT ps_suppkey, BIGINT ps_availqty, DECIMAL(15, 2) ps_supplycost, VARCHAR(0) ps_comment, BIGINT o_orderkey, BIGINT o_custkey, VARCHAR(0) o_orderstatus, DECIMAL(15, 2) o_totalprice, DATE o_orderdate, VARCHAR(0) o_orderpriority, VARCHAR(0) o_clerk, INTEGER o_shippriority, VARCHAR(0) o_comment, INTEGER n_nationkey, VARCHAR(0) n_name, INTEGER n_regionkey, VARCHAR(0) n_comment)";
		rel355 [label="rel#355:LogicalJoin\nleft=RelSubset#354,right=RelSubset#210,condition==($12, $46),joinType=inner\nrows=2847656.25, cost={inf}",shape=box]
		rel381 [label="rel#381:JdbcJoin\nleft=RelSubset#380,right=RelSubset#210,condition==($12, $46),joinType=inner\nrows=2847656.25, cost={3058906.25 rows, 706.0 cpu, 0.0 io}",color=blue,shape=box]
		rel405 [label="rel#405:JdbcToEnumerableConverter\ninput=RelSubset#382\nrows=2847656.25, cost={3343671.875 rows, 285471.625 cpu, 0.0 io}",color=blue,shape=box]
		subset356 [label="rel#356:RelSubset#28.NONE"]
		subset382 [label="rel#382:RelSubset#28.JDBC.DUCK"]
		subset406 [label="rel#406:RelSubset#28.ENUMERABLE"]
	}
	subgraph cluster29{
		label="Set 29 RecordType(VARCHAR(0) NATION, BIGINT O_YEAR, DECIMAL(19, 4) AMOUNT)";
		rel357 [label="rel#357:LogicalProject\ninput=RelSubset#356,exprs=[$47, EXTRACT(FLAG(YEAR), $41), -(*($21, -(1, $22)), *($35, $20))]\nrows=2847656.25, cost={inf}",shape=box]
		rel383 [label="rel#383:JdbcProject\ninput=RelSubset#382,exprs=[$47, EXTRACT(FLAG(YEAR), $41), -(*($21, -(1, $22)), *($35, $20))]\nrows=2847656.25, cost={5337031.25 rows, 6835081.0 cpu, 0.0 io}",color=blue,shape=box]
		rel408 [label="rel#408:JdbcToEnumerableConverter\ninput=RelSubset#384\nrows=2847656.25, cost={5621796.875 rows, 7119846.625 cpu, 0.0 io}",color=blue,shape=box]
		subset358 [label="rel#358:RelSubset#29.NONE"]
		subset384 [label="rel#384:RelSubset#29.JDBC.DUCK"]
		subset409 [label="rel#409:RelSubset#29.ENUMERABLE"]
	}
	subgraph cluster30{
		label="Set 30 RecordType(VARCHAR(0) NATION, BIGINT O_YEAR, DECIMAL(19, 4) SUM_PROFIT)";
		rel359 [label="rel#359:LogicalAggregate\ninput=RelSubset#358,group={0, 1},SUM_PROFIT=SUM($2)\nrows=284765.625, cost={inf}",shape=box]
		rel385 [label="rel#385:JdbcAggregate\ninput=RelSubset#384,group={0, 1},SUM_PROFIT=SUM($2)\nrows=284765.625, cost={5660952.162016183 rows, 6835081.0 cpu, 0.0 io}",color=blue,shape=box]
		rel411 [label="rel#411:JdbcToEnumerableConverter\ninput=RelSubset#386\nrows=284765.625, cost={5689428.724516183 rows, 6863557.5625 cpu, 0.0 io}",color=blue,shape=box]
		subset360 [label="rel#360:RelSubset#30.NONE"]
		subset386 [label="rel#386:RelSubset#30.JDBC.DUCK"]
		subset412 [label="rel#412:RelSubset#30.ENUMERABLE"]
	}
	subgraph cluster31{
		label="Set 31 RecordType(VARCHAR(0) NATION, BIGINT O_YEAR, DECIMAL(19, 4) SUM_PROFIT)";
		rel361 [label="rel#361:LogicalSort\ninput=RelSubset#360,sort0=$0,sort1=$1,dir0=ASC,dir1=DESC\nrows=284765.625, cost={inf}",shape=box]
		rel364 [label="rel#364:AbstractConverter\ninput=RelSubset#362,convention=ENUMERABLE\nrows=284765.625, cost={inf}",shape=box]
		rel387 [label="rel#387:JdbcSort\ninput=RelSubset#386,sort0=$0,sort1=$1,dir0=ASC,dir1=DESC\nrows=284765.625, cost={5917241.224516183 rows, 8.408729923576382E7 cpu, 0.0 io}",color=blue,shape=box]
		rel414 [label="rel#414:JdbcToEnumerableConverter\ninput=RelSubset#388\nrows=284765.625, cost={5945717.787016183 rows, 8.411577579826382E7 cpu, 0.0 io}",color=blue,shape=box]
		subset362 [label="rel#362:RelSubset#31.NONE"]
		subset363 [label="rel#363:RelSubset#31.ENUMERABLE"]
		subset388 [label="rel#388:RelSubset#31.JDBC.DUCK"]
	}
	subgraph cluster32{
		label="Set 32 RecordType(BIGINT c_custkey, VARCHAR(0) c_name, VARCHAR(0) c_address, INTEGER c_nationkey, VARCHAR(0) c_phone, DECIMAL(15, 2) c_acctbal, VARCHAR(0) c_mktsegment, VARCHAR(0) c_comment)";
		rel426 [label="rel#426:JdbcTableScan\ntable=[DUCK, customer]\nrows=100.0, cost={100.0 rows, 101.0 cpu, 0.0 io}",color=blue,shape=box]
		rel463 [label="rel#463:JdbcToEnumerableConverter\ninput=RelSubset#451\nrows=100.0, cost={110.0 rows, 111.0 cpu, 0.0 io}",color=blue,shape=box]
		subset451 [label="rel#451:RelSubset#32.JDBC.DUCK"]
		subset464 [label="rel#464:RelSubset#32.ENUMERABLE"]
	}
	subgraph cluster33{
		label="Set 33 RecordType(BIGINT c_custkey, VARCHAR(0) c_name, VARCHAR(0) c_address, INTEGER c_nationkey, VARCHAR(0) c_phone, DECIMAL(15, 2) c_acctbal, VARCHAR(0) c_mktsegment, VARCHAR(0) c_comment)";
		rel452 [label="rel#452:LogicalFilter\ninput=RelSubset#451,condition=<($0, 1000)\nrows=50.0, cost={inf}",shape=box]
		rel465 [label="rel#465:JdbcFilter\ninput=RelSubset#451,condition=<($0, 1000)\nrows=50.0, cost={150.0 rows, 201.0 cpu, 0.0 io}",color=blue,shape=box]
		rel474 [label="rel#474:JdbcToEnumerableConverter\ninput=RelSubset#466\nrows=50.0, cost={155.0 rows, 206.0 cpu, 0.0 io}",color=blue,shape=box]
		subset453 [label="rel#453:RelSubset#33.NONE"]
		subset466 [label="rel#466:RelSubset#33.JDBC.DUCK"]
		subset475 [label="rel#475:RelSubset#33.ENUMERABLE"]
	}
	subgraph cluster34{
		label="Set 34 RecordType(BIGINT c_custkey, VARCHAR(0) c_name, VARCHAR(0) c_address, INTEGER c_nationkey, VARCHAR(0) c_phone, DECIMAL(15, 2) c_acctbal, VARCHAR(0) c_mktsegment, VARCHAR(0) c_comment, BIGINT o_orderkey, BIGINT o_custkey, VARCHAR(0) o_orderstatus, DECIMAL(15, 2) o_totalprice, DATE o_orderdate, VARCHAR(0) o_orderpriority, VARCHAR(0) o_clerk, INTEGER o_shippriority, VARCHAR(0) o_comment)";
		rel454 [label="rel#454:LogicalJoin\nleft=RelSubset#453,right=RelSubset#27,condition==($9, $0),joinType=inner\nrows=750.0, cost={inf}",shape=box]
		rel467 [label="rel#467:JdbcJoin\nleft=RelSubset#466,right=RelSubset#27,condition==($9, $0),joinType=inner\nrows=750.0, cost={1000.0 rows, 302.0 cpu, 0.0 io}",color=blue,shape=box]
		rel477 [label="rel#477:JdbcToEnumerableConverter\ninput=RelSubset#468\nrows=750.0, cost={1075.0 rows, 377.0 cpu, 0.0 io}",color=blue,shape=box]
		subset455 [label="rel#455:RelSubset#34.NONE"]
		subset468 [label="rel#468:RelSubset#34.JDBC.DUCK"]
		subset478 [label="rel#478:RelSubset#34.ENUMERABLE"]
	}
	subgraph cluster35{
		label="Set 35 RecordType(BIGINT C_CUSTKEY, BIGINT O_ORDERKEY, VARCHAR(0) C_NAME, DECIMAL(15, 2) O_TOTALPRICE)";
		rel456 [label="rel#456:LogicalProject\ninput=RelSubset#455,inputs=0,exprs=[$8, $1, $11]\nrows=750.0, cost={inf}",shape=box]
		rel469 [label="rel#469:JdbcProject\ninput=RelSubset#468,inputs=0,exprs=[$8, $1, $11]\nrows=750.0, cost={1600.0 rows, 2702.0 cpu, 0.0 io}",color=blue,shape=box]
		rel480 [label="rel#480:JdbcToEnumerableConverter\ninput=RelSubset#470\nrows=750.0, cost={1675.0 rows, 2777.0 cpu, 0.0 io}",color=blue,shape=box]
		subset457 [label="rel#457:RelSubset#35.NONE"]
		subset470 [label="rel#470:RelSubset#35.JDBC.DUCK"]
		subset481 [label="rel#481:RelSubset#35.ENUMERABLE"]
	}
	subgraph cluster36{
		label="Set 36 RecordType(BIGINT C_CUSTKEY, BIGINT O_ORDERKEY, VARCHAR(0) C_NAME, DECIMAL(15, 2) O_TOTALPRICE)";
		rel458 [label="rel#458:LogicalSort\ninput=RelSubset#457,sort0=$0,dir0=ASC\nrows=750.0, cost={inf}",shape=box]
		rel461 [label="rel#461:AbstractConverter\ninput=RelSubset#459,convention=ENUMERABLE\nrows=750.0, cost={inf}",shape=box]
		rel471 [label="rel#471:JdbcSort\ninput=RelSubset#470,sort0=$0,dir0=ASC\nrows=750.0, cost={2275.0 rows, 127821.38360342373 cpu, 0.0 io}",color=blue,shape=box]
		rel483 [label="rel#483:JdbcToEnumerableConverter\ninput=RelSubset#472\nrows=750.0, cost={2350.0 rows, 127896.38360342373 cpu, 0.0 io}",color=blue,shape=box]
		subset459 [label="rel#459:RelSubset#36.NONE"]
		subset460 [label="rel#460:RelSubset#36.ENUMERABLE"]
		subset472 [label="rel#472:RelSubset#36.JDBC.DUCK"]
	}
	subgraph cluster37{
		label="Set 37 RecordType(BIGINT o_orderkey, BIGINT o_custkey, VARCHAR(0) o_orderstatus, DECIMAL(15, 2) o_totalprice, DATE o_orderdate, VARCHAR(0) o_orderpriority, VARCHAR(0) o_clerk, INTEGER o_shippriority, VARCHAR(0) o_comment)";
		rel549 [label="rel#549:LogicalFilter\ninput=RelSubset#27,condition=AND(>=($4, 1993-02-01), <($4, +(1993-02-01, 3:INTERVAL MONTH)))\nrows=25.0, cost={inf}",shape=box]
		rel569 [label="rel#569:JdbcFilter\ninput=RelSubset#27,condition=AND(>=($4, 1993-02-01), <($4, +(1993-02-01, 3:INTERVAL MONTH)))\nrows=25.0, cost={125.0 rows, 201.0 cpu, 0.0 io}",color=blue,shape=box]
		rel588 [label="rel#588:JdbcToEnumerableConverter\ninput=RelSubset#570\nrows=25.0, cost={127.5 rows, 203.5 cpu, 0.0 io}",color=blue,shape=box]
		subset550 [label="rel#550:RelSubset#37.NONE"]
		subset570 [label="rel#570:RelSubset#37.JDBC.DUCK"]
		subset589 [label="rel#589:RelSubset#37.ENUMERABLE"]
	}
	subgraph cluster38{
		label="Set 38 RecordType(BIGINT c_custkey, VARCHAR(0) c_name, VARCHAR(0) c_address, INTEGER c_nationkey, VARCHAR(0) c_phone, DECIMAL(15, 2) c_acctbal, VARCHAR(0) c_mktsegment, VARCHAR(0) c_comment, BIGINT o_orderkey, BIGINT o_custkey, VARCHAR(0) o_orderstatus, DECIMAL(15, 2) o_totalprice, DATE o_orderdate, VARCHAR(0) o_orderpriority, VARCHAR(0) o_clerk, INTEGER o_shippriority, VARCHAR(0) o_comment)";
		rel551 [label="rel#551:LogicalJoin\nleft=RelSubset#451,right=RelSubset#550,condition==($0, $9),joinType=inner\nrows=375.0, cost={inf}",shape=box]
		rel571 [label="rel#571:JdbcJoin\nleft=RelSubset#451,right=RelSubset#570,condition==($0, $9),joinType=inner\nrows=375.0, cost={600.0 rows, 302.0 cpu, 0.0 io}",color=blue,shape=box]
		rel591 [label="rel#591:JdbcToEnumerableConverter\ninput=RelSubset#572\nrows=375.0, cost={637.5 rows, 339.5 cpu, 0.0 io}",color=blue,shape=box]
		subset552 [label="rel#552:RelSubset#38.NONE"]
		subset572 [label="rel#572:RelSubset#38.JDBC.DUCK"]
		subset592 [label="rel#592:RelSubset#38.ENUMERABLE"]
	}
	subgraph cluster39{
		label="Set 39 RecordType(BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment)";
		rel553 [label="rel#553:LogicalFilter\ninput=RelSubset#97,condition==(CAST($8):VARCHAR(1) NOT NULL, 'R')\nrows=15.0, cost={inf}",shape=box]
		rel573 [label="rel#573:JdbcFilter\ninput=RelSubset#97,condition==(CAST($8):VARCHAR(1) NOT NULL, 'R')\nrows=15.0, cost={115.0 rows, 201.0 cpu, 0.0 io}",color=blue,shape=box]
		rel594 [label="rel#594:JdbcToEnumerableConverter\ninput=RelSubset#574\nrows=15.0, cost={116.5 rows, 202.5 cpu, 0.0 io}",color=blue,shape=box]
		subset554 [label="rel#554:RelSubset#39.NONE"]
		subset574 [label="rel#574:RelSubset#39.JDBC.DUCK"]
		subset595 [label="rel#595:RelSubset#39.ENUMERABLE"]
	}
	subgraph cluster40{
		label="Set 40 RecordType(BIGINT c_custkey, VARCHAR(0) c_name, VARCHAR(0) c_address, INTEGER c_nationkey, VARCHAR(0) c_phone, DECIMAL(15, 2) c_acctbal, VARCHAR(0) c_mktsegment, VARCHAR(0) c_comment, BIGINT o_orderkey, BIGINT o_custkey, VARCHAR(0) o_orderstatus, DECIMAL(15, 2) o_totalprice, DATE o_orderdate, VARCHAR(0) o_orderpriority, VARCHAR(0) o_clerk, INTEGER o_shippriority, VARCHAR(0) o_comment, BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment)";
		rel555 [label="rel#555:LogicalJoin\nleft=RelSubset#552,right=RelSubset#554,condition==($17, $8),joinType=inner\nrows=843.75, cost={inf}",shape=box]
		rel575 [label="rel#575:JdbcJoin\nleft=RelSubset#572,right=RelSubset#574,condition==($17, $8),joinType=inner\nrows=843.75, cost={1558.75 rows, 503.0 cpu, 0.0 io}",color=blue,shape=box]
		rel597 [label="rel#597:JdbcToEnumerableConverter\ninput=RelSubset#576\nrows=843.75, cost={1643.125 rows, 587.375 cpu, 0.0 io}",color=blue,shape=box]
		subset556 [label="rel#556:RelSubset#40.NONE"]
		subset576 [label="rel#576:RelSubset#40.JDBC.DUCK"]
		subset598 [label="rel#598:RelSubset#40.ENUMERABLE"]
	}
	subgraph cluster41{
		label="Set 41 RecordType(BIGINT c_custkey, VARCHAR(0) c_name, VARCHAR(0) c_address, INTEGER c_nationkey, VARCHAR(0) c_phone, DECIMAL(15, 2) c_acctbal, VARCHAR(0) c_mktsegment, VARCHAR(0) c_comment, BIGINT o_orderkey, BIGINT o_custkey, VARCHAR(0) o_orderstatus, DECIMAL(15, 2) o_totalprice, DATE o_orderdate, VARCHAR(0) o_orderpriority, VARCHAR(0) o_clerk, INTEGER o_shippriority, VARCHAR(0) o_comment, BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment, INTEGER n_nationkey, VARCHAR(0) n_name, INTEGER n_regionkey, VARCHAR(0) n_comment)";
		rel557 [label="rel#557:LogicalJoin\nleft=RelSubset#556,right=RelSubset#210,condition==($3, $33),joinType=inner\nrows=12656.25, cost={inf}",shape=box]
		rel577 [label="rel#577:JdbcJoin\nleft=RelSubset#576,right=RelSubset#210,condition==($3, $33),joinType=inner\nrows=12656.25, cost={14315.0 rows, 604.0 cpu, 0.0 io}",color=blue,shape=box]
		rel600 [label="rel#600:JdbcToEnumerableConverter\ninput=RelSubset#578\nrows=12656.25, cost={15580.625 rows, 1869.625 cpu, 0.0 io}",color=blue,shape=box]
		subset558 [label="rel#558:RelSubset#41.NONE"]
		subset578 [label="rel#578:RelSubset#41.JDBC.DUCK"]
		subset601 [label="rel#601:RelSubset#41.ENUMERABLE"]
	}
	subgraph cluster42{
		label="Set 42 RecordType(BIGINT c_custkey, VARCHAR(0) c_name, DECIMAL(15, 2) c_acctbal, VARCHAR(0) c_phone, VARCHAR(0) n_name, VARCHAR(0) c_address, VARCHAR(0) c_comment, DECIMAL(19, 4) $f7)";
		rel559 [label="rel#559:LogicalProject\ninput=RelSubset#558,inputs=0..1,exprs=[$5, $4, $34, $2, $7, *($22, -(1, $23))]\nrows=12656.25, cost={inf}",shape=box]
		rel579 [label="rel#579:JdbcProject\ninput=RelSubset#578,inputs=0..1,exprs=[$5, $4, $34, $2, $7, *($22, -(1, $23))]\nrows=12656.25, cost={24440.0 rows, 81604.0 cpu, 0.0 io}",color=blue,shape=box]
		rel603 [label="rel#603:JdbcToEnumerableConverter\ninput=RelSubset#580\nrows=12656.25, cost={25705.625 rows, 82869.625 cpu, 0.0 io}",color=blue,shape=box]
		subset560 [label="rel#560:RelSubset#42.NONE"]
		subset580 [label="rel#580:RelSubset#42.JDBC.DUCK"]
		subset604 [label="rel#604:RelSubset#42.ENUMERABLE"]
	}
	subgraph cluster43{
		label="Set 43 RecordType(BIGINT c_custkey, VARCHAR(0) c_name, DECIMAL(15, 2) c_acctbal, VARCHAR(0) c_phone, VARCHAR(0) n_name, VARCHAR(0) c_address, VARCHAR(0) c_comment, DECIMAL(19, 4) REVENUE)";
		rel561 [label="rel#561:LogicalAggregate\ninput=RelSubset#560,group={0, 1, 2, 3, 4, 5, 6},REVENUE=SUM($7)\nrows=1265.625, cost={inf}",shape=box]
		rel581 [label="rel#581:JdbcAggregate\ninput=RelSubset#580,group={0, 1, 2, 3, 4, 5, 6},REVENUE=SUM($7)\nrows=1265.625, cost={25879.648497849703 rows, 81604.0 cpu, 0.0 io}",color=blue,shape=box]
		rel606 [label="rel#606:JdbcToEnumerableConverter\ninput=RelSubset#582\nrows=1265.625, cost={26006.210997849703 rows, 81730.5625 cpu, 0.0 io}",color=blue,shape=box]
		subset562 [label="rel#562:RelSubset#43.NONE"]
		subset582 [label="rel#582:RelSubset#43.JDBC.DUCK"]
		subset607 [label="rel#607:RelSubset#43.ENUMERABLE"]
	}
	subgraph cluster44{
		label="Set 44 RecordType(BIGINT C_CUSTKEY, VARCHAR(0) C_NAME, DECIMAL(19, 4) REVENUE, DECIMAL(15, 2) C_ACCTBAL, VARCHAR(0) N_NAME, VARCHAR(0) C_ADDRESS, VARCHAR(0) C_PHONE, VARCHAR(0) C_COMMENT)";
		rel563 [label="rel#563:LogicalProject\ninput=RelSubset#562,inputs=0..1,exprs=[$7, $2, $4, $5, $3, $6]\nrows=1265.625, cost={inf}",shape=box]
		rel583 [label="rel#583:JdbcProject\ninput=RelSubset#582,inputs=0..1,exprs=[$7, $2, $4, $5, $3, $6]\nrows=1265.625, cost={26892.148497849703 rows, 89704.0 cpu, 0.0 io}",color=blue,shape=box]
		rel609 [label="rel#609:JdbcToEnumerableConverter\ninput=RelSubset#584\nrows=1265.625, cost={27018.710997849703 rows, 89830.5625 cpu, 0.0 io}",color=blue,shape=box]
		subset564 [label="rel#564:RelSubset#44.NONE"]
		subset584 [label="rel#584:RelSubset#44.JDBC.DUCK"]
		subset610 [label="rel#610:RelSubset#44.ENUMERABLE"]
	}
	subgraph cluster45{
		label="Set 45 RecordType(BIGINT C_CUSTKEY, VARCHAR(0) C_NAME, DECIMAL(19, 4) REVENUE, DECIMAL(15, 2) C_ACCTBAL, VARCHAR(0) N_NAME, VARCHAR(0) C_ADDRESS, VARCHAR(0) C_PHONE, VARCHAR(0) C_COMMENT)";
		rel565 [label="rel#565:LogicalSort\ninput=RelSubset#564,sort0=$2,dir0=DESC,fetch=20\nrows=20.0, cost={inf}",shape=box]
		rel568 [label="rel#568:AbstractConverter\ninput=RelSubset#566,convention=ENUMERABLE\nrows=20.0, cost={inf}",shape=box]
		rel585 [label="rel#585:JdbcSort\ninput=RelSubset#584,sort0=$2,dir0=DESC,fetch=20\nrows=20.0, cost={26910.148497849703 rows, 239846.3568851841 cpu, 0.0 io}",color=blue,shape=box]
		rel612 [label="rel#612:JdbcToEnumerableConverter\ninput=RelSubset#586\nrows=20.0, cost={26912.148497849703 rows, 239848.3568851841 cpu, 0.0 io}",color=blue,shape=box]
		subset566 [label="rel#566:RelSubset#45.NONE"]
		subset567 [label="rel#567:RelSubset#45.ENUMERABLE"]
		subset586 [label="rel#586:RelSubset#45.JDBC.DUCK"]
	}
	subgraph cluster46{
		label="Set 46 RecordType(BIGINT supplier_no, DECIMAL(19, 4) total_revenue)";
		rel626 [label="rel#626:JdbcTableScan\ntable=[DUCK, revenue0r15721]\nrows=100.0, cost={100.0 rows, 101.0 cpu, 0.0 io}",color=blue,shape=box]
		rel665 [label="rel#665:JdbcToEnumerableConverter\ninput=RelSubset#653\nrows=100.0, cost={110.0 rows, 111.0 cpu, 0.0 io}",color=blue,shape=box]
		subset653 [label="rel#653:RelSubset#46.JDBC.DUCK"]
		subset666 [label="rel#666:RelSubset#46.ENUMERABLE"]
	}
	subgraph cluster47{
		label="Set 47 RecordType(BIGINT supplier_no, DECIMAL(19, 4) total_revenue)";
		rel654 [label="rel#654:LogicalFilter\ninput=RelSubset#653,condition==($1, $SCALAR_QUERY({\nLogicalAggregate(group=[{}], EXPR$0=[MAX($0)])\n  LogicalProject(total_revenue=[$1])\n    JdbcTableScan(table=[[DUCK, revenue0r15721]])\n}))\nrows=15.0, cost={inf}",shape=box]
		rel667 [label="rel#667:JdbcFilter\ninput=RelSubset#653,condition==($1, $SCALAR_QUERY({\nLogicalAggregate(group=[{}], EXPR$0=[MAX($0)])\n  LogicalProject(total_revenue=[$1])\n    JdbcTableScan(table=[[DUCK, revenue0r15721]])\n}))\nrows=15.0, cost={115.0 rows, 201.0 cpu, 0.0 io}",color=blue,shape=box]
		rel676 [label="rel#676:JdbcToEnumerableConverter\ninput=RelSubset#668\nrows=15.0, cost={116.5 rows, 202.5 cpu, 0.0 io}",color=blue,shape=box]
		subset655 [label="rel#655:RelSubset#47.NONE"]
		subset668 [label="rel#668:RelSubset#47.JDBC.DUCK"]
		subset677 [label="rel#677:RelSubset#47.ENUMERABLE"]
	}
	subgraph cluster48{
		label="Set 48 RecordType(BIGINT s_suppkey, VARCHAR(0) s_name, VARCHAR(0) s_address, INTEGER s_nationkey, VARCHAR(0) s_phone, DECIMAL(15, 2) s_acctbal, VARCHAR(0) s_comment, BIGINT supplier_no, DECIMAL(19, 4) total_revenue)";
		rel656 [label="rel#656:LogicalJoin\nleft=RelSubset#345,right=RelSubset#655,condition==($0, $7),joinType=inner\nrows=225.0, cost={inf}",shape=box]
		rel669 [label="rel#669:JdbcJoin\nleft=RelSubset#345,right=RelSubset#668,condition==($0, $7),joinType=inner\nrows=225.0, cost={440.0 rows, 302.0 cpu, 0.0 io}",color=blue,shape=box]
		rel679 [label="rel#679:JdbcToEnumerableConverter\ninput=RelSubset#670\nrows=225.0, cost={462.5 rows, 324.5 cpu, 0.0 io}",color=blue,shape=box]
		subset657 [label="rel#657:RelSubset#48.NONE"]
		subset670 [label="rel#670:RelSubset#48.JDBC.DUCK"]
		subset680 [label="rel#680:RelSubset#48.ENUMERABLE"]
	}
	subgraph cluster49{
		label="Set 49 RecordType(BIGINT S_SUPPKEY, VARCHAR(0) S_NAME, VARCHAR(0) S_ADDRESS, VARCHAR(0) S_PHONE, DECIMAL(19, 4) TOTAL_REVENUE)";
		rel658 [label="rel#658:LogicalProject\ninput=RelSubset#657,inputs=0..2,exprs=[$4, $8]\nrows=225.0, cost={inf}",shape=box]
		rel671 [label="rel#671:JdbcProject\ninput=RelSubset#670,inputs=0..2,exprs=[$4, $8]\nrows=225.0, cost={620.0 rows, 1202.0 cpu, 0.0 io}",color=blue,shape=box]
		rel682 [label="rel#682:JdbcToEnumerableConverter\ninput=RelSubset#672\nrows=225.0, cost={642.5 rows, 1224.5 cpu, 0.0 io}",color=blue,shape=box]
		subset659 [label="rel#659:RelSubset#49.NONE"]
		subset672 [label="rel#672:RelSubset#49.JDBC.DUCK"]
		subset683 [label="rel#683:RelSubset#49.ENUMERABLE"]
	}
	subgraph cluster50{
		label="Set 50 RecordType(BIGINT S_SUPPKEY, VARCHAR(0) S_NAME, VARCHAR(0) S_ADDRESS, VARCHAR(0) S_PHONE, DECIMAL(19, 4) TOTAL_REVENUE)";
		rel660 [label="rel#660:LogicalSort\ninput=RelSubset#659,sort0=$0,dir0=ASC\nrows=225.0, cost={inf}",shape=box]
		rel663 [label="rel#663:AbstractConverter\ninput=RelSubset#661,convention=ENUMERABLE\nrows=225.0, cost={inf}",shape=box]
		rel673 [label="rel#673:JdbcSort\ninput=RelSubset#672,sort0=$0,dir0=ASC\nrows=225.0, cost={822.5 rows, 36298.33060628464 cpu, 0.0 io}",color=blue,shape=box]
		rel685 [label="rel#685:JdbcToEnumerableConverter\ninput=RelSubset#674\nrows=225.0, cost={845.0 rows, 36320.83060628464 cpu, 0.0 io}",color=blue,shape=box]
		subset661 [label="rel#661:RelSubset#50.NONE"]
		subset662 [label="rel#662:RelSubset#50.ENUMERABLE"]
		subset674 [label="rel#674:RelSubset#50.JDBC.DUCK"]
	}
	subgraph cluster51{
		label="Set 51 RecordType(BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment, BIGINT p_partkey, VARCHAR(0) p_name, VARCHAR(0) p_mfgr, VARCHAR(0) p_brand, VARCHAR(0) p_type, INTEGER p_size, VARCHAR(0) p_container, DECIMAL(15, 2) p_retailprice, VARCHAR(0) p_comment)";
		rel714 [label="rel#714:LogicalJoin\nleft=RelSubset#97,right=RelSubset#100,condition=OR(AND(=($16, $1), =(CAST($19):VARCHAR(8) NOT NULL, 'Brand#52'), OR(=($22, 'SM CASE'), =($22, 'SM BOX'), =($22, 'SM PACK'), =($22, 'SM PKG')), >=($4, 9), <=($4, +(9, 10)), >=($21, 1), <=($21, 5), OR(=($14, 'AIR'), =($14, 'AIR REG')), =(CAST($13):VARCHAR(17) NOT NULL, 'DELIVER IN PERSON')), AND(=($16, $1), =(CAST($19):VARCHAR(8) NOT NULL, 'Brand#42'), OR(=($22, 'MED BAG'), =($22, 'MED BOX'), =($22, 'MED PKG'), =($22, 'MED PACK')), >=($4, 18), <=($4, +(18, 10)), >=($21, 1), <=($21, 10), OR(=($14, 'AIR'), =($14, 'AIR REG')), =(CAST($13):VARCHAR(17) NOT NULL, 'DELIVER IN PERSON')), AND(=($16, $1), =(CAST($19):VARCHAR(8) NOT NULL, 'Brand#23'), OR(=($22, 'LG CASE'), =($22, 'LG BOX'), =($22, 'LG PACK'), =($22, 'LG PKG')), >=($4, 22), <=($4, +(22, 10)), >=($21, 1), <=($21, 15), OR(=($14, 'AIR'), =($14, 'AIR REG')), =(CAST($13):VARCHAR(17) NOT NULL, 'DELIVER IN PERSON'))),joinType=inner\nrows=2500.0, cost={inf}",shape=box]
		subset715 [label="rel#715:RelSubset#51.NONE"]
		subset722 [label="rel#722:RelSubset#51.JDBC.DUCK",color=red]
	}
	subgraph cluster52{
		label="Set 52 RecordType(DECIMAL(19, 4) $f0)";
		rel716 [label="rel#716:LogicalProject\ninput=RelSubset#715,exprs=[*($5, -(1, $6))]\nrows=2500.0, cost={inf}",shape=box]
		rel723 [label="rel#723:JdbcProject\ninput=RelSubset#722,exprs=[*($5, -(1, $6))]\nrows=2500.0, cost={inf}",shape=box]
		rel728 [label="rel#728:JdbcToEnumerableConverter\ninput=RelSubset#724\nrows=2500.0, cost={inf}",shape=box]
		subset717 [label="rel#717:RelSubset#52.NONE"]
		subset724 [label="rel#724:RelSubset#52.JDBC.DUCK"]
		subset729 [label="rel#729:RelSubset#52.ENUMERABLE"]
	}
	subgraph cluster53{
		label="Set 53 RecordType(DECIMAL(19, 4) REVENUE)";
		rel718 [label="rel#718:LogicalAggregate\ninput=RelSubset#717,group={},REVENUE=SUM($0)\nrows=1.0, cost={inf}",shape=box]
		rel721 [label="rel#721:AbstractConverter\ninput=RelSubset#719,convention=ENUMERABLE\nrows=1.0, cost={inf}",shape=box]
		rel725 [label="rel#725:JdbcAggregate\ninput=RelSubset#724,group={},REVENUE=SUM($0)\nrows=1.0, cost={inf}",shape=box]
		rel731 [label="rel#731:JdbcToEnumerableConverter\ninput=RelSubset#726\nrows=1.0, cost={inf}",shape=box]
		subset719 [label="rel#719:RelSubset#53.NONE"]
		subset720 [label="rel#720:RelSubset#53.ENUMERABLE"]
		subset726 [label="rel#726:RelSubset#53.JDBC.DUCK"]
	}
	root -> subset720;
	subset27 -> rel1[color=blue];
	subset42 -> rel41[color=blue]; rel41 -> subset27[color=blue];
	subset29 -> rel28; rel28 -> subset27;
	subset44 -> rel43[color=blue]; rel43 -> subset27[color=blue];
	subset53 -> rel52[color=blue]; rel52 -> subset44[color=blue];
	subset31 -> rel30; rel30 -> subset29;
	subset46 -> rel45[color=blue]; rel45 -> subset44[color=blue];
	subset56 -> rel55[color=blue]; rel55 -> subset46[color=blue];
	subset33 -> rel32; rel32 -> subset31;
	subset48 -> rel47[color=blue]; rel47 -> subset46[color=blue];
	subset59 -> rel58[color=blue]; rel58 -> subset48[color=blue];
	subset37 -> rel36; rel36 -> subset33;
	subset38 -> rel39; rel39 -> subset37;
	subset50 -> rel49[color=blue]; rel49 -> subset48[color=blue];
	subset38 -> rel61[color=blue]; rel61 -> subset50[color=blue];
	subset97 -> rel68[color=blue];
	subset113 -> rel112[color=blue]; rel112 -> subset97[color=blue];
	subset99 -> rel98; rel98 -> subset97;
	subset115 -> rel114[color=blue]; rel114 -> subset97[color=blue];
	subset129 -> rel128[color=blue]; rel128 -> subset115[color=blue];
	subset100 -> rel70[color=blue];
	subset118 -> rel117[color=blue]; rel117 -> subset100[color=blue];
	subset102 -> rel101; rel101 -> subset99[label="0"]; rel101 -> subset100[label="1"];
	subset120 -> rel119[color=blue]; rel119 -> subset115[color=blue,label="0"]; rel119 -> subset100[color=blue,label="1"];
	subset132 -> rel131[color=blue]; rel131 -> subset120[color=blue];
	subset104 -> rel103; rel103 -> subset102;
	subset122 -> rel121[color=blue]; rel121 -> subset120[color=blue];
	subset135 -> rel134[color=blue]; rel134 -> subset122[color=blue];
	subset106 -> rel105; rel105 -> subset104;
	subset124 -> rel123[color=blue]; rel123 -> subset122[color=blue];
	subset138 -> rel137[color=blue]; rel137 -> subset124[color=blue];
	subset108 -> rel107; rel107 -> subset106;
	subset109 -> rel110; rel110 -> subset108;
	subset126 -> rel125[color=blue]; rel125 -> subset124[color=blue];
	subset109 -> rel140[color=blue]; rel140 -> subset126[color=blue];
	subset209 -> rel202;
	subset226 -> rel225[color=blue];
	subset242 -> rel241[color=blue]; rel241 -> subset226[color=blue];
	subset210 -> rel158[color=blue];
	subset229 -> rel228[color=blue]; rel228 -> subset210[color=blue];
	subset212 -> rel211; rel211 -> subset210;
	subset231 -> rel230[color=blue]; rel230 -> subset210[color=blue];
	subset245 -> rel244[color=blue]; rel244 -> subset231[color=blue];
	subset214 -> rel213; rel213 -> subset209[label="0"]; rel213 -> subset212[label="1"];
	subset233 -> rel232[color=blue]; rel232 -> subset226[color=blue,label="0"]; rel232 -> subset231[color=blue,label="1"];
	subset248 -> rel247[color=blue]; rel247 -> subset233[color=blue];
	subset216 -> rel215; rel215 -> subset214;
	subset235 -> rel234[color=blue]; rel234 -> subset233[color=blue];
	subset251 -> rel250[color=blue]; rel250 -> subset235[color=blue];
	subset218 -> rel217; rel217 -> subset216;
	subset237 -> rel236[color=blue]; rel236 -> subset235[color=blue];
	subset254 -> rel253[color=blue]; rel253 -> subset237[color=blue];
	subset222 -> rel221; rel221 -> subset218;
	subset223 -> rel224; rel224 -> subset222;
	subset239 -> rel238[color=blue]; rel238 -> subset237[color=blue];
	subset223 -> rel256[color=blue]; rel256 -> subset239[color=blue];
	subset344 -> rel343; rel343 -> subset100;
	subset366 -> rel365[color=blue]; rel365 -> subset100[color=blue];
	subset391 -> rel390[color=blue]; rel390 -> subset366[color=blue];
	subset345 -> rel266[color=blue];
	subset369 -> rel368[color=blue]; rel368 -> subset345[color=blue];
	subset347 -> rel346; rel346 -> subset344[label="0"]; rel346 -> subset345[label="1"];
	subset371 -> rel370[color=blue]; rel370 -> subset366[color=blue,label="0"]; rel370 -> subset345[color=blue,label="1"];
	subset394 -> rel393[color=blue]; rel393 -> subset371[color=blue];
	subset349 -> rel348; rel348 -> subset347[label="0"]; rel348 -> subset97[label="1"];
	subset373 -> rel372[color=blue]; rel372 -> subset371[color=blue,label="0"]; rel372 -> subset97[color=blue,label="1"];
	subset397 -> rel396[color=blue]; rel396 -> subset373[color=blue];
	subset350 -> rel274[color=blue];
	subset376 -> rel375[color=blue]; rel375 -> subset350[color=blue];
	subset352 -> rel351; rel351 -> subset349[label="0"]; rel351 -> subset350[label="1"];
	subset378 -> rel377[color=blue]; rel377 -> subset373[color=blue,label="0"]; rel377 -> subset350[color=blue,label="1"];
	subset400 -> rel399[color=blue]; rel399 -> subset378[color=blue];
	subset354 -> rel353; rel353 -> subset352[label="0"]; rel353 -> subset27[label="1"];
	subset380 -> rel379[color=blue]; rel379 -> subset378[color=blue,label="0"]; rel379 -> subset27[color=blue,label="1"];
	subset403 -> rel402[color=blue]; rel402 -> subset380[color=blue];
	subset356 -> rel355; rel355 -> subset354[label="0"]; rel355 -> subset210[label="1"];
	subset382 -> rel381[color=blue]; rel381 -> subset380[color=blue,label="0"]; rel381 -> subset210[color=blue,label="1"];
	subset406 -> rel405[color=blue]; rel405 -> subset382[color=blue];
	subset358 -> rel357; rel357 -> subset356;
	subset384 -> rel383[color=blue]; rel383 -> subset382[color=blue];
	subset409 -> rel408[color=blue]; rel408 -> subset384[color=blue];
	subset360 -> rel359; rel359 -> subset358;
	subset386 -> rel385[color=blue]; rel385 -> subset384[color=blue];
	subset412 -> rel411[color=blue]; rel411 -> subset386[color=blue];
	subset362 -> rel361; rel361 -> subset360;
	subset363 -> rel364; rel364 -> subset362;
	subset388 -> rel387[color=blue]; rel387 -> subset386[color=blue];
	subset363 -> rel414[color=blue]; rel414 -> subset388[color=blue];
	subset451 -> rel426[color=blue];
	subset464 -> rel463[color=blue]; rel463 -> subset451[color=blue];
	subset453 -> rel452; rel452 -> subset451;
	subset466 -> rel465[color=blue]; rel465 -> subset451[color=blue];
	subset475 -> rel474[color=blue]; rel474 -> subset466[color=blue];
	subset455 -> rel454; rel454 -> subset453[label="0"]; rel454 -> subset27[label="1"];
	subset468 -> rel467[color=blue]; rel467 -> subset466[color=blue,label="0"]; rel467 -> subset27[color=blue,label="1"];
	subset478 -> rel477[color=blue]; rel477 -> subset468[color=blue];
	subset457 -> rel456; rel456 -> subset455;
	subset470 -> rel469[color=blue]; rel469 -> subset468[color=blue];
	subset481 -> rel480[color=blue]; rel480 -> subset470[color=blue];
	subset459 -> rel458; rel458 -> subset457;
	subset460 -> rel461; rel461 -> subset459;
	subset472 -> rel471[color=blue]; rel471 -> subset470[color=blue];
	subset460 -> rel483[color=blue]; rel483 -> subset472[color=blue];
	subset550 -> rel549; rel549 -> subset27;
	subset570 -> rel569[color=blue]; rel569 -> subset27[color=blue];
	subset589 -> rel588[color=blue]; rel588 -> subset570[color=blue];
	subset552 -> rel551; rel551 -> subset451[label="0"]; rel551 -> subset550[label="1"];
	subset572 -> rel571[color=blue]; rel571 -> subset451[color=blue,label="0"]; rel571 -> subset570[color=blue,label="1"];
	subset592 -> rel591[color=blue]; rel591 -> subset572[color=blue];
	subset554 -> rel553; rel553 -> subset97;
	subset574 -> rel573[color=blue]; rel573 -> subset97[color=blue];
	subset595 -> rel594[color=blue]; rel594 -> subset574[color=blue];
	subset556 -> rel555; rel555 -> subset552[label="0"]; rel555 -> subset554[label="1"];
	subset576 -> rel575[color=blue]; rel575 -> subset572[color=blue,label="0"]; rel575 -> subset574[color=blue,label="1"];
	subset598 -> rel597[color=blue]; rel597 -> subset576[color=blue];
	subset558 -> rel557; rel557 -> subset556[label="0"]; rel557 -> subset210[label="1"];
	subset578 -> rel577[color=blue]; rel577 -> subset576[color=blue,label="0"]; rel577 -> subset210[color=blue,label="1"];
	subset601 -> rel600[color=blue]; rel600 -> subset578[color=blue];
	subset560 -> rel559; rel559 -> subset558;
	subset580 -> rel579[color=blue]; rel579 -> subset578[color=blue];
	subset604 -> rel603[color=blue]; rel603 -> subset580[color=blue];
	subset562 -> rel561; rel561 -> subset560;
	subset582 -> rel581[color=blue]; rel581 -> subset580[color=blue];
	subset607 -> rel606[color=blue]; rel606 -> subset582[color=blue];
	subset564 -> rel563; rel563 -> subset562;
	subset584 -> rel583[color=blue]; rel583 -> subset582[color=blue];
	subset610 -> rel609[color=blue]; rel609 -> subset584[color=blue];
	subset566 -> rel565; rel565 -> subset564;
	subset567 -> rel568; rel568 -> subset566;
	subset586 -> rel585[color=blue]; rel585 -> subset584[color=blue];
	subset567 -> rel612[color=blue]; rel612 -> subset586[color=blue];
	subset653 -> rel626[color=blue];
	subset666 -> rel665[color=blue]; rel665 -> subset653[color=blue];
	subset655 -> rel654; rel654 -> subset653;
	subset668 -> rel667[color=blue]; rel667 -> subset653[color=blue];
	subset677 -> rel676[color=blue]; rel676 -> subset668[color=blue];
	subset657 -> rel656; rel656 -> subset345[label="0"]; rel656 -> subset655[label="1"];
	subset670 -> rel669[color=blue]; rel669 -> subset345[color=blue,label="0"]; rel669 -> subset668[color=blue,label="1"];
	subset680 -> rel679[color=blue]; rel679 -> subset670[color=blue];
	subset659 -> rel658; rel658 -> subset657;
	subset672 -> rel671[color=blue]; rel671 -> subset670[color=blue];
	subset683 -> rel682[color=blue]; rel682 -> subset672[color=blue];
	subset661 -> rel660; rel660 -> subset659;
	subset662 -> rel663; rel663 -> subset661;
	subset674 -> rel673[color=blue]; rel673 -> subset672[color=blue];
	subset662 -> rel685[color=blue]; rel685 -> subset674[color=blue];
	subset715 -> rel714; rel714 -> subset97[label="0"]; rel714 -> subset100[label="1"];
	subset717 -> rel716; rel716 -> subset715;
	subset724 -> rel723; rel723 -> subset722;
	subset729 -> rel728; rel728 -> subset724;
	subset719 -> rel718; rel718 -> subset717;
	subset720 -> rel721; rel721 -> subset719;
	subset726 -> rel725; rel725 -> subset724;
	subset720 -> rel731; rel731 -> subset726;
}
    at org.apache.calcite.plan.volcano.RelSubset$CheapestPlanReplacer.visit (RelSubset.java:718)
    at org.apache.calcite.plan.volcano.RelSubset.buildCheapestPlan (RelSubset.java:391)
    at org.apache.calcite.plan.volcano.VolcanoPlanner.findBestExp (VolcanoPlanner.java:533)
    at edu.cmu.cs.db.calcite_app.app.NewQuery.volcano (NewQuery.java:136)
    at edu.cmu.cs.db.calcite_app.app.App.main (App.java:52)
    at org.codehaus.mojo.exec.ExecJavaMojo$1.run (ExecJavaMojo.java:279)
    at java.lang.Thread.run (Thread.java:1583)
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.446 s
[INFO] Finished at: 2025-04-10T07:52:41Z
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.codehaus.mojo:exec-maven-plugin:3.1.0:java (default-cli) on project calcite_app: An exception occurred while executing the Java class. There are not enough rules to produce a node with desired properties: convention=ENUMERABLE.
[ERROR] Missing conversion is LogicalJoin[convention: NONE -> JDBC.DUCK]
[ERROR] There is 1 empty subset: rel#722:RelSubset#51.JDBC.DUCK, the relevant part of the original plan is as follows
[ERROR] 714:LogicalJoin(condition=[OR(AND(=($16, $1), =(CAST($19):VARCHAR(8) NOT NULL, 'Brand#52'), OR(=($22, 'SM CASE'), =($22, 'SM BOX'), =($22, 'SM PACK'), =($22, 'SM PKG')), >=($4, 9), <=($4, +(9, 10)), >=($21, 1), <=($21, 5), OR(=($14, 'AIR'), =($14, 'AIR REG')), =(CAST($13):VARCHAR(17) NOT NULL, 'DELIVER IN PERSON')), AND(=($16, $1), =(CAST($19):VARCHAR(8) NOT NULL, 'Brand#42'), OR(=($22, 'MED BAG'), =($22, 'MED BOX'), =($22, 'MED PKG'), =($22, 'MED PACK')), >=($4, 18), <=($4, +(18, 10)), >=($21, 1), <=($21, 10), OR(=($14, 'AIR'), =($14, 'AIR REG')), =(CAST($13):VARCHAR(17) NOT NULL, 'DELIVER IN PERSON')), AND(=($16, $1), =(CAST($19):VARCHAR(8) NOT NULL, 'Brand#23'), OR(=($22, 'LG CASE'), =($22, 'LG BOX'), =($22, 'LG PACK'), =($22, 'LG PKG')), >=($4, 22), <=($4, +(22, 10)), >=($21, 1), <=($21, 15), OR(=($14, 'AIR'), =($14, 'AIR REG')), =(CAST($13):VARCHAR(17) NOT NULL, 'DELIVER IN PERSON')))], joinType=[inner])
[ERROR]   68:JdbcTableScan(subset=[rel#97:RelSubset#6.JDBC.DUCK], table=[[DUCK, lineitem]])
[ERROR]   70:JdbcTableScan(subset=[rel#100:RelSubset#8.JDBC.DUCK], table=[[DUCK, part]])
[ERROR] 
[ERROR] Root: rel#720:RelSubset#53.ENUMERABLE
[ERROR] Original rel:
[ERROR] JdbcToEnumerableConverter(subset=[rel#38:RelSubset#5.ENUMERABLE]): rowcount = 1.0, cumulative cost = {0.1 rows, 0.1 cpu, 0.0 io}, id = 61
[ERROR]   JdbcSort(subset=[rel#50:RelSubset#5.JDBC.DUCK], sort0=[$0], dir0=[ASC]): rowcount = 1.0, cumulative cost = {0.9 rows, 18.0 cpu, 0.0 io}, id = 49
[ERROR]     JdbcAggregate(subset=[rel#48:RelSubset#3.JDBC.DUCK], group=[{0}], ORDER_COUNT=[COUNT()]): rowcount = 1.0, cumulative cost = {1.125 rows, 0.0 cpu, 0.0 io}, id = 47
[ERROR]       JdbcProject(subset=[rel#46:RelSubset#2.JDBC.DUCK], o_orderpriority=[$5]): rowcount = 6.25, cumulative cost = {5.0 rows, 5.0 cpu, 0.0 io}, id = 45
[ERROR]         JdbcFilter(subset=[rel#44:RelSubset#1.JDBC.DUCK], condition=[AND(>=($4, 1996-01-01), <($4, +(1996-01-01, 3:INTERVAL MONTH)), EXISTS({
[ERROR] LogicalFilter(condition=[AND(=($0, $cor0.o_orderkey), <($11, $12))])
[ERROR]   JdbcTableScan(table=[[DUCK, lineitem]])
[ERROR] }))]): rowcount = 6.25, cumulative cost = {6.25 rows, 100.0 cpu, 0.0 io}, id = 43
[ERROR]           JdbcTableScan(subset=[rel#27:RelSubset#0.JDBC.DUCK], table=[[DUCK, orders]]): rowcount = 100.0, cumulative cost = {100.0 rows, 101.0 cpu, 0.0 io}, id = 1
[ERROR] 
[ERROR] Sets:
[ERROR] Set#0, type: RecordType(BIGINT o_orderkey, BIGINT o_custkey, VARCHAR(0) o_orderstatus, DECIMAL(15, 2) o_totalprice, DATE o_orderdate, VARCHAR(0) o_orderpriority, VARCHAR(0) o_clerk, INTEGER o_shippriority, VARCHAR(0) o_comment)
[ERROR] 	rel#27:RelSubset#0.JDBC.DUCK, best=rel#1
[ERROR] 		rel#1:JdbcTableScan.JDBC.DUCK(table=[DUCK, orders]), rowcount=100.0, cumulative cost={100.0 rows, 101.0 cpu, 0.0 io}
[ERROR] 	rel#42:RelSubset#0.ENUMERABLE, best=rel#41
[ERROR] 		rel#41:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#27), rowcount=100.0, cumulative cost={110.0 rows, 111.0 cpu, 0.0 io}
[ERROR] Set#1, type: RecordType(BIGINT o_orderkey, BIGINT o_custkey, VARCHAR(0) o_orderstatus, DECIMAL(15, 2) o_totalprice, DATE o_orderdate, VARCHAR(0) o_orderpriority, VARCHAR(0) o_clerk, INTEGER o_shippriority, VARCHAR(0) o_comment)
[ERROR] 	rel#29:RelSubset#1.NONE, best=null
[ERROR] 		rel#28:LogicalFilter.NONE(input=RelSubset#27,condition=AND(>=($4, 1996-01-01), <($4, +(1996-01-01, 3:INTERVAL MONTH)), EXISTS({
[ERROR] LogicalFilter(condition=[AND(=($0, $cor0.o_orderkey), <($11, $12))])
[ERROR]   JdbcTableScan(table=[[DUCK, lineitem]])
[ERROR] })),variablesSet=[$cor0]), rowcount=6.25, cumulative cost={inf}
[ERROR] 	rel#44:RelSubset#1.JDBC.DUCK, best=rel#43
[ERROR] 		rel#43:JdbcFilter.JDBC.DUCK(input=RelSubset#27,condition=AND(>=($4, 1996-01-01), <($4, +(1996-01-01, 3:INTERVAL MONTH)), EXISTS({
[ERROR] LogicalFilter(condition=[AND(=($0, $cor0.o_orderkey), <($11, $12))])
[ERROR]   JdbcTableScan(table=[[DUCK, lineitem]])
[ERROR] }))), rowcount=6.25, cumulative cost={106.25 rows, 201.0 cpu, 0.0 io}
[ERROR] 	rel#53:RelSubset#1.ENUMERABLE, best=rel#52
[ERROR] 		rel#52:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#44), rowcount=6.25, cumulative cost={106.875 rows, 201.625 cpu, 0.0 io}
[ERROR] Set#2, type: RecordType(VARCHAR(0) o_orderpriority)
[ERROR] 	rel#31:RelSubset#2.NONE, best=null
[ERROR] 		rel#30:LogicalProject.NONE(input=RelSubset#29,exprs=[$5]), rowcount=6.25, cumulative cost={inf}
[ERROR] 	rel#46:RelSubset#2.JDBC.DUCK, best=rel#45
[ERROR] 		rel#45:JdbcProject.JDBC.DUCK(input=RelSubset#44,exprs=[$5]), rowcount=6.25, cumulative cost={111.25 rows, 206.0 cpu, 0.0 io}
[ERROR] 	rel#56:RelSubset#2.ENUMERABLE, best=rel#55
[ERROR] 		rel#55:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#46), rowcount=6.25, cumulative cost={111.875 rows, 206.625 cpu, 0.0 io}
[ERROR] Set#3, type: RecordType(VARCHAR(0) o_orderpriority, BIGINT ORDER_COUNT)
[ERROR] 	rel#33:RelSubset#3.NONE, best=null
[ERROR] 		rel#32:LogicalAggregate.NONE(input=RelSubset#31,group={0},ORDER_COUNT=COUNT()), rowcount=1.0, cumulative cost={inf}
[ERROR] 	rel#48:RelSubset#3.JDBC.DUCK, best=rel#47
[ERROR] 		rel#47:JdbcAggregate.JDBC.DUCK(input=RelSubset#46,group={0},ORDER_COUNT=COUNT()), rowcount=1.0, cumulative cost={112.375 rows, 206.0 cpu, 0.0 io}
[ERROR] 	rel#59:RelSubset#3.ENUMERABLE, best=rel#58
[ERROR] 		rel#58:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#48), rowcount=1.0, cumulative cost={112.475 rows, 206.1 cpu, 0.0 io}
[ERROR] Set#5, type: RecordType(VARCHAR(0) O_ORDERPRIORITY, BIGINT ORDER_COUNT)
[ERROR] 	rel#37:RelSubset#5.NONE, best=null
[ERROR] 		rel#36:LogicalSort.NONE(input=RelSubset#33,sort0=$0,dir0=ASC), rowcount=1.0, cumulative cost={inf}
[ERROR] 	rel#38:RelSubset#5.ENUMERABLE, best=rel#61
[ERROR] 		rel#39:AbstractConverter.ENUMERABLE(input=RelSubset#37,convention=ENUMERABLE), rowcount=1.0, cumulative cost={inf}
[ERROR] 		rel#61:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#50), rowcount=1.0, cumulative cost={113.375 rows, 224.1 cpu, 0.0 io}
[ERROR] 	rel#50:RelSubset#5.JDBC.DUCK, best=rel#49
[ERROR] 		rel#49:JdbcSort.JDBC.DUCK(input=RelSubset#48,sort0=$0,dir0=ASC), rowcount=1.0, cumulative cost={113.275 rows, 224.0 cpu, 0.0 io}
[ERROR] Set#6, type: RecordType(BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment)
[ERROR] 	rel#97:RelSubset#6.JDBC.DUCK, best=rel#68
[ERROR] 		rel#68:JdbcTableScan.JDBC.DUCK(table=[DUCK, lineitem]), rowcount=100.0, cumulative cost={100.0 rows, 101.0 cpu, 0.0 io}
[ERROR] 	rel#113:RelSubset#6.ENUMERABLE, best=rel#112
[ERROR] 		rel#112:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#97), rowcount=100.0, cumulative cost={110.0 rows, 111.0 cpu, 0.0 io}
[ERROR] Set#7, type: RecordType(BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment)
[ERROR] 	rel#99:RelSubset#7.NONE, best=null
[ERROR] 		rel#98:LogicalFilter.NONE(input=RelSubset#97,condition=AND(>=($10, 1995-05-01), <($10, +(1995-05-01, 1:INTERVAL MONTH)))), rowcount=25.0, cumulative cost={inf}
[ERROR] 	rel#115:RelSubset#7.JDBC.DUCK, best=rel#114
[ERROR] 		rel#114:JdbcFilter.JDBC.DUCK(input=RelSubset#97,condition=AND(>=($10, 1995-05-01), <($10, +(1995-05-01, 1:INTERVAL MONTH)))), rowcount=25.0, cumulative cost={125.0 rows, 201.0 cpu, 0.0 io}
[ERROR] 	rel#129:RelSubset#7.ENUMERABLE, best=rel#128
[ERROR] 		rel#128:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#115), rowcount=25.0, cumulative cost={127.5 rows, 203.5 cpu, 0.0 io}
[ERROR] Set#8, type: RecordType(BIGINT p_partkey, VARCHAR(0) p_name, VARCHAR(0) p_mfgr, VARCHAR(0) p_brand, VARCHAR(0) p_type, INTEGER p_size, VARCHAR(0) p_container, DECIMAL(15, 2) p_retailprice, VARCHAR(0) p_comment)
[ERROR] 	rel#100:RelSubset#8.JDBC.DUCK, best=rel#70
[ERROR] 		rel#70:JdbcTableScan.JDBC.DUCK(table=[DUCK, part]), rowcount=100.0, cumulative cost={100.0 rows, 101.0 cpu, 0.0 io}
[ERROR] 	rel#118:RelSubset#8.ENUMERABLE, best=rel#117
[ERROR] 		rel#117:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#100), rowcount=100.0, cumulative cost={110.0 rows, 111.0 cpu, 0.0 io}
[ERROR] Set#9, type: RecordType(BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment, BIGINT p_partkey, VARCHAR(0) p_name, VARCHAR(0) p_mfgr, VARCHAR(0) p_brand, VARCHAR(0) p_type, INTEGER p_size, VARCHAR(0) p_container, DECIMAL(15, 2) p_retailprice, VARCHAR(0) p_comment)
[ERROR] 	rel#102:RelSubset#9.NONE, best=null
[ERROR] 		rel#101:LogicalJoin.NONE(left=RelSubset#99,right=RelSubset#100,condition==($1, $16),joinType=inner), rowcount=375.0, cumulative cost={inf}
[ERROR] 	rel#120:RelSubset#9.JDBC.DUCK, best=rel#119
[ERROR] 		rel#119:JdbcJoin.JDBC.DUCK(left=RelSubset#115,right=RelSubset#100,condition==($1, $16),joinType=inner), rowcount=375.0, cumulative cost={600.0 rows, 302.0 cpu, 0.0 io}
[ERROR] 	rel#132:RelSubset#9.ENUMERABLE, best=rel#131
[ERROR] 		rel#131:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#120), rowcount=375.0, cumulative cost={637.5 rows, 339.5 cpu, 0.0 io}
[ERROR] Set#10, type: RecordType(DECIMAL(19, 4) $f0, DECIMAL(19, 4) $f1)
[ERROR] 	rel#104:RelSubset#10.NONE, best=null
[ERROR] 		rel#103:LogicalProject.NONE(input=RelSubset#102,exprs=[CASE(LIKE($20, 'PROMO%'), *($5, -(1, $6)), 0:DECIMAL(19, 4)), *($5, -(1, $6))]), rowcount=375.0, cumulative cost={inf}
[ERROR] 	rel#122:RelSubset#10.JDBC.DUCK, best=rel#121
[ERROR] 		rel#121:JdbcProject.JDBC.DUCK(input=RelSubset#120,exprs=[CASE(LIKE($20, 'PROMO%'), *($5, -(1, $6)), 0:DECIMAL(19, 4)), *($5, -(1, $6))]), rowcount=375.0, cumulative cost={900.0 rows, 902.0 cpu, 0.0 io}
[ERROR] 	rel#135:RelSubset#10.ENUMERABLE, best=rel#134
[ERROR] 		rel#134:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#122), rowcount=375.0, cumulative cost={937.5 rows, 939.5 cpu, 0.0 io}
[ERROR] Set#11, type: RecordType(DECIMAL(19, 4) $f0, DECIMAL(19, 4) $f1)
[ERROR] 	rel#106:RelSubset#11.NONE, best=null
[ERROR] 		rel#105:LogicalAggregate.NONE(input=RelSubset#104,group={},agg#0=SUM($0),agg#1=SUM($1)), rowcount=1.0, cumulative cost={inf}
[ERROR] 	rel#124:RelSubset#11.JDBC.DUCK, best=rel#123
[ERROR] 		rel#123:JdbcAggregate.JDBC.DUCK(input=RelSubset#122,group={},agg#0=SUM($0),agg#1=SUM($1)), rowcount=1.0, cumulative cost={901.2750000953674 rows, 902.0 cpu, 0.0 io}
[ERROR] 	rel#138:RelSubset#11.ENUMERABLE, best=rel#137
[ERROR] 		rel#137:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#124), rowcount=1.0, cumulative cost={901.3750000953675 rows, 902.1 cpu, 0.0 io}
[ERROR] Set#12, type: RecordType(DECIMAL(19, 2) PROMO_REVENUE)
[ERROR] 	rel#108:RelSubset#12.NONE, best=null
[ERROR] 		rel#107:LogicalProject.NONE(input=RelSubset#106,exprs=[/(*(100.00:DECIMAL(5, 2), $0), $1)]), rowcount=1.0, cumulative cost={inf}
[ERROR] 	rel#109:RelSubset#12.ENUMERABLE, best=rel#140
[ERROR] 		rel#110:AbstractConverter.ENUMERABLE(input=RelSubset#108,convention=ENUMERABLE), rowcount=1.0, cumulative cost={inf}
[ERROR] 		rel#140:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#126), rowcount=1.0, cumulative cost={902.1750000953674 rows, 902.9 cpu, 0.0 io}
[ERROR] 	rel#126:RelSubset#12.JDBC.DUCK, best=rel#125
[ERROR] 		rel#125:JdbcProject.JDBC.DUCK(input=RelSubset#124,exprs=[/(*(100.00:DECIMAL(5, 2), $0), $1)]), rowcount=1.0, cumulative cost={902.0750000953674 rows, 902.8 cpu, 0.0 io}
[ERROR] Set#13, type: RecordType(BIGINT s_suppkey, VARCHAR(0) s_name, VARCHAR(0) s_address, INTEGER s_nationkey, VARCHAR(0) s_phone, DECIMAL(15, 2) s_acctbal, VARCHAR(0) s_comment, BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment, BIGINT o_orderkey, BIGINT o_custkey, VARCHAR(0) o_orderstatus, DECIMAL(15, 2) o_totalprice, DATE o_orderdate, VARCHAR(0) o_orderpriority, VARCHAR(0) o_clerk, INTEGER o_shippriority, VARCHAR(0) o_comment)
[ERROR] 	rel#209:RelSubset#13.NONE, best=null
[ERROR] 		rel#202:LogicalValues.NONE(type=RecordType(BIGINT s_suppkey, VARCHAR(0) s_name, VARCHAR(0) s_address, INTEGER s_nationkey, VARCHAR(0) s_phone, DECIMAL(15, 2) s_acctbal, VARCHAR(0) s_comment, BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment, BIGINT o_orderkey, BIGINT o_custkey, VARCHAR(0) o_orderstatus, DECIMAL(15, 2) o_totalprice, DATE o_orderdate, VARCHAR(0) o_orderpriority, VARCHAR(0) o_clerk, INTEGER o_shippriority, VARCHAR(0) o_comment),tuples=[]), rowcount=1.0, cumulative cost={inf}
[ERROR] 	rel#226:RelSubset#13.JDBC.DUCK, best=rel#225
[ERROR] 		rel#225:JdbcValues.JDBC.DUCK(type=RecordType(BIGINT s_suppkey, VARCHAR(0) s_name, VARCHAR(0) s_address, INTEGER s_nationkey, VARCHAR(0) s_phone, DECIMAL(15, 2) s_acctbal, VARCHAR(0) s_comment, BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment, BIGINT o_orderkey, BIGINT o_custkey, VARCHAR(0) o_orderstatus, DECIMAL(15, 2) o_totalprice, DATE o_orderdate, VARCHAR(0) o_orderpriority, VARCHAR(0) o_clerk, INTEGER o_shippriority, VARCHAR(0) o_comment),tuples=[]), rowcount=1.0, cumulative cost={1.0 rows, 1.0 cpu, 0.0 io}
[ERROR] 	rel#242:RelSubset#13.ENUMERABLE, best=rel#241
[ERROR] 		rel#241:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#226), rowcount=1.0, cumulative cost={1.1 rows, 1.1 cpu, 0.0 io}
[ERROR] Set#14, type: RecordType(INTEGER n_nationkey, VARCHAR(0) n_name, INTEGER n_regionkey, VARCHAR(0) n_comment)
[ERROR] 	rel#210:RelSubset#14.JDBC.DUCK, best=rel#158
[ERROR] 		rel#158:JdbcTableScan.JDBC.DUCK(table=[DUCK, nation]), rowcount=100.0, cumulative cost={100.0 rows, 101.0 cpu, 0.0 io}
[ERROR] 	rel#229:RelSubset#14.ENUMERABLE, best=rel#228
[ERROR] 		rel#228:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#210), rowcount=100.0, cumulative cost={110.0 rows, 111.0 cpu, 0.0 io}
[ERROR] Set#15, type: RecordType(INTEGER n_nationkey, VARCHAR(0) n_name, INTEGER n_regionkey, VARCHAR(0) n_comment)
[ERROR] 	rel#212:RelSubset#15.NONE, best=null
[ERROR] 		rel#211:LogicalFilter.NONE(input=RelSubset#210,condition==(CAST($1):VARCHAR(5) NOT NULL, 'CHINA')), rowcount=15.0, cumulative cost={inf}
[ERROR] 	rel#231:RelSubset#15.JDBC.DUCK, best=rel#230
[ERROR] 		rel#230:JdbcFilter.JDBC.DUCK(input=RelSubset#210,condition==(CAST($1):VARCHAR(5) NOT NULL, 'CHINA')), rowcount=15.0, cumulative cost={115.0 rows, 201.0 cpu, 0.0 io}
[ERROR] 	rel#245:RelSubset#15.ENUMERABLE, best=rel#244
[ERROR] 		rel#244:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#231), rowcount=15.0, cumulative cost={116.5 rows, 202.5 cpu, 0.0 io}
[ERROR] Set#16, type: RecordType(BIGINT s_suppkey, VARCHAR(0) s_name, VARCHAR(0) s_address, INTEGER s_nationkey, VARCHAR(0) s_phone, DECIMAL(15, 2) s_acctbal, VARCHAR(0) s_comment, BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment, BIGINT o_orderkey, BIGINT o_custkey, VARCHAR(0) o_orderstatus, DECIMAL(15, 2) o_totalprice, DATE o_orderdate, VARCHAR(0) o_orderpriority, VARCHAR(0) o_clerk, INTEGER o_shippriority, VARCHAR(0) o_comment, INTEGER n_nationkey, VARCHAR(0) n_name, INTEGER n_regionkey, VARCHAR(0) n_comment)
[ERROR] 	rel#214:RelSubset#16.NONE, best=null
[ERROR] 		rel#213:LogicalJoin.NONE(left=RelSubset#209,right=RelSubset#212,condition==($3, $32),joinType=inner), rowcount=2.25, cumulative cost={inf}
[ERROR] 	rel#233:RelSubset#16.JDBC.DUCK, best=rel#232
[ERROR] 		rel#232:JdbcJoin.JDBC.DUCK(left=RelSubset#226,right=RelSubset#231,condition==($3, $32),joinType=inner), rowcount=2.25, cumulative cost={118.25 rows, 202.0 cpu, 0.0 io}
[ERROR] 	rel#248:RelSubset#16.ENUMERABLE, best=rel#247
[ERROR] 		rel#247:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#233), rowcount=2.25, cumulative cost={118.475 rows, 202.225 cpu, 0.0 io}
[ERROR] Set#17, type: RecordType(VARCHAR(0) s_name)
[ERROR] 	rel#216:RelSubset#17.NONE, best=null
[ERROR] 		rel#215:LogicalProject.NONE(input=RelSubset#214,exprs=[$1]), rowcount=2.25, cumulative cost={inf}
[ERROR] 	rel#235:RelSubset#17.JDBC.DUCK, best=rel#234
[ERROR] 		rel#234:JdbcProject.JDBC.DUCK(input=RelSubset#233,exprs=[$1]), rowcount=2.25, cumulative cost={120.05 rows, 203.8 cpu, 0.0 io}
[ERROR] 	rel#251:RelSubset#17.ENUMERABLE, best=rel#250
[ERROR] 		rel#250:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#235), rowcount=2.25, cumulative cost={120.27499999999999 rows, 204.025 cpu, 0.0 io}
[ERROR] Set#18, type: RecordType(VARCHAR(0) s_name, BIGINT NUMWAIT)
[ERROR] 	rel#218:RelSubset#18.NONE, best=null
[ERROR] 		rel#217:LogicalAggregate.NONE(input=RelSubset#216,group={0},NUMWAIT=COUNT()), rowcount=1.0, cumulative cost={inf}
[ERROR] 	rel#237:RelSubset#18.JDBC.DUCK, best=rel#236
[ERROR] 		rel#236:JdbcAggregate.JDBC.DUCK(input=RelSubset#235,group={0},NUMWAIT=COUNT()), rowcount=1.0, cumulative cost={121.175 rows, 203.8 cpu, 0.0 io}
[ERROR] 	rel#254:RelSubset#18.ENUMERABLE, best=rel#253
[ERROR] 		rel#253:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#237), rowcount=1.0, cumulative cost={121.27499999999999 rows, 203.9 cpu, 0.0 io}
[ERROR] Set#20, type: RecordType(VARCHAR(0) S_NAME, BIGINT NUMWAIT)
[ERROR] 	rel#222:RelSubset#20.NONE, best=null
[ERROR] 		rel#221:LogicalSort.NONE(input=RelSubset#218,sort0=$1,sort1=$0,dir0=DESC,dir1=ASC,fetch=100), rowcount=1.0, cumulative cost={inf}
[ERROR] 	rel#223:RelSubset#20.ENUMERABLE, best=rel#256
[ERROR] 		rel#224:AbstractConverter.ENUMERABLE(input=RelSubset#222,convention=ENUMERABLE), rowcount=1.0, cumulative cost={inf}
[ERROR] 		rel#256:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#239), rowcount=1.0, cumulative cost={122.175 rows, 221.9 cpu, 0.0 io}
[ERROR] 	rel#239:RelSubset#20.JDBC.DUCK, best=rel#238
[ERROR] 		rel#238:JdbcSort.JDBC.DUCK(input=RelSubset#237,sort0=$1,sort1=$0,dir0=DESC,dir1=ASC,fetch=100), rowcount=1.0, cumulative cost={122.075 rows, 221.8 cpu, 0.0 io}
[ERROR] Set#21, type: RecordType(BIGINT p_partkey, VARCHAR(0) p_name, VARCHAR(0) p_mfgr, VARCHAR(0) p_brand, VARCHAR(0) p_type, INTEGER p_size, VARCHAR(0) p_container, DECIMAL(15, 2) p_retailprice, VARCHAR(0) p_comment)
[ERROR] 	rel#344:RelSubset#21.NONE, best=null
[ERROR] 		rel#343:LogicalFilter.NONE(input=RelSubset#100,condition=LIKE($1, '%forest%')), rowcount=25.0, cumulative cost={inf}
[ERROR] 	rel#366:RelSubset#21.JDBC.DUCK, best=rel#365
[ERROR] 		rel#365:JdbcFilter.JDBC.DUCK(input=RelSubset#100,condition=LIKE($1, '%forest%')), rowcount=25.0, cumulative cost={125.0 rows, 201.0 cpu, 0.0 io}
[ERROR] 	rel#391:RelSubset#21.ENUMERABLE, best=rel#390
[ERROR] 		rel#390:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#366), rowcount=25.0, cumulative cost={127.5 rows, 203.5 cpu, 0.0 io}
[ERROR] Set#22, type: RecordType(BIGINT s_suppkey, VARCHAR(0) s_name, VARCHAR(0) s_address, INTEGER s_nationkey, VARCHAR(0) s_phone, DECIMAL(15, 2) s_acctbal, VARCHAR(0) s_comment)
[ERROR] 	rel#345:RelSubset#22.JDBC.DUCK, best=rel#266
[ERROR] 		rel#266:JdbcTableScan.JDBC.DUCK(table=[DUCK, supplier]), rowcount=100.0, cumulative cost={100.0 rows, 101.0 cpu, 0.0 io}
[ERROR] 	rel#369:RelSubset#22.ENUMERABLE, best=rel#368
[ERROR] 		rel#368:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#345), rowcount=100.0, cumulative cost={110.0 rows, 111.0 cpu, 0.0 io}
[ERROR] Set#23, type: RecordType(BIGINT p_partkey, VARCHAR(0) p_name, VARCHAR(0) p_mfgr, VARCHAR(0) p_brand, VARCHAR(0) p_type, INTEGER p_size, VARCHAR(0) p_container, DECIMAL(15, 2) p_retailprice, VARCHAR(0) p_comment, BIGINT s_suppkey, VARCHAR(0) s_name, VARCHAR(0) s_address, INTEGER s_nationkey, VARCHAR(0) s_phone, DECIMAL(15, 2) s_acctbal, VARCHAR(0) s_comment)
[ERROR] 	rel#347:RelSubset#23.NONE, best=null
[ERROR] 		rel#346:LogicalJoin.NONE(left=RelSubset#344,right=RelSubset#345,condition=true,joinType=inner), rowcount=2500.0, cumulative cost={inf}
[ERROR] 	rel#371:RelSubset#23.JDBC.DUCK, best=rel#370
[ERROR] 		rel#370:JdbcJoin.JDBC.DUCK(left=RelSubset#366,right=RelSubset#345,condition=true,joinType=inner), rowcount=2500.0, cumulative cost={2725.0 rows, 302.0 cpu, 0.0 io}
[ERROR] 	rel#394:RelSubset#23.ENUMERABLE, best=rel#393
[ERROR] 		rel#393:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#371), rowcount=2500.0, cumulative cost={2975.0 rows, 552.0 cpu, 0.0 io}
[ERROR] Set#24, type: RecordType(BIGINT p_partkey, VARCHAR(0) p_name, VARCHAR(0) p_mfgr, VARCHAR(0) p_brand, VARCHAR(0) p_type, INTEGER p_size, VARCHAR(0) p_container, DECIMAL(15, 2) p_retailprice, VARCHAR(0) p_comment, BIGINT s_suppkey, VARCHAR(0) s_name, VARCHAR(0) s_address, INTEGER s_nationkey, VARCHAR(0) s_phone, DECIMAL(15, 2) s_acctbal, VARCHAR(0) s_comment, BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment)
[ERROR] 	rel#349:RelSubset#24.NONE, best=null
[ERROR] 		rel#348:LogicalJoin.NONE(left=RelSubset#347,right=RelSubset#97,condition=AND(=($9, $18), =($0, $17)),joinType=inner), rowcount=5625.0, cumulative cost={inf}
[ERROR] 	rel#373:RelSubset#24.JDBC.DUCK, best=rel#372
[ERROR] 		rel#372:JdbcJoin.JDBC.DUCK(left=RelSubset#371,right=RelSubset#97,condition=AND(=($9, $18), =($0, $17)),joinType=inner), rowcount=5625.0, cumulative cost={8450.0 rows, 403.0 cpu, 0.0 io}
[ERROR] 	rel#397:RelSubset#24.ENUMERABLE, best=rel#396
[ERROR] 		rel#396:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#373), rowcount=5625.0, cumulative cost={9012.5 rows, 965.5 cpu, 0.0 io}
[ERROR] Set#25, type: RecordType(BIGINT ps_partkey, BIGINT ps_suppkey, BIGINT ps_availqty, DECIMAL(15, 2) ps_supplycost, VARCHAR(0) ps_comment)
[ERROR] 	rel#350:RelSubset#25.JDBC.DUCK, best=rel#274
[ERROR] 		rel#274:JdbcTableScan.JDBC.DUCK(table=[DUCK, partsupp]), rowcount=100.0, cumulative cost={100.0 rows, 101.0 cpu, 0.0 io}
[ERROR] 	rel#376:RelSubset#25.ENUMERABLE, best=rel#375
[ERROR] 		rel#375:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#350), rowcount=100.0, cumulative cost={110.0 rows, 111.0 cpu, 0.0 io}
[ERROR] Set#26, type: RecordType(BIGINT p_partkey, VARCHAR(0) p_name, VARCHAR(0) p_mfgr, VARCHAR(0) p_brand, VARCHAR(0) p_type, INTEGER p_size, VARCHAR(0) p_container, DECIMAL(15, 2) p_retailprice, VARCHAR(0) p_comment, BIGINT s_suppkey, VARCHAR(0) s_name, VARCHAR(0) s_address, INTEGER s_nationkey, VARCHAR(0) s_phone, DECIMAL(15, 2) s_acctbal, VARCHAR(0) s_comment, BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment, BIGINT ps_partkey, BIGINT ps_suppkey, BIGINT ps_availqty, DECIMAL(15, 2) ps_supplycost, VARCHAR(0) ps_comment)
[ERROR] 	rel#352:RelSubset#26.NONE, best=null
[ERROR] 		rel#351:LogicalJoin.NONE(left=RelSubset#349,right=RelSubset#350,condition=AND(=($33, $18), =($32, $17)),joinType=inner), rowcount=12656.25, cumulative cost={inf}
[ERROR] 	rel#378:RelSubset#26.JDBC.DUCK, best=rel#377
[ERROR] 		rel#377:JdbcJoin.JDBC.DUCK(left=RelSubset#373,right=RelSubset#350,condition=AND(=($33, $18), =($32, $17)),joinType=inner), rowcount=12656.25, cumulative cost={21206.25 rows, 504.0 cpu, 0.0 io}
[ERROR] 	rel#400:RelSubset#26.ENUMERABLE, best=rel#399
[ERROR] 		rel#399:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#378), rowcount=12656.25, cumulative cost={22471.875 rows, 1769.625 cpu, 0.0 io}
[ERROR] Set#27, type: RecordType(BIGINT p_partkey, VARCHAR(0) p_name, VARCHAR(0) p_mfgr, VARCHAR(0) p_brand, VARCHAR(0) p_type, INTEGER p_size, VARCHAR(0) p_container, DECIMAL(15, 2) p_retailprice, VARCHAR(0) p_comment, BIGINT s_suppkey, VARCHAR(0) s_name, VARCHAR(0) s_address, INTEGER s_nationkey, VARCHAR(0) s_phone, DECIMAL(15, 2) s_acctbal, VARCHAR(0) s_comment, BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment, BIGINT ps_partkey, BIGINT ps_suppkey, BIGINT ps_availqty, DECIMAL(15, 2) ps_supplycost, VARCHAR(0) ps_comment, BIGINT o_orderkey, BIGINT o_custkey, VARCHAR(0) o_orderstatus, DECIMAL(15, 2) o_totalprice, DATE o_orderdate, VARCHAR(0) o_orderpriority, VARCHAR(0) o_clerk, INTEGER o_shippriority, VARCHAR(0) o_comment)
[ERROR] 	rel#354:RelSubset#27.NONE, best=null
[ERROR] 		rel#353:LogicalJoin.NONE(left=RelSubset#352,right=RelSubset#27,condition==($37, $16),joinType=inner), rowcount=189843.75, cumulative cost={inf}
[ERROR] 	rel#380:RelSubset#27.JDBC.DUCK, best=rel#379
[ERROR] 		rel#379:JdbcJoin.JDBC.DUCK(left=RelSubset#378,right=RelSubset#27,condition==($37, $16),joinType=inner), rowcount=189843.75, cumulative cost={211150.0 rows, 605.0 cpu, 0.0 io}
[ERROR] 	rel#403:RelSubset#27.ENUMERABLE, best=rel#402
[ERROR] 		rel#402:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#380), rowcount=189843.75, cumulative cost={230134.375 rows, 19589.375 cpu, 0.0 io}
[ERROR] Set#28, type: RecordType(BIGINT p_partkey, VARCHAR(0) p_name, VARCHAR(0) p_mfgr, VARCHAR(0) p_brand, VARCHAR(0) p_type, INTEGER p_size, VARCHAR(0) p_container, DECIMAL(15, 2) p_retailprice, VARCHAR(0) p_comment, BIGINT s_suppkey, VARCHAR(0) s_name, VARCHAR(0) s_address, INTEGER s_nationkey, VARCHAR(0) s_phone, DECIMAL(15, 2) s_acctbal, VARCHAR(0) s_comment, BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment, BIGINT ps_partkey, BIGINT ps_suppkey, BIGINT ps_availqty, DECIMAL(15, 2) ps_supplycost, VARCHAR(0) ps_comment, BIGINT o_orderkey, BIGINT o_custkey, VARCHAR(0) o_orderstatus, DECIMAL(15, 2) o_totalprice, DATE o_orderdate, VARCHAR(0) o_orderpriority, VARCHAR(0) o_clerk, INTEGER o_shippriority, VARCHAR(0) o_comment, INTEGER n_nationkey, VARCHAR(0) n_name, INTEGER n_regionkey, VARCHAR(0) n_comment)
[ERROR] 	rel#356:RelSubset#28.NONE, best=null
[ERROR] 		rel#355:LogicalJoin.NONE(left=RelSubset#354,right=RelSubset#210,condition==($12, $46),joinType=inner), rowcount=2847656.25, cumulative cost={inf}
[ERROR] 	rel#382:RelSubset#28.JDBC.DUCK, best=rel#381
[ERROR] 		rel#381:JdbcJoin.JDBC.DUCK(left=RelSubset#380,right=RelSubset#210,condition==($12, $46),joinType=inner), rowcount=2847656.25, cumulative cost={3058906.25 rows, 706.0 cpu, 0.0 io}
[ERROR] 	rel#406:RelSubset#28.ENUMERABLE, best=rel#405
[ERROR] 		rel#405:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#382), rowcount=2847656.25, cumulative cost={3343671.875 rows, 285471.625 cpu, 0.0 io}
[ERROR] Set#29, type: RecordType(VARCHAR(0) NATION, BIGINT O_YEAR, DECIMAL(19, 4) AMOUNT)
[ERROR] 	rel#358:RelSubset#29.NONE, best=null
[ERROR] 		rel#357:LogicalProject.NONE(input=RelSubset#356,exprs=[$47, EXTRACT(FLAG(YEAR), $41), -(*($21, -(1, $22)), *($35, $20))]), rowcount=2847656.25, cumulative cost={inf}
[ERROR] 	rel#384:RelSubset#29.JDBC.DUCK, best=rel#383
[ERROR] 		rel#383:JdbcProject.JDBC.DUCK(input=RelSubset#382,exprs=[$47, EXTRACT(FLAG(YEAR), $41), -(*($21, -(1, $22)), *($35, $20))]), rowcount=2847656.25, cumulative cost={5337031.25 rows, 6835081.0 cpu, 0.0 io}
[ERROR] 	rel#409:RelSubset#29.ENUMERABLE, best=rel#408
[ERROR] 		rel#408:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#384), rowcount=2847656.25, cumulative cost={5621796.875 rows, 7119846.625 cpu, 0.0 io}
[ERROR] Set#30, type: RecordType(VARCHAR(0) NATION, BIGINT O_YEAR, DECIMAL(19, 4) SUM_PROFIT)
[ERROR] 	rel#360:RelSubset#30.NONE, best=null
[ERROR] 		rel#359:LogicalAggregate.NONE(input=RelSubset#358,group={0, 1},SUM_PROFIT=SUM($2)), rowcount=284765.625, cumulative cost={inf}
[ERROR] 	rel#386:RelSubset#30.JDBC.DUCK, best=rel#385
[ERROR] 		rel#385:JdbcAggregate.JDBC.DUCK(input=RelSubset#384,group={0, 1},SUM_PROFIT=SUM($2)), rowcount=284765.625, cumulative cost={5660952.162016183 rows, 6835081.0 cpu, 0.0 io}
[ERROR] 	rel#412:RelSubset#30.ENUMERABLE, best=rel#411
[ERROR] 		rel#411:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#386), rowcount=284765.625, cumulative cost={5689428.724516183 rows, 6863557.5625 cpu, 0.0 io}
[ERROR] Set#31, type: RecordType(VARCHAR(0) NATION, BIGINT O_YEAR, DECIMAL(19, 4) SUM_PROFIT)
[ERROR] 	rel#362:RelSubset#31.NONE, best=null
[ERROR] 		rel#361:LogicalSort.NONE(input=RelSubset#360,sort0=$0,sort1=$1,dir0=ASC,dir1=DESC), rowcount=284765.625, cumulative cost={inf}
[ERROR] 	rel#363:RelSubset#31.ENUMERABLE, best=rel#414
[ERROR] 		rel#364:AbstractConverter.ENUMERABLE(input=RelSubset#362,convention=ENUMERABLE), rowcount=284765.625, cumulative cost={inf}
[ERROR] 		rel#414:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#388), rowcount=284765.625, cumulative cost={5945717.787016183 rows, 8.411577579826382E7 cpu, 0.0 io}
[ERROR] 	rel#388:RelSubset#31.JDBC.DUCK, best=rel#387
[ERROR] 		rel#387:JdbcSort.JDBC.DUCK(input=RelSubset#386,sort0=$0,sort1=$1,dir0=ASC,dir1=DESC), rowcount=284765.625, cumulative cost={5917241.224516183 rows, 8.408729923576382E7 cpu, 0.0 io}
[ERROR] Set#32, type: RecordType(BIGINT c_custkey, VARCHAR(0) c_name, VARCHAR(0) c_address, INTEGER c_nationkey, VARCHAR(0) c_phone, DECIMAL(15, 2) c_acctbal, VARCHAR(0) c_mktsegment, VARCHAR(0) c_comment)
[ERROR] 	rel#451:RelSubset#32.JDBC.DUCK, best=rel#426
[ERROR] 		rel#426:JdbcTableScan.JDBC.DUCK(table=[DUCK, customer]), rowcount=100.0, cumulative cost={100.0 rows, 101.0 cpu, 0.0 io}
[ERROR] 	rel#464:RelSubset#32.ENUMERABLE, best=rel#463
[ERROR] 		rel#463:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#451), rowcount=100.0, cumulative cost={110.0 rows, 111.0 cpu, 0.0 io}
[ERROR] Set#33, type: RecordType(BIGINT c_custkey, VARCHAR(0) c_name, VARCHAR(0) c_address, INTEGER c_nationkey, VARCHAR(0) c_phone, DECIMAL(15, 2) c_acctbal, VARCHAR(0) c_mktsegment, VARCHAR(0) c_comment)
[ERROR] 	rel#453:RelSubset#33.NONE, best=null
[ERROR] 		rel#452:LogicalFilter.NONE(input=RelSubset#451,condition=<($0, 1000)), rowcount=50.0, cumulative cost={inf}
[ERROR] 	rel#466:RelSubset#33.JDBC.DUCK, best=rel#465
[ERROR] 		rel#465:JdbcFilter.JDBC.DUCK(input=RelSubset#451,condition=<($0, 1000)), rowcount=50.0, cumulative cost={150.0 rows, 201.0 cpu, 0.0 io}
[ERROR] 	rel#475:RelSubset#33.ENUMERABLE, best=rel#474
[ERROR] 		rel#474:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#466), rowcount=50.0, cumulative cost={155.0 rows, 206.0 cpu, 0.0 io}
[ERROR] Set#34, type: RecordType(BIGINT c_custkey, VARCHAR(0) c_name, VARCHAR(0) c_address, INTEGER c_nationkey, VARCHAR(0) c_phone, DECIMAL(15, 2) c_acctbal, VARCHAR(0) c_mktsegment, VARCHAR(0) c_comment, BIGINT o_orderkey, BIGINT o_custkey, VARCHAR(0) o_orderstatus, DECIMAL(15, 2) o_totalprice, DATE o_orderdate, VARCHAR(0) o_orderpriority, VARCHAR(0) o_clerk, INTEGER o_shippriority, VARCHAR(0) o_comment)
[ERROR] 	rel#455:RelSubset#34.NONE, best=null
[ERROR] 		rel#454:LogicalJoin.NONE(left=RelSubset#453,right=RelSubset#27,condition==($9, $0),joinType=inner), rowcount=750.0, cumulative cost={inf}
[ERROR] 	rel#468:RelSubset#34.JDBC.DUCK, best=rel#467
[ERROR] 		rel#467:JdbcJoin.JDBC.DUCK(left=RelSubset#466,right=RelSubset#27,condition==($9, $0),joinType=inner), rowcount=750.0, cumulative cost={1000.0 rows, 302.0 cpu, 0.0 io}
[ERROR] 	rel#478:RelSubset#34.ENUMERABLE, best=rel#477
[ERROR] 		rel#477:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#468), rowcount=750.0, cumulative cost={1075.0 rows, 377.0 cpu, 0.0 io}
[ERROR] Set#35, type: RecordType(BIGINT C_CUSTKEY, BIGINT O_ORDERKEY, VARCHAR(0) C_NAME, DECIMAL(15, 2) O_TOTALPRICE)
[ERROR] 	rel#457:RelSubset#35.NONE, best=null
[ERROR] 		rel#456:LogicalProject.NONE(input=RelSubset#455,inputs=0,exprs=[$8, $1, $11]), rowcount=750.0, cumulative cost={inf}
[ERROR] 	rel#470:RelSubset#35.JDBC.DUCK, best=rel#469
[ERROR] 		rel#469:JdbcProject.JDBC.DUCK(input=RelSubset#468,inputs=0,exprs=[$8, $1, $11]), rowcount=750.0, cumulative cost={1600.0 rows, 2702.0 cpu, 0.0 io}
[ERROR] 	rel#481:RelSubset#35.ENUMERABLE, best=rel#480
[ERROR] 		rel#480:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#470), rowcount=750.0, cumulative cost={1675.0 rows, 2777.0 cpu, 0.0 io}
[ERROR] Set#36, type: RecordType(BIGINT C_CUSTKEY, BIGINT O_ORDERKEY, VARCHAR(0) C_NAME, DECIMAL(15, 2) O_TOTALPRICE)
[ERROR] 	rel#459:RelSubset#36.NONE, best=null
[ERROR] 		rel#458:LogicalSort.NONE(input=RelSubset#457,sort0=$0,dir0=ASC), rowcount=750.0, cumulative cost={inf}
[ERROR] 	rel#460:RelSubset#36.ENUMERABLE, best=rel#483
[ERROR] 		rel#461:AbstractConverter.ENUMERABLE(input=RelSubset#459,convention=ENUMERABLE), rowcount=750.0, cumulative cost={inf}
[ERROR] 		rel#483:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#472), rowcount=750.0, cumulative cost={2350.0 rows, 127896.38360342373 cpu, 0.0 io}
[ERROR] 	rel#472:RelSubset#36.JDBC.DUCK, best=rel#471
[ERROR] 		rel#471:JdbcSort.JDBC.DUCK(input=RelSubset#470,sort0=$0,dir0=ASC), rowcount=750.0, cumulative cost={2275.0 rows, 127821.38360342373 cpu, 0.0 io}
[ERROR] Set#37, type: RecordType(BIGINT o_orderkey, BIGINT o_custkey, VARCHAR(0) o_orderstatus, DECIMAL(15, 2) o_totalprice, DATE o_orderdate, VARCHAR(0) o_orderpriority, VARCHAR(0) o_clerk, INTEGER o_shippriority, VARCHAR(0) o_comment)
[ERROR] 	rel#550:RelSubset#37.NONE, best=null
[ERROR] 		rel#549:LogicalFilter.NONE(input=RelSubset#27,condition=AND(>=($4, 1993-02-01), <($4, +(1993-02-01, 3:INTERVAL MONTH)))), rowcount=25.0, cumulative cost={inf}
[ERROR] 	rel#570:RelSubset#37.JDBC.DUCK, best=rel#569
[ERROR] 		rel#569:JdbcFilter.JDBC.DUCK(input=RelSubset#27,condition=AND(>=($4, 1993-02-01), <($4, +(1993-02-01, 3:INTERVAL MONTH)))), rowcount=25.0, cumulative cost={125.0 rows, 201.0 cpu, 0.0 io}
[ERROR] 	rel#589:RelSubset#37.ENUMERABLE, best=rel#588
[ERROR] 		rel#588:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#570), rowcount=25.0, cumulative cost={127.5 rows, 203.5 cpu, 0.0 io}
[ERROR] Set#38, type: RecordType(BIGINT c_custkey, VARCHAR(0) c_name, VARCHAR(0) c_address, INTEGER c_nationkey, VARCHAR(0) c_phone, DECIMAL(15, 2) c_acctbal, VARCHAR(0) c_mktsegment, VARCHAR(0) c_comment, BIGINT o_orderkey, BIGINT o_custkey, VARCHAR(0) o_orderstatus, DECIMAL(15, 2) o_totalprice, DATE o_orderdate, VARCHAR(0) o_orderpriority, VARCHAR(0) o_clerk, INTEGER o_shippriority, VARCHAR(0) o_comment)
[ERROR] 	rel#552:RelSubset#38.NONE, best=null
[ERROR] 		rel#551:LogicalJoin.NONE(left=RelSubset#451,right=RelSubset#550,condition==($0, $9),joinType=inner), rowcount=375.0, cumulative cost={inf}
[ERROR] 	rel#572:RelSubset#38.JDBC.DUCK, best=rel#571
[ERROR] 		rel#571:JdbcJoin.JDBC.DUCK(left=RelSubset#451,right=RelSubset#570,condition==($0, $9),joinType=inner), rowcount=375.0, cumulative cost={600.0 rows, 302.0 cpu, 0.0 io}
[ERROR] 	rel#592:RelSubset#38.ENUMERABLE, best=rel#591
[ERROR] 		rel#591:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#572), rowcount=375.0, cumulative cost={637.5 rows, 339.5 cpu, 0.0 io}
[ERROR] Set#39, type: RecordType(BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment)
[ERROR] 	rel#554:RelSubset#39.NONE, best=null
[ERROR] 		rel#553:LogicalFilter.NONE(input=RelSubset#97,condition==(CAST($8):VARCHAR(1) NOT NULL, 'R')), rowcount=15.0, cumulative cost={inf}
[ERROR] 	rel#574:RelSubset#39.JDBC.DUCK, best=rel#573
[ERROR] 		rel#573:JdbcFilter.JDBC.DUCK(input=RelSubset#97,condition==(CAST($8):VARCHAR(1) NOT NULL, 'R')), rowcount=15.0, cumulative cost={115.0 rows, 201.0 cpu, 0.0 io}
[ERROR] 	rel#595:RelSubset#39.ENUMERABLE, best=rel#594
[ERROR] 		rel#594:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#574), rowcount=15.0, cumulative cost={116.5 rows, 202.5 cpu, 0.0 io}
[ERROR] Set#40, type: RecordType(BIGINT c_custkey, VARCHAR(0) c_name, VARCHAR(0) c_address, INTEGER c_nationkey, VARCHAR(0) c_phone, DECIMAL(15, 2) c_acctbal, VARCHAR(0) c_mktsegment, VARCHAR(0) c_comment, BIGINT o_orderkey, BIGINT o_custkey, VARCHAR(0) o_orderstatus, DECIMAL(15, 2) o_totalprice, DATE o_orderdate, VARCHAR(0) o_orderpriority, VARCHAR(0) o_clerk, INTEGER o_shippriority, VARCHAR(0) o_comment, BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment)
[ERROR] 	rel#556:RelSubset#40.NONE, best=null
[ERROR] 		rel#555:LogicalJoin.NONE(left=RelSubset#552,right=RelSubset#554,condition==($17, $8),joinType=inner), rowcount=843.75, cumulative cost={inf}
[ERROR] 	rel#576:RelSubset#40.JDBC.DUCK, best=rel#575
[ERROR] 		rel#575:JdbcJoin.JDBC.DUCK(left=RelSubset#572,right=RelSubset#574,condition==($17, $8),joinType=inner), rowcount=843.75, cumulative cost={1558.75 rows, 503.0 cpu, 0.0 io}
[ERROR] 	rel#598:RelSubset#40.ENUMERABLE, best=rel#597
[ERROR] 		rel#597:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#576), rowcount=843.75, cumulative cost={1643.125 rows, 587.375 cpu, 0.0 io}
[ERROR] Set#41, type: RecordType(BIGINT c_custkey, VARCHAR(0) c_name, VARCHAR(0) c_address, INTEGER c_nationkey, VARCHAR(0) c_phone, DECIMAL(15, 2) c_acctbal, VARCHAR(0) c_mktsegment, VARCHAR(0) c_comment, BIGINT o_orderkey, BIGINT o_custkey, VARCHAR(0) o_orderstatus, DECIMAL(15, 2) o_totalprice, DATE o_orderdate, VARCHAR(0) o_orderpriority, VARCHAR(0) o_clerk, INTEGER o_shippriority, VARCHAR(0) o_comment, BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment, INTEGER n_nationkey, VARCHAR(0) n_name, INTEGER n_regionkey, VARCHAR(0) n_comment)
[ERROR] 	rel#558:RelSubset#41.NONE, best=null
[ERROR] 		rel#557:LogicalJoin.NONE(left=RelSubset#556,right=RelSubset#210,condition==($3, $33),joinType=inner), rowcount=12656.25, cumulative cost={inf}
[ERROR] 	rel#578:RelSubset#41.JDBC.DUCK, best=rel#577
[ERROR] 		rel#577:JdbcJoin.JDBC.DUCK(left=RelSubset#576,right=RelSubset#210,condition==($3, $33),joinType=inner), rowcount=12656.25, cumulative cost={14315.0 rows, 604.0 cpu, 0.0 io}
[ERROR] 	rel#601:RelSubset#41.ENUMERABLE, best=rel#600
[ERROR] 		rel#600:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#578), rowcount=12656.25, cumulative cost={15580.625 rows, 1869.625 cpu, 0.0 io}
[ERROR] Set#42, type: RecordType(BIGINT c_custkey, VARCHAR(0) c_name, DECIMAL(15, 2) c_acctbal, VARCHAR(0) c_phone, VARCHAR(0) n_name, VARCHAR(0) c_address, VARCHAR(0) c_comment, DECIMAL(19, 4) $f7)
[ERROR] 	rel#560:RelSubset#42.NONE, best=null
[ERROR] 		rel#559:LogicalProject.NONE(input=RelSubset#558,inputs=0..1,exprs=[$5, $4, $34, $2, $7, *($22, -(1, $23))]), rowcount=12656.25, cumulative cost={inf}
[ERROR] 	rel#580:RelSubset#42.JDBC.DUCK, best=rel#579
[ERROR] 		rel#579:JdbcProject.JDBC.DUCK(input=RelSubset#578,inputs=0..1,exprs=[$5, $4, $34, $2, $7, *($22, -(1, $23))]), rowcount=12656.25, cumulative cost={24440.0 rows, 81604.0 cpu, 0.0 io}
[ERROR] 	rel#604:RelSubset#42.ENUMERABLE, best=rel#603
[ERROR] 		rel#603:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#580), rowcount=12656.25, cumulative cost={25705.625 rows, 82869.625 cpu, 0.0 io}
[ERROR] Set#43, type: RecordType(BIGINT c_custkey, VARCHAR(0) c_name, DECIMAL(15, 2) c_acctbal, VARCHAR(0) c_phone, VARCHAR(0) n_name, VARCHAR(0) c_address, VARCHAR(0) c_comment, DECIMAL(19, 4) REVENUE)
[ERROR] 	rel#562:RelSubset#43.NONE, best=null
[ERROR] 		rel#561:LogicalAggregate.NONE(input=RelSubset#560,group={0, 1, 2, 3, 4, 5, 6},REVENUE=SUM($7)), rowcount=1265.625, cumulative cost={inf}
[ERROR] 	rel#582:RelSubset#43.JDBC.DUCK, best=rel#581
[ERROR] 		rel#581:JdbcAggregate.JDBC.DUCK(input=RelSubset#580,group={0, 1, 2, 3, 4, 5, 6},REVENUE=SUM($7)), rowcount=1265.625, cumulative cost={25879.648497849703 rows, 81604.0 cpu, 0.0 io}
[ERROR] 	rel#607:RelSubset#43.ENUMERABLE, best=rel#606
[ERROR] 		rel#606:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#582), rowcount=1265.625, cumulative cost={26006.210997849703 rows, 81730.5625 cpu, 0.0 io}
[ERROR] Set#44, type: RecordType(BIGINT C_CUSTKEY, VARCHAR(0) C_NAME, DECIMAL(19, 4) REVENUE, DECIMAL(15, 2) C_ACCTBAL, VARCHAR(0) N_NAME, VARCHAR(0) C_ADDRESS, VARCHAR(0) C_PHONE, VARCHAR(0) C_COMMENT)
[ERROR] 	rel#564:RelSubset#44.NONE, best=null
[ERROR] 		rel#563:LogicalProject.NONE(input=RelSubset#562,inputs=0..1,exprs=[$7, $2, $4, $5, $3, $6]), rowcount=1265.625, cumulative cost={inf}
[ERROR] 	rel#584:RelSubset#44.JDBC.DUCK, best=rel#583
[ERROR] 		rel#583:JdbcProject.JDBC.DUCK(input=RelSubset#582,inputs=0..1,exprs=[$7, $2, $4, $5, $3, $6]), rowcount=1265.625, cumulative cost={26892.148497849703 rows, 89704.0 cpu, 0.0 io}
[ERROR] 	rel#610:RelSubset#44.ENUMERABLE, best=rel#609
[ERROR] 		rel#609:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#584), rowcount=1265.625, cumulative cost={27018.710997849703 rows, 89830.5625 cpu, 0.0 io}
[ERROR] Set#45, type: RecordType(BIGINT C_CUSTKEY, VARCHAR(0) C_NAME, DECIMAL(19, 4) REVENUE, DECIMAL(15, 2) C_ACCTBAL, VARCHAR(0) N_NAME, VARCHAR(0) C_ADDRESS, VARCHAR(0) C_PHONE, VARCHAR(0) C_COMMENT)
[ERROR] 	rel#566:RelSubset#45.NONE, best=null
[ERROR] 		rel#565:LogicalSort.NONE(input=RelSubset#564,sort0=$2,dir0=DESC,fetch=20), rowcount=20.0, cumulative cost={inf}
[ERROR] 	rel#567:RelSubset#45.ENUMERABLE, best=rel#612
[ERROR] 		rel#568:AbstractConverter.ENUMERABLE(input=RelSubset#566,convention=ENUMERABLE), rowcount=20.0, cumulative cost={inf}
[ERROR] 		rel#612:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#586), rowcount=20.0, cumulative cost={26912.148497849703 rows, 239848.3568851841 cpu, 0.0 io}
[ERROR] 	rel#586:RelSubset#45.JDBC.DUCK, best=rel#585
[ERROR] 		rel#585:JdbcSort.JDBC.DUCK(input=RelSubset#584,sort0=$2,dir0=DESC,fetch=20), rowcount=20.0, cumulative cost={26910.148497849703 rows, 239846.3568851841 cpu, 0.0 io}
[ERROR] Set#46, type: RecordType(BIGINT supplier_no, DECIMAL(19, 4) total_revenue)
[ERROR] 	rel#653:RelSubset#46.JDBC.DUCK, best=rel#626
[ERROR] 		rel#626:JdbcTableScan.JDBC.DUCK(table=[DUCK, revenue0r15721]), rowcount=100.0, cumulative cost={100.0 rows, 101.0 cpu, 0.0 io}
[ERROR] 	rel#666:RelSubset#46.ENUMERABLE, best=rel#665
[ERROR] 		rel#665:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#653), rowcount=100.0, cumulative cost={110.0 rows, 111.0 cpu, 0.0 io}
[ERROR] Set#47, type: RecordType(BIGINT supplier_no, DECIMAL(19, 4) total_revenue)
[ERROR] 	rel#655:RelSubset#47.NONE, best=null
[ERROR] 		rel#654:LogicalFilter.NONE(input=RelSubset#653,condition==($1, $SCALAR_QUERY({
[ERROR] LogicalAggregate(group=[{}], EXPR$0=[MAX($0)])
[ERROR]   LogicalProject(total_revenue=[$1])
[ERROR]     JdbcTableScan(table=[[DUCK, revenue0r15721]])
[ERROR] }))), rowcount=15.0, cumulative cost={inf}
[ERROR] 	rel#668:RelSubset#47.JDBC.DUCK, best=rel#667
[ERROR] 		rel#667:JdbcFilter.JDBC.DUCK(input=RelSubset#653,condition==($1, $SCALAR_QUERY({
[ERROR] LogicalAggregate(group=[{}], EXPR$0=[MAX($0)])
[ERROR]   LogicalProject(total_revenue=[$1])
[ERROR]     JdbcTableScan(table=[[DUCK, revenue0r15721]])
[ERROR] }))), rowcount=15.0, cumulative cost={115.0 rows, 201.0 cpu, 0.0 io}
[ERROR] 	rel#677:RelSubset#47.ENUMERABLE, best=rel#676
[ERROR] 		rel#676:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#668), rowcount=15.0, cumulative cost={116.5 rows, 202.5 cpu, 0.0 io}
[ERROR] Set#48, type: RecordType(BIGINT s_suppkey, VARCHAR(0) s_name, VARCHAR(0) s_address, INTEGER s_nationkey, VARCHAR(0) s_phone, DECIMAL(15, 2) s_acctbal, VARCHAR(0) s_comment, BIGINT supplier_no, DECIMAL(19, 4) total_revenue)
[ERROR] 	rel#657:RelSubset#48.NONE, best=null
[ERROR] 		rel#656:LogicalJoin.NONE(left=RelSubset#345,right=RelSubset#655,condition==($0, $7),joinType=inner), rowcount=225.0, cumulative cost={inf}
[ERROR] 	rel#670:RelSubset#48.JDBC.DUCK, best=rel#669
[ERROR] 		rel#669:JdbcJoin.JDBC.DUCK(left=RelSubset#345,right=RelSubset#668,condition==($0, $7),joinType=inner), rowcount=225.0, cumulative cost={440.0 rows, 302.0 cpu, 0.0 io}
[ERROR] 	rel#680:RelSubset#48.ENUMERABLE, best=rel#679
[ERROR] 		rel#679:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#670), rowcount=225.0, cumulative cost={462.5 rows, 324.5 cpu, 0.0 io}
[ERROR] Set#49, type: RecordType(BIGINT S_SUPPKEY, VARCHAR(0) S_NAME, VARCHAR(0) S_ADDRESS, VARCHAR(0) S_PHONE, DECIMAL(19, 4) TOTAL_REVENUE)
[ERROR] 	rel#659:RelSubset#49.NONE, best=null
[ERROR] 		rel#658:LogicalProject.NONE(input=RelSubset#657,inputs=0..2,exprs=[$4, $8]), rowcount=225.0, cumulative cost={inf}
[ERROR] 	rel#672:RelSubset#49.JDBC.DUCK, best=rel#671
[ERROR] 		rel#671:JdbcProject.JDBC.DUCK(input=RelSubset#670,inputs=0..2,exprs=[$4, $8]), rowcount=225.0, cumulative cost={620.0 rows, 1202.0 cpu, 0.0 io}
[ERROR] 	rel#683:RelSubset#49.ENUMERABLE, best=rel#682
[ERROR] 		rel#682:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#672), rowcount=225.0, cumulative cost={642.5 rows, 1224.5 cpu, 0.0 io}
[ERROR] Set#50, type: RecordType(BIGINT S_SUPPKEY, VARCHAR(0) S_NAME, VARCHAR(0) S_ADDRESS, VARCHAR(0) S_PHONE, DECIMAL(19, 4) TOTAL_REVENUE)
[ERROR] 	rel#661:RelSubset#50.NONE, best=null
[ERROR] 		rel#660:LogicalSort.NONE(input=RelSubset#659,sort0=$0,dir0=ASC), rowcount=225.0, cumulative cost={inf}
[ERROR] 	rel#662:RelSubset#50.ENUMERABLE, best=rel#685
[ERROR] 		rel#663:AbstractConverter.ENUMERABLE(input=RelSubset#661,convention=ENUMERABLE), rowcount=225.0, cumulative cost={inf}
[ERROR] 		rel#685:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#674), rowcount=225.0, cumulative cost={845.0 rows, 36320.83060628464 cpu, 0.0 io}
[ERROR] 	rel#674:RelSubset#50.JDBC.DUCK, best=rel#673
[ERROR] 		rel#673:JdbcSort.JDBC.DUCK(input=RelSubset#672,sort0=$0,dir0=ASC), rowcount=225.0, cumulative cost={822.5 rows, 36298.33060628464 cpu, 0.0 io}
[ERROR] Set#51, type: RecordType(BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment, BIGINT p_partkey, VARCHAR(0) p_name, VARCHAR(0) p_mfgr, VARCHAR(0) p_brand, VARCHAR(0) p_type, INTEGER p_size, VARCHAR(0) p_container, DECIMAL(15, 2) p_retailprice, VARCHAR(0) p_comment)
[ERROR] 	rel#715:RelSubset#51.NONE, best=null
[ERROR] 		rel#714:LogicalJoin.NONE(left=RelSubset#97,right=RelSubset#100,condition=OR(AND(=($16, $1), =(CAST($19):VARCHAR(8) NOT NULL, 'Brand#52'), OR(=($22, 'SM CASE'), =($22, 'SM BOX'), =($22, 'SM PACK'), =($22, 'SM PKG')), >=($4, 9), <=($4, +(9, 10)), >=($21, 1), <=($21, 5), OR(=($14, 'AIR'), =($14, 'AIR REG')), =(CAST($13):VARCHAR(17) NOT NULL, 'DELIVER IN PERSON')), AND(=($16, $1), =(CAST($19):VARCHAR(8) NOT NULL, 'Brand#42'), OR(=($22, 'MED BAG'), =($22, 'MED BOX'), =($22, 'MED PKG'), =($22, 'MED PACK')), >=($4, 18), <=($4, +(18, 10)), >=($21, 1), <=($21, 10), OR(=($14, 'AIR'), =($14, 'AIR REG')), =(CAST($13):VARCHAR(17) NOT NULL, 'DELIVER IN PERSON')), AND(=($16, $1), =(CAST($19):VARCHAR(8) NOT NULL, 'Brand#23'), OR(=($22, 'LG CASE'), =($22, 'LG BOX'), =($22, 'LG PACK'), =($22, 'LG PKG')), >=($4, 22), <=($4, +(22, 10)), >=($21, 1), <=($21, 15), OR(=($14, 'AIR'), =($14, 'AIR REG')), =(CAST($13):VARCHAR(17) NOT NULL, 'DELIVER IN PERSON'))),joinType=inner), rowcount=2500.0, cumulative cost={inf}
[ERROR] 	rel#722:RelSubset#51.JDBC.DUCK, best=null
[ERROR] Set#52, type: RecordType(DECIMAL(19, 4) $f0)
[ERROR] 	rel#717:RelSubset#52.NONE, best=null
[ERROR] 		rel#716:LogicalProject.NONE(input=RelSubset#715,exprs=[*($5, -(1, $6))]), rowcount=2500.0, cumulative cost={inf}
[ERROR] 	rel#724:RelSubset#52.JDBC.DUCK, best=null
[ERROR] 		rel#723:JdbcProject.JDBC.DUCK(input=RelSubset#722,exprs=[*($5, -(1, $6))]), rowcount=2500.0, cumulative cost={inf}
[ERROR] 	rel#729:RelSubset#52.ENUMERABLE, best=null
[ERROR] 		rel#728:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#724), rowcount=2500.0, cumulative cost={inf}
[ERROR] Set#53, type: RecordType(DECIMAL(19, 4) REVENUE)
[ERROR] 	rel#719:RelSubset#53.NONE, best=null
[ERROR] 		rel#718:LogicalAggregate.NONE(input=RelSubset#717,group={},REVENUE=SUM($0)), rowcount=1.0, cumulative cost={inf}
[ERROR] 	rel#720:RelSubset#53.ENUMERABLE, best=null
[ERROR] 		rel#721:AbstractConverter.ENUMERABLE(input=RelSubset#719,convention=ENUMERABLE), rowcount=1.0, cumulative cost={inf}
[ERROR] 		rel#731:JdbcToEnumerableConverter.ENUMERABLE(input=RelSubset#726), rowcount=1.0, cumulative cost={inf}
[ERROR] 	rel#726:RelSubset#53.JDBC.DUCK, best=null
[ERROR] 		rel#725:JdbcAggregate.JDBC.DUCK(input=RelSubset#724,group={},REVENUE=SUM($0)), rowcount=1.0, cumulative cost={inf}
[ERROR] 
[ERROR] Graphviz:
[ERROR] digraph G {
[ERROR] 	root [style=filled,label="Root"];
[ERROR] 	subgraph cluster0{
[ERROR] 		label="Set 0 RecordType(BIGINT o_orderkey, BIGINT o_custkey, VARCHAR(0) o_orderstatus, DECIMAL(15, 2) o_totalprice, DATE o_orderdate, VARCHAR(0) o_orderpriority, VARCHAR(0) o_clerk, INTEGER o_shippriority, VARCHAR(0) o_comment)";
[ERROR] 		rel1 [label="rel#1:JdbcTableScan\ntable=[DUCK, orders]\nrows=100.0, cost={100.0 rows, 101.0 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		rel41 [label="rel#41:JdbcToEnumerableConverter\ninput=RelSubset#27\nrows=100.0, cost={110.0 rows, 111.0 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		subset27 [label="rel#27:RelSubset#0.JDBC.DUCK"]
[ERROR] 		subset42 [label="rel#42:RelSubset#0.ENUMERABLE"]
[ERROR] 	}
[ERROR] 	subgraph cluster1{
[ERROR] 		label="Set 1 RecordType(BIGINT o_orderkey, BIGINT o_custkey, VARCHAR(0) o_orderstatus, DECIMAL(15, 2) o_totalprice, DATE o_orderdate, VARCHAR(0) o_orderpriority, VARCHAR(0) o_clerk, INTEGER o_shippriority, VARCHAR(0) o_comment)";
[ERROR] 		rel28 [label="rel#28:LogicalFilter\ninput=RelSubset#27,condition=AND(>=($4, 1996-01-01), <($4, +(1996-01-01, 3:INTERVAL MONTH)), EXISTS({\nLogicalFilter(condition=[AND(=($0, $cor0.o_orderkey), <($11, $12))])\n  JdbcTableScan(table=[[DUCK, lineitem]])\n})),variablesSet=[$cor0]\nrows=6.25, cost={inf}",shape=box]
[ERROR] 		rel43 [label="rel#43:JdbcFilter\ninput=RelSubset#27,condition=AND(>=($4, 1996-01-01), <($4, +(1996-01-01, 3:INTERVAL MONTH)), EXISTS({\nLogicalFilter(condition=[AND(=($0, $cor0.o_orderkey), <($11, $12))])\n  JdbcTableScan(table=[[DUCK, lineitem]])\n}))\nrows=6.25, cost={106.25 rows, 201.0 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		rel52 [label="rel#52:JdbcToEnumerableConverter\ninput=RelSubset#44\nrows=6.25, cost={106.875 rows, 201.625 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		subset29 [label="rel#29:RelSubset#1.NONE"]
[ERROR] 		subset44 [label="rel#44:RelSubset#1.JDBC.DUCK"]
[ERROR] 		subset53 [label="rel#53:RelSubset#1.ENUMERABLE"]
[ERROR] 	}
[ERROR] 	subgraph cluster2{
[ERROR] 		label="Set 2 RecordType(VARCHAR(0) o_orderpriority)";
[ERROR] 		rel30 [label="rel#30:LogicalProject\ninput=RelSubset#29,exprs=[$5]\nrows=6.25, cost={inf}",shape=box]
[ERROR] 		rel45 [label="rel#45:JdbcProject\ninput=RelSubset#44,exprs=[$5]\nrows=6.25, cost={111.25 rows, 206.0 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		rel55 [label="rel#55:JdbcToEnumerableConverter\ninput=RelSubset#46\nrows=6.25, cost={111.875 rows, 206.625 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		subset31 [label="rel#31:RelSubset#2.NONE"]
[ERROR] 		subset46 [label="rel#46:RelSubset#2.JDBC.DUCK"]
[ERROR] 		subset56 [label="rel#56:RelSubset#2.ENUMERABLE"]
[ERROR] 	}
[ERROR] 	subgraph cluster3{
[ERROR] 		label="Set 3 RecordType(VARCHAR(0) o_orderpriority, BIGINT ORDER_COUNT)";
[ERROR] 		rel32 [label="rel#32:LogicalAggregate\ninput=RelSubset#31,group={0},ORDER_COUNT=COUNT()\nrows=1.0, cost={inf}",shape=box]
[ERROR] 		rel47 [label="rel#47:JdbcAggregate\ninput=RelSubset#46,group={0},ORDER_COUNT=COUNT()\nrows=1.0, cost={112.375 rows, 206.0 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		rel58 [label="rel#58:JdbcToEnumerableConverter\ninput=RelSubset#48\nrows=1.0, cost={112.475 rows, 206.1 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		subset33 [label="rel#33:RelSubset#3.NONE"]
[ERROR] 		subset48 [label="rel#48:RelSubset#3.JDBC.DUCK"]
[ERROR] 		subset59 [label="rel#59:RelSubset#3.ENUMERABLE"]
[ERROR] 	}
[ERROR] 	subgraph cluster5{
[ERROR] 		label="Set 5 RecordType(VARCHAR(0) O_ORDERPRIORITY, BIGINT ORDER_COUNT)";
[ERROR] 		rel36 [label="rel#36:LogicalSort\ninput=RelSubset#33,sort0=$0,dir0=ASC\nrows=1.0, cost={inf}",shape=box]
[ERROR] 		rel39 [label="rel#39:AbstractConverter\ninput=RelSubset#37,convention=ENUMERABLE\nrows=1.0, cost={inf}",shape=box]
[ERROR] 		rel49 [label="rel#49:JdbcSort\ninput=RelSubset#48,sort0=$0,dir0=ASC\nrows=1.0, cost={113.275 rows, 224.0 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		rel61 [label="rel#61:JdbcToEnumerableConverter\ninput=RelSubset#50\nrows=1.0, cost={113.375 rows, 224.1 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		subset37 [label="rel#37:RelSubset#5.NONE"]
[ERROR] 		subset38 [label="rel#38:RelSubset#5.ENUMERABLE"]
[ERROR] 		subset50 [label="rel#50:RelSubset#5.JDBC.DUCK"]
[ERROR] 	}
[ERROR] 	subgraph cluster6{
[ERROR] 		label="Set 6 RecordType(BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment)";
[ERROR] 		rel68 [label="rel#68:JdbcTableScan\ntable=[DUCK, lineitem]\nrows=100.0, cost={100.0 rows, 101.0 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		rel112 [label="rel#112:JdbcToEnumerableConverter\ninput=RelSubset#97\nrows=100.0, cost={110.0 rows, 111.0 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		subset97 [label="rel#97:RelSubset#6.JDBC.DUCK"]
[ERROR] 		subset113 [label="rel#113:RelSubset#6.ENUMERABLE"]
[ERROR] 	}
[ERROR] 	subgraph cluster7{
[ERROR] 		label="Set 7 RecordType(BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment)";
[ERROR] 		rel98 [label="rel#98:LogicalFilter\ninput=RelSubset#97,condition=AND(>=($10, 1995-05-01), <($10, +(1995-05-01, 1:INTERVAL MONTH)))\nrows=25.0, cost={inf}",shape=box]
[ERROR] 		rel114 [label="rel#114:JdbcFilter\ninput=RelSubset#97,condition=AND(>=($10, 1995-05-01), <($10, +(1995-05-01, 1:INTERVAL MONTH)))\nrows=25.0, cost={125.0 rows, 201.0 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		rel128 [label="rel#128:JdbcToEnumerableConverter\ninput=RelSubset#115\nrows=25.0, cost={127.5 rows, 203.5 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		subset99 [label="rel#99:RelSubset#7.NONE"]
[ERROR] 		subset115 [label="rel#115:RelSubset#7.JDBC.DUCK"]
[ERROR] 		subset129 [label="rel#129:RelSubset#7.ENUMERABLE"]
[ERROR] 	}
[ERROR] 	subgraph cluster8{
[ERROR] 		label="Set 8 RecordType(BIGINT p_partkey, VARCHAR(0) p_name, VARCHAR(0) p_mfgr, VARCHAR(0) p_brand, VARCHAR(0) p_type, INTEGER p_size, VARCHAR(0) p_container, DECIMAL(15, 2) p_retailprice, VARCHAR(0) p_comment)";
[ERROR] 		rel70 [label="rel#70:JdbcTableScan\ntable=[DUCK, part]\nrows=100.0, cost={100.0 rows, 101.0 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		rel117 [label="rel#117:JdbcToEnumerableConverter\ninput=RelSubset#100\nrows=100.0, cost={110.0 rows, 111.0 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		subset100 [label="rel#100:RelSubset#8.JDBC.DUCK"]
[ERROR] 		subset118 [label="rel#118:RelSubset#8.ENUMERABLE"]
[ERROR] 	}
[ERROR] 	subgraph cluster9{
[ERROR] 		label="Set 9 RecordType(BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment, BIGINT p_partkey, VARCHAR(0) p_name, VARCHAR(0) p_mfgr, VARCHAR(0) p_brand, VARCHAR(0) p_type, INTEGER p_size, VARCHAR(0) p_container, DECIMAL(15, 2) p_retailprice, VARCHAR(0) p_comment)";
[ERROR] 		rel101 [label="rel#101:LogicalJoin\nleft=RelSubset#99,right=RelSubset#100,condition==($1, $16),joinType=inner\nrows=375.0, cost={inf}",shape=box]
[ERROR] 		rel119 [label="rel#119:JdbcJoin\nleft=RelSubset#115,right=RelSubset#100,condition==($1, $16),joinType=inner\nrows=375.0, cost={600.0 rows, 302.0 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		rel131 [label="rel#131:JdbcToEnumerableConverter\ninput=RelSubset#120\nrows=375.0, cost={637.5 rows, 339.5 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		subset102 [label="rel#102:RelSubset#9.NONE"]
[ERROR] 		subset120 [label="rel#120:RelSubset#9.JDBC.DUCK"]
[ERROR] 		subset132 [label="rel#132:RelSubset#9.ENUMERABLE"]
[ERROR] 	}
[ERROR] 	subgraph cluster10{
[ERROR] 		label="Set 10 RecordType(DECIMAL(19, 4) $f0, DECIMAL(19, 4) $f1)";
[ERROR] 		rel103 [label="rel#103:LogicalProject\ninput=RelSubset#102,exprs=[CASE(LIKE($20, 'PROMO%'), *($5, -(1, $6)), 0:DECIMAL(19, 4)), *($5, -(1, $6))]\nrows=375.0, cost={inf}",shape=box]
[ERROR] 		rel121 [label="rel#121:JdbcProject\ninput=RelSubset#120,exprs=[CASE(LIKE($20, 'PROMO%'), *($5, -(1, $6)), 0:DECIMAL(19, 4)), *($5, -(1, $6))]\nrows=375.0, cost={900.0 rows, 902.0 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		rel134 [label="rel#134:JdbcToEnumerableConverter\ninput=RelSubset#122\nrows=375.0, cost={937.5 rows, 939.5 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		subset104 [label="rel#104:RelSubset#10.NONE"]
[ERROR] 		subset122 [label="rel#122:RelSubset#10.JDBC.DUCK"]
[ERROR] 		subset135 [label="rel#135:RelSubset#10.ENUMERABLE"]
[ERROR] 	}
[ERROR] 	subgraph cluster11{
[ERROR] 		label="Set 11 RecordType(DECIMAL(19, 4) $f0, DECIMAL(19, 4) $f1)";
[ERROR] 		rel105 [label="rel#105:LogicalAggregate\ninput=RelSubset#104,group={},agg#0=SUM($0),agg#1=SUM($1)\nrows=1.0, cost={inf}",shape=box]
[ERROR] 		rel123 [label="rel#123:JdbcAggregate\ninput=RelSubset#122,group={},agg#0=SUM($0),agg#1=SUM($1)\nrows=1.0, cost={901.2750000953674 rows, 902.0 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		rel137 [label="rel#137:JdbcToEnumerableConverter\ninput=RelSubset#124\nrows=1.0, cost={901.3750000953675 rows, 902.1 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		subset106 [label="rel#106:RelSubset#11.NONE"]
[ERROR] 		subset124 [label="rel#124:RelSubset#11.JDBC.DUCK"]
[ERROR] 		subset138 [label="rel#138:RelSubset#11.ENUMERABLE"]
[ERROR] 	}
[ERROR] 	subgraph cluster12{
[ERROR] 		label="Set 12 RecordType(DECIMAL(19, 2) PROMO_REVENUE)";
[ERROR] 		rel107 [label="rel#107:LogicalProject\ninput=RelSubset#106,exprs=[/(*(100.00:DECIMAL(5, 2), $0), $1)]\nrows=1.0, cost={inf}",shape=box]
[ERROR] 		rel110 [label="rel#110:AbstractConverter\ninput=RelSubset#108,convention=ENUMERABLE\nrows=1.0, cost={inf}",shape=box]
[ERROR] 		rel125 [label="rel#125:JdbcProject\ninput=RelSubset#124,exprs=[/(*(100.00:DECIMAL(5, 2), $0), $1)]\nrows=1.0, cost={902.0750000953674 rows, 902.8 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		rel140 [label="rel#140:JdbcToEnumerableConverter\ninput=RelSubset#126\nrows=1.0, cost={902.1750000953674 rows, 902.9 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		subset108 [label="rel#108:RelSubset#12.NONE"]
[ERROR] 		subset109 [label="rel#109:RelSubset#12.ENUMERABLE"]
[ERROR] 		subset126 [label="rel#126:RelSubset#12.JDBC.DUCK"]
[ERROR] 	}
[ERROR] 	subgraph cluster13{
[ERROR] 		label="Set 13 RecordType(BIGINT s_suppkey, VARCHAR(0) s_name, VARCHAR(0) s_address, INTEGER s_nationkey, VARCHAR(0) s_phone, DECIMAL(15, 2) s_acctbal, VARCHAR(0) s_comment, BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment, BIGINT o_orderkey, BIGINT o_custkey, VARCHAR(0) o_orderstatus, DECIMAL(15, 2) o_totalprice, DATE o_orderdate, VARCHAR(0) o_orderpriority, VARCHAR(0) o_clerk, INTEGER o_shippriority, VARCHAR(0) o_comment)";
[ERROR] 		rel202 [label="rel#202:LogicalValues\ntype=RecordType(BIGINT s_suppkey, VARCHAR(0) s_name, VARCHAR(0) s_address, INTEGER s_nationkey, VARCHAR(0) s_phone, DECIMAL(15, 2) s_acctbal, VARCHAR(0) s_comment, BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment, BIGINT o_orderkey, BIGINT o_custkey, VARCHAR(0) o_orderstatus, DECIMAL(15, 2) o_totalprice, DATE o_orderdate, VARCHAR(0) o_orderpriority, VARCHAR(0) o_clerk, INTEGER o_shippriority, VARCHAR(0) o_comment),tuples=[]\nrows=1.0, cost={inf}",shape=box]
[ERROR] 		rel225 [label="rel#225:JdbcValues\ntype=RecordType(BIGINT s_suppkey, VARCHAR(0) s_name, VARCHAR(0) s_address, INTEGER s_nationkey, VARCHAR(0) s_phone, DECIMAL(15, 2) s_acctbal, VARCHAR(0) s_comment, BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment, BIGINT o_orderkey, BIGINT o_custkey, VARCHAR(0) o_orderstatus, DECIMAL(15, 2) o_totalprice, DATE o_orderdate, VARCHAR(0) o_orderpriority, VARCHAR(0) o_clerk, INTEGER o_shippriority, VARCHAR(0) o_comment),tuples=[]\nrows=1.0, cost={1.0 rows, 1.0 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		rel241 [label="rel#241:JdbcToEnumerableConverter\ninput=RelSubset#226\nrows=1.0, cost={1.1 rows, 1.1 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		subset209 [label="rel#209:RelSubset#13.NONE"]
[ERROR] 		subset226 [label="rel#226:RelSubset#13.JDBC.DUCK"]
[ERROR] 		subset242 [label="rel#242:RelSubset#13.ENUMERABLE"]
[ERROR] 	}
[ERROR] 	subgraph cluster14{
[ERROR] 		label="Set 14 RecordType(INTEGER n_nationkey, VARCHAR(0) n_name, INTEGER n_regionkey, VARCHAR(0) n_comment)";
[ERROR] 		rel158 [label="rel#158:JdbcTableScan\ntable=[DUCK, nation]\nrows=100.0, cost={100.0 rows, 101.0 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		rel228 [label="rel#228:JdbcToEnumerableConverter\ninput=RelSubset#210\nrows=100.0, cost={110.0 rows, 111.0 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		subset210 [label="rel#210:RelSubset#14.JDBC.DUCK"]
[ERROR] 		subset229 [label="rel#229:RelSubset#14.ENUMERABLE"]
[ERROR] 	}
[ERROR] 	subgraph cluster15{
[ERROR] 		label="Set 15 RecordType(INTEGER n_nationkey, VARCHAR(0) n_name, INTEGER n_regionkey, VARCHAR(0) n_comment)";
[ERROR] 		rel211 [label="rel#211:LogicalFilter\ninput=RelSubset#210,condition==(CAST($1):VARCHAR(5) NOT NULL, 'CHINA')\nrows=15.0, cost={inf}",shape=box]
[ERROR] 		rel230 [label="rel#230:JdbcFilter\ninput=RelSubset#210,condition==(CAST($1):VARCHAR(5) NOT NULL, 'CHINA')\nrows=15.0, cost={115.0 rows, 201.0 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		rel244 [label="rel#244:JdbcToEnumerableConverter\ninput=RelSubset#231\nrows=15.0, cost={116.5 rows, 202.5 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		subset212 [label="rel#212:RelSubset#15.NONE"]
[ERROR] 		subset231 [label="rel#231:RelSubset#15.JDBC.DUCK"]
[ERROR] 		subset245 [label="rel#245:RelSubset#15.ENUMERABLE"]
[ERROR] 	}
[ERROR] 	subgraph cluster16{
[ERROR] 		label="Set 16 RecordType(BIGINT s_suppkey, VARCHAR(0) s_name, VARCHAR(0) s_address, INTEGER s_nationkey, VARCHAR(0) s_phone, DECIMAL(15, 2) s_acctbal, VARCHAR(0) s_comment, BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment, BIGINT o_orderkey, BIGINT o_custkey, VARCHAR(0) o_orderstatus, DECIMAL(15, 2) o_totalprice, DATE o_orderdate, VARCHAR(0) o_orderpriority, VARCHAR(0) o_clerk, INTEGER o_shippriority, VARCHAR(0) o_comment, INTEGER n_nationkey, VARCHAR(0) n_name, INTEGER n_regionkey, VARCHAR(0) n_comment)";
[ERROR] 		rel213 [label="rel#213:LogicalJoin\nleft=RelSubset#209,right=RelSubset#212,condition==($3, $32),joinType=inner\nrows=2.25, cost={inf}",shape=box]
[ERROR] 		rel232 [label="rel#232:JdbcJoin\nleft=RelSubset#226,right=RelSubset#231,condition==($3, $32),joinType=inner\nrows=2.25, cost={118.25 rows, 202.0 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		rel247 [label="rel#247:JdbcToEnumerableConverter\ninput=RelSubset#233\nrows=2.25, cost={118.475 rows, 202.225 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		subset214 [label="rel#214:RelSubset#16.NONE"]
[ERROR] 		subset233 [label="rel#233:RelSubset#16.JDBC.DUCK"]
[ERROR] 		subset248 [label="rel#248:RelSubset#16.ENUMERABLE"]
[ERROR] 	}
[ERROR] 	subgraph cluster17{
[ERROR] 		label="Set 17 RecordType(VARCHAR(0) s_name)";
[ERROR] 		rel215 [label="rel#215:LogicalProject\ninput=RelSubset#214,exprs=[$1]\nrows=2.25, cost={inf}",shape=box]
[ERROR] 		rel234 [label="rel#234:JdbcProject\ninput=RelSubset#233,exprs=[$1]\nrows=2.25, cost={120.05 rows, 203.8 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		rel250 [label="rel#250:JdbcToEnumerableConverter\ninput=RelSubset#235\nrows=2.25, cost={120.27499999999999 rows, 204.025 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		subset216 [label="rel#216:RelSubset#17.NONE"]
[ERROR] 		subset235 [label="rel#235:RelSubset#17.JDBC.DUCK"]
[ERROR] 		subset251 [label="rel#251:RelSubset#17.ENUMERABLE"]
[ERROR] 	}
[ERROR] 	subgraph cluster18{
[ERROR] 		label="Set 18 RecordType(VARCHAR(0) s_name, BIGINT NUMWAIT)";
[ERROR] 		rel217 [label="rel#217:LogicalAggregate\ninput=RelSubset#216,group={0},NUMWAIT=COUNT()\nrows=1.0, cost={inf}",shape=box]
[ERROR] 		rel236 [label="rel#236:JdbcAggregate\ninput=RelSubset#235,group={0},NUMWAIT=COUNT()\nrows=1.0, cost={121.175 rows, 203.8 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		rel253 [label="rel#253:JdbcToEnumerableConverter\ninput=RelSubset#237\nrows=1.0, cost={121.27499999999999 rows, 203.9 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		subset218 [label="rel#218:RelSubset#18.NONE"]
[ERROR] 		subset237 [label="rel#237:RelSubset#18.JDBC.DUCK"]
[ERROR] 		subset254 [label="rel#254:RelSubset#18.ENUMERABLE"]
[ERROR] 	}
[ERROR] 	subgraph cluster20{
[ERROR] 		label="Set 20 RecordType(VARCHAR(0) S_NAME, BIGINT NUMWAIT)";
[ERROR] 		rel221 [label="rel#221:LogicalSort\ninput=RelSubset#218,sort0=$1,sort1=$0,dir0=DESC,dir1=ASC,fetch=100\nrows=1.0, cost={inf}",shape=box]
[ERROR] 		rel224 [label="rel#224:AbstractConverter\ninput=RelSubset#222,convention=ENUMERABLE\nrows=1.0, cost={inf}",shape=box]
[ERROR] 		rel238 [label="rel#238:JdbcSort\ninput=RelSubset#237,sort0=$1,sort1=$0,dir0=DESC,dir1=ASC,fetch=100\nrows=1.0, cost={122.075 rows, 221.8 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		rel256 [label="rel#256:JdbcToEnumerableConverter\ninput=RelSubset#239\nrows=1.0, cost={122.175 rows, 221.9 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		subset222 [label="rel#222:RelSubset#20.NONE"]
[ERROR] 		subset223 [label="rel#223:RelSubset#20.ENUMERABLE"]
[ERROR] 		subset239 [label="rel#239:RelSubset#20.JDBC.DUCK"]
[ERROR] 	}
[ERROR] 	subgraph cluster21{
[ERROR] 		label="Set 21 RecordType(BIGINT p_partkey, VARCHAR(0) p_name, VARCHAR(0) p_mfgr, VARCHAR(0) p_brand, VARCHAR(0) p_type, INTEGER p_size, VARCHAR(0) p_container, DECIMAL(15, 2) p_retailprice, VARCHAR(0) p_comment)";
[ERROR] 		rel343 [label="rel#343:LogicalFilter\ninput=RelSubset#100,condition=LIKE($1, '%forest%')\nrows=25.0, cost={inf}",shape=box]
[ERROR] 		rel365 [label="rel#365:JdbcFilter\ninput=RelSubset#100,condition=LIKE($1, '%forest%')\nrows=25.0, cost={125.0 rows, 201.0 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		rel390 [label="rel#390:JdbcToEnumerableConverter\ninput=RelSubset#366\nrows=25.0, cost={127.5 rows, 203.5 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		subset344 [label="rel#344:RelSubset#21.NONE"]
[ERROR] 		subset366 [label="rel#366:RelSubset#21.JDBC.DUCK"]
[ERROR] 		subset391 [label="rel#391:RelSubset#21.ENUMERABLE"]
[ERROR] 	}
[ERROR] 	subgraph cluster22{
[ERROR] 		label="Set 22 RecordType(BIGINT s_suppkey, VARCHAR(0) s_name, VARCHAR(0) s_address, INTEGER s_nationkey, VARCHAR(0) s_phone, DECIMAL(15, 2) s_acctbal, VARCHAR(0) s_comment)";
[ERROR] 		rel266 [label="rel#266:JdbcTableScan\ntable=[DUCK, supplier]\nrows=100.0, cost={100.0 rows, 101.0 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		rel368 [label="rel#368:JdbcToEnumerableConverter\ninput=RelSubset#345\nrows=100.0, cost={110.0 rows, 111.0 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		subset345 [label="rel#345:RelSubset#22.JDBC.DUCK"]
[ERROR] 		subset369 [label="rel#369:RelSubset#22.ENUMERABLE"]
[ERROR] 	}
[ERROR] 	subgraph cluster23{
[ERROR] 		label="Set 23 RecordType(BIGINT p_partkey, VARCHAR(0) p_name, VARCHAR(0) p_mfgr, VARCHAR(0) p_brand, VARCHAR(0) p_type, INTEGER p_size, VARCHAR(0) p_container, DECIMAL(15, 2) p_retailprice, VARCHAR(0) p_comment, BIGINT s_suppkey, VARCHAR(0) s_name, VARCHAR(0) s_address, INTEGER s_nationkey, VARCHAR(0) s_phone, DECIMAL(15, 2) s_acctbal, VARCHAR(0) s_comment)";
[ERROR] 		rel346 [label="rel#346:LogicalJoin\nleft=RelSubset#344,right=RelSubset#345,condition=true,joinType=inner\nrows=2500.0, cost={inf}",shape=box]
[ERROR] 		rel370 [label="rel#370:JdbcJoin\nleft=RelSubset#366,right=RelSubset#345,condition=true,joinType=inner\nrows=2500.0, cost={2725.0 rows, 302.0 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		rel393 [label="rel#393:JdbcToEnumerableConverter\ninput=RelSubset#371\nrows=2500.0, cost={2975.0 rows, 552.0 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		subset347 [label="rel#347:RelSubset#23.NONE"]
[ERROR] 		subset371 [label="rel#371:RelSubset#23.JDBC.DUCK"]
[ERROR] 		subset394 [label="rel#394:RelSubset#23.ENUMERABLE"]
[ERROR] 	}
[ERROR] 	subgraph cluster24{
[ERROR] 		label="Set 24 RecordType(BIGINT p_partkey, VARCHAR(0) p_name, VARCHAR(0) p_mfgr, VARCHAR(0) p_brand, VARCHAR(0) p_type, INTEGER p_size, VARCHAR(0) p_container, DECIMAL(15, 2) p_retailprice, VARCHAR(0) p_comment, BIGINT s_suppkey, VARCHAR(0) s_name, VARCHAR(0) s_address, INTEGER s_nationkey, VARCHAR(0) s_phone, DECIMAL(15, 2) s_acctbal, VARCHAR(0) s_comment, BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment)";
[ERROR] 		rel348 [label="rel#348:LogicalJoin\nleft=RelSubset#347,right=RelSubset#97,condition=AND(=($9, $18), =($0, $17)),joinType=inner\nrows=5625.0, cost={inf}",shape=box]
[ERROR] 		rel372 [label="rel#372:JdbcJoin\nleft=RelSubset#371,right=RelSubset#97,condition=AND(=($9, $18), =($0, $17)),joinType=inner\nrows=5625.0, cost={8450.0 rows, 403.0 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		rel396 [label="rel#396:JdbcToEnumerableConverter\ninput=RelSubset#373\nrows=5625.0, cost={9012.5 rows, 965.5 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		subset349 [label="rel#349:RelSubset#24.NONE"]
[ERROR] 		subset373 [label="rel#373:RelSubset#24.JDBC.DUCK"]
[ERROR] 		subset397 [label="rel#397:RelSubset#24.ENUMERABLE"]
[ERROR] 	}
[ERROR] 	subgraph cluster25{
[ERROR] 		label="Set 25 RecordType(BIGINT ps_partkey, BIGINT ps_suppkey, BIGINT ps_availqty, DECIMAL(15, 2) ps_supplycost, VARCHAR(0) ps_comment)";
[ERROR] 		rel274 [label="rel#274:JdbcTableScan\ntable=[DUCK, partsupp]\nrows=100.0, cost={100.0 rows, 101.0 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		rel375 [label="rel#375:JdbcToEnumerableConverter\ninput=RelSubset#350\nrows=100.0, cost={110.0 rows, 111.0 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		subset350 [label="rel#350:RelSubset#25.JDBC.DUCK"]
[ERROR] 		subset376 [label="rel#376:RelSubset#25.ENUMERABLE"]
[ERROR] 	}
[ERROR] 	subgraph cluster26{
[ERROR] 		label="Set 26 RecordType(BIGINT p_partkey, VARCHAR(0) p_name, VARCHAR(0) p_mfgr, VARCHAR(0) p_brand, VARCHAR(0) p_type, INTEGER p_size, VARCHAR(0) p_container, DECIMAL(15, 2) p_retailprice, VARCHAR(0) p_comment, BIGINT s_suppkey, VARCHAR(0) s_name, VARCHAR(0) s_address, INTEGER s_nationkey, VARCHAR(0) s_phone, DECIMAL(15, 2) s_acctbal, VARCHAR(0) s_comment, BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment, BIGINT ps_partkey, BIGINT ps_suppkey, BIGINT ps_availqty, DECIMAL(15, 2) ps_supplycost, VARCHAR(0) ps_comment)";
[ERROR] 		rel351 [label="rel#351:LogicalJoin\nleft=RelSubset#349,right=RelSubset#350,condition=AND(=($33, $18), =($32, $17)),joinType=inner\nrows=12656.25, cost={inf}",shape=box]
[ERROR] 		rel377 [label="rel#377:JdbcJoin\nleft=RelSubset#373,right=RelSubset#350,condition=AND(=($33, $18), =($32, $17)),joinType=inner\nrows=12656.25, cost={21206.25 rows, 504.0 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		rel399 [label="rel#399:JdbcToEnumerableConverter\ninput=RelSubset#378\nrows=12656.25, cost={22471.875 rows, 1769.625 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		subset352 [label="rel#352:RelSubset#26.NONE"]
[ERROR] 		subset378 [label="rel#378:RelSubset#26.JDBC.DUCK"]
[ERROR] 		subset400 [label="rel#400:RelSubset#26.ENUMERABLE"]
[ERROR] 	}
[ERROR] 	subgraph cluster27{
[ERROR] 		label="Set 27 RecordType(BIGINT p_partkey, VARCHAR(0) p_name, VARCHAR(0) p_mfgr, VARCHAR(0) p_brand, VARCHAR(0) p_type, INTEGER p_size, VARCHAR(0) p_container, DECIMAL(15, 2) p_retailprice, VARCHAR(0) p_comment, BIGINT s_suppkey, VARCHAR(0) s_name, VARCHAR(0) s_address, INTEGER s_nationkey, VARCHAR(0) s_phone, DECIMAL(15, 2) s_acctbal, VARCHAR(0) s_comment, BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment, BIGINT ps_partkey, BIGINT ps_suppkey, BIGINT ps_availqty, DECIMAL(15, 2) ps_supplycost, VARCHAR(0) ps_comment, BIGINT o_orderkey, BIGINT o_custkey, VARCHAR(0) o_orderstatus, DECIMAL(15, 2) o_totalprice, DATE o_orderdate, VARCHAR(0) o_orderpriority, VARCHAR(0) o_clerk, INTEGER o_shippriority, VARCHAR(0) o_comment)";
[ERROR] 		rel353 [label="rel#353:LogicalJoin\nleft=RelSubset#352,right=RelSubset#27,condition==($37, $16),joinType=inner\nrows=189843.75, cost={inf}",shape=box]
[ERROR] 		rel379 [label="rel#379:JdbcJoin\nleft=RelSubset#378,right=RelSubset#27,condition==($37, $16),joinType=inner\nrows=189843.75, cost={211150.0 rows, 605.0 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		rel402 [label="rel#402:JdbcToEnumerableConverter\ninput=RelSubset#380\nrows=189843.75, cost={230134.375 rows, 19589.375 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		subset354 [label="rel#354:RelSubset#27.NONE"]
[ERROR] 		subset380 [label="rel#380:RelSubset#27.JDBC.DUCK"]
[ERROR] 		subset403 [label="rel#403:RelSubset#27.ENUMERABLE"]
[ERROR] 	}
[ERROR] 	subgraph cluster28{
[ERROR] 		label="Set 28 RecordType(BIGINT p_partkey, VARCHAR(0) p_name, VARCHAR(0) p_mfgr, VARCHAR(0) p_brand, VARCHAR(0) p_type, INTEGER p_size, VARCHAR(0) p_container, DECIMAL(15, 2) p_retailprice, VARCHAR(0) p_comment, BIGINT s_suppkey, VARCHAR(0) s_name, VARCHAR(0) s_address, INTEGER s_nationkey, VARCHAR(0) s_phone, DECIMAL(15, 2) s_acctbal, VARCHAR(0) s_comment, BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment, BIGINT ps_partkey, BIGINT ps_suppkey, BIGINT ps_availqty, DECIMAL(15, 2) ps_supplycost, VARCHAR(0) ps_comment, BIGINT o_orderkey, BIGINT o_custkey, VARCHAR(0) o_orderstatus, DECIMAL(15, 2) o_totalprice, DATE o_orderdate, VARCHAR(0) o_orderpriority, VARCHAR(0) o_clerk, INTEGER o_shippriority, VARCHAR(0) o_comment, INTEGER n_nationkey, VARCHAR(0) n_name, INTEGER n_regionkey, VARCHAR(0) n_comment)";
[ERROR] 		rel355 [label="rel#355:LogicalJoin\nleft=RelSubset#354,right=RelSubset#210,condition==($12, $46),joinType=inner\nrows=2847656.25, cost={inf}",shape=box]
[ERROR] 		rel381 [label="rel#381:JdbcJoin\nleft=RelSubset#380,right=RelSubset#210,condition==($12, $46),joinType=inner\nrows=2847656.25, cost={3058906.25 rows, 706.0 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		rel405 [label="rel#405:JdbcToEnumerableConverter\ninput=RelSubset#382\nrows=2847656.25, cost={3343671.875 rows, 285471.625 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		subset356 [label="rel#356:RelSubset#28.NONE"]
[ERROR] 		subset382 [label="rel#382:RelSubset#28.JDBC.DUCK"]
[ERROR] 		subset406 [label="rel#406:RelSubset#28.ENUMERABLE"]
[ERROR] 	}
[ERROR] 	subgraph cluster29{
[ERROR] 		label="Set 29 RecordType(VARCHAR(0) NATION, BIGINT O_YEAR, DECIMAL(19, 4) AMOUNT)";
[ERROR] 		rel357 [label="rel#357:LogicalProject\ninput=RelSubset#356,exprs=[$47, EXTRACT(FLAG(YEAR), $41), -(*($21, -(1, $22)), *($35, $20))]\nrows=2847656.25, cost={inf}",shape=box]
[ERROR] 		rel383 [label="rel#383:JdbcProject\ninput=RelSubset#382,exprs=[$47, EXTRACT(FLAG(YEAR), $41), -(*($21, -(1, $22)), *($35, $20))]\nrows=2847656.25, cost={5337031.25 rows, 6835081.0 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		rel408 [label="rel#408:JdbcToEnumerableConverter\ninput=RelSubset#384\nrows=2847656.25, cost={5621796.875 rows, 7119846.625 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		subset358 [label="rel#358:RelSubset#29.NONE"]
[ERROR] 		subset384 [label="rel#384:RelSubset#29.JDBC.DUCK"]
[ERROR] 		subset409 [label="rel#409:RelSubset#29.ENUMERABLE"]
[ERROR] 	}
[ERROR] 	subgraph cluster30{
[ERROR] 		label="Set 30 RecordType(VARCHAR(0) NATION, BIGINT O_YEAR, DECIMAL(19, 4) SUM_PROFIT)";
[ERROR] 		rel359 [label="rel#359:LogicalAggregate\ninput=RelSubset#358,group={0, 1},SUM_PROFIT=SUM($2)\nrows=284765.625, cost={inf}",shape=box]
[ERROR] 		rel385 [label="rel#385:JdbcAggregate\ninput=RelSubset#384,group={0, 1},SUM_PROFIT=SUM($2)\nrows=284765.625, cost={5660952.162016183 rows, 6835081.0 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		rel411 [label="rel#411:JdbcToEnumerableConverter\ninput=RelSubset#386\nrows=284765.625, cost={5689428.724516183 rows, 6863557.5625 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		subset360 [label="rel#360:RelSubset#30.NONE"]
[ERROR] 		subset386 [label="rel#386:RelSubset#30.JDBC.DUCK"]
[ERROR] 		subset412 [label="rel#412:RelSubset#30.ENUMERABLE"]
[ERROR] 	}
[ERROR] 	subgraph cluster31{
[ERROR] 		label="Set 31 RecordType(VARCHAR(0) NATION, BIGINT O_YEAR, DECIMAL(19, 4) SUM_PROFIT)";
[ERROR] 		rel361 [label="rel#361:LogicalSort\ninput=RelSubset#360,sort0=$0,sort1=$1,dir0=ASC,dir1=DESC\nrows=284765.625, cost={inf}",shape=box]
[ERROR] 		rel364 [label="rel#364:AbstractConverter\ninput=RelSubset#362,convention=ENUMERABLE\nrows=284765.625, cost={inf}",shape=box]
[ERROR] 		rel387 [label="rel#387:JdbcSort\ninput=RelSubset#386,sort0=$0,sort1=$1,dir0=ASC,dir1=DESC\nrows=284765.625, cost={5917241.224516183 rows, 8.408729923576382E7 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		rel414 [label="rel#414:JdbcToEnumerableConverter\ninput=RelSubset#388\nrows=284765.625, cost={5945717.787016183 rows, 8.411577579826382E7 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		subset362 [label="rel#362:RelSubset#31.NONE"]
[ERROR] 		subset363 [label="rel#363:RelSubset#31.ENUMERABLE"]
[ERROR] 		subset388 [label="rel#388:RelSubset#31.JDBC.DUCK"]
[ERROR] 	}
[ERROR] 	subgraph cluster32{
[ERROR] 		label="Set 32 RecordType(BIGINT c_custkey, VARCHAR(0) c_name, VARCHAR(0) c_address, INTEGER c_nationkey, VARCHAR(0) c_phone, DECIMAL(15, 2) c_acctbal, VARCHAR(0) c_mktsegment, VARCHAR(0) c_comment)";
[ERROR] 		rel426 [label="rel#426:JdbcTableScan\ntable=[DUCK, customer]\nrows=100.0, cost={100.0 rows, 101.0 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		rel463 [label="rel#463:JdbcToEnumerableConverter\ninput=RelSubset#451\nrows=100.0, cost={110.0 rows, 111.0 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		subset451 [label="rel#451:RelSubset#32.JDBC.DUCK"]
[ERROR] 		subset464 [label="rel#464:RelSubset#32.ENUMERABLE"]
[ERROR] 	}
[ERROR] 	subgraph cluster33{
[ERROR] 		label="Set 33 RecordType(BIGINT c_custkey, VARCHAR(0) c_name, VARCHAR(0) c_address, INTEGER c_nationkey, VARCHAR(0) c_phone, DECIMAL(15, 2) c_acctbal, VARCHAR(0) c_mktsegment, VARCHAR(0) c_comment)";
[ERROR] 		rel452 [label="rel#452:LogicalFilter\ninput=RelSubset#451,condition=<($0, 1000)\nrows=50.0, cost={inf}",shape=box]
[ERROR] 		rel465 [label="rel#465:JdbcFilter\ninput=RelSubset#451,condition=<($0, 1000)\nrows=50.0, cost={150.0 rows, 201.0 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		rel474 [label="rel#474:JdbcToEnumerableConverter\ninput=RelSubset#466\nrows=50.0, cost={155.0 rows, 206.0 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		subset453 [label="rel#453:RelSubset#33.NONE"]
[ERROR] 		subset466 [label="rel#466:RelSubset#33.JDBC.DUCK"]
[ERROR] 		subset475 [label="rel#475:RelSubset#33.ENUMERABLE"]
[ERROR] 	}
[ERROR] 	subgraph cluster34{
[ERROR] 		label="Set 34 RecordType(BIGINT c_custkey, VARCHAR(0) c_name, VARCHAR(0) c_address, INTEGER c_nationkey, VARCHAR(0) c_phone, DECIMAL(15, 2) c_acctbal, VARCHAR(0) c_mktsegment, VARCHAR(0) c_comment, BIGINT o_orderkey, BIGINT o_custkey, VARCHAR(0) o_orderstatus, DECIMAL(15, 2) o_totalprice, DATE o_orderdate, VARCHAR(0) o_orderpriority, VARCHAR(0) o_clerk, INTEGER o_shippriority, VARCHAR(0) o_comment)";
[ERROR] 		rel454 [label="rel#454:LogicalJoin\nleft=RelSubset#453,right=RelSubset#27,condition==($9, $0),joinType=inner\nrows=750.0, cost={inf}",shape=box]
[ERROR] 		rel467 [label="rel#467:JdbcJoin\nleft=RelSubset#466,right=RelSubset#27,condition==($9, $0),joinType=inner\nrows=750.0, cost={1000.0 rows, 302.0 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		rel477 [label="rel#477:JdbcToEnumerableConverter\ninput=RelSubset#468\nrows=750.0, cost={1075.0 rows, 377.0 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		subset455 [label="rel#455:RelSubset#34.NONE"]
[ERROR] 		subset468 [label="rel#468:RelSubset#34.JDBC.DUCK"]
[ERROR] 		subset478 [label="rel#478:RelSubset#34.ENUMERABLE"]
[ERROR] 	}
[ERROR] 	subgraph cluster35{
[ERROR] 		label="Set 35 RecordType(BIGINT C_CUSTKEY, BIGINT O_ORDERKEY, VARCHAR(0) C_NAME, DECIMAL(15, 2) O_TOTALPRICE)";
[ERROR] 		rel456 [label="rel#456:LogicalProject\ninput=RelSubset#455,inputs=0,exprs=[$8, $1, $11]\nrows=750.0, cost={inf}",shape=box]
[ERROR] 		rel469 [label="rel#469:JdbcProject\ninput=RelSubset#468,inputs=0,exprs=[$8, $1, $11]\nrows=750.0, cost={1600.0 rows, 2702.0 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		rel480 [label="rel#480:JdbcToEnumerableConverter\ninput=RelSubset#470\nrows=750.0, cost={1675.0 rows, 2777.0 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		subset457 [label="rel#457:RelSubset#35.NONE"]
[ERROR] 		subset470 [label="rel#470:RelSubset#35.JDBC.DUCK"]
[ERROR] 		subset481 [label="rel#481:RelSubset#35.ENUMERABLE"]
[ERROR] 	}
[ERROR] 	subgraph cluster36{
[ERROR] 		label="Set 36 RecordType(BIGINT C_CUSTKEY, BIGINT O_ORDERKEY, VARCHAR(0) C_NAME, DECIMAL(15, 2) O_TOTALPRICE)";
[ERROR] 		rel458 [label="rel#458:LogicalSort\ninput=RelSubset#457,sort0=$0,dir0=ASC\nrows=750.0, cost={inf}",shape=box]
[ERROR] 		rel461 [label="rel#461:AbstractConverter\ninput=RelSubset#459,convention=ENUMERABLE\nrows=750.0, cost={inf}",shape=box]
[ERROR] 		rel471 [label="rel#471:JdbcSort\ninput=RelSubset#470,sort0=$0,dir0=ASC\nrows=750.0, cost={2275.0 rows, 127821.38360342373 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		rel483 [label="rel#483:JdbcToEnumerableConverter\ninput=RelSubset#472\nrows=750.0, cost={2350.0 rows, 127896.38360342373 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		subset459 [label="rel#459:RelSubset#36.NONE"]
[ERROR] 		subset460 [label="rel#460:RelSubset#36.ENUMERABLE"]
[ERROR] 		subset472 [label="rel#472:RelSubset#36.JDBC.DUCK"]
[ERROR] 	}
[ERROR] 	subgraph cluster37{
[ERROR] 		label="Set 37 RecordType(BIGINT o_orderkey, BIGINT o_custkey, VARCHAR(0) o_orderstatus, DECIMAL(15, 2) o_totalprice, DATE o_orderdate, VARCHAR(0) o_orderpriority, VARCHAR(0) o_clerk, INTEGER o_shippriority, VARCHAR(0) o_comment)";
[ERROR] 		rel549 [label="rel#549:LogicalFilter\ninput=RelSubset#27,condition=AND(>=($4, 1993-02-01), <($4, +(1993-02-01, 3:INTERVAL MONTH)))\nrows=25.0, cost={inf}",shape=box]
[ERROR] 		rel569 [label="rel#569:JdbcFilter\ninput=RelSubset#27,condition=AND(>=($4, 1993-02-01), <($4, +(1993-02-01, 3:INTERVAL MONTH)))\nrows=25.0, cost={125.0 rows, 201.0 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		rel588 [label="rel#588:JdbcToEnumerableConverter\ninput=RelSubset#570\nrows=25.0, cost={127.5 rows, 203.5 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		subset550 [label="rel#550:RelSubset#37.NONE"]
[ERROR] 		subset570 [label="rel#570:RelSubset#37.JDBC.DUCK"]
[ERROR] 		subset589 [label="rel#589:RelSubset#37.ENUMERABLE"]
[ERROR] 	}
[ERROR] 	subgraph cluster38{
[ERROR] 		label="Set 38 RecordType(BIGINT c_custkey, VARCHAR(0) c_name, VARCHAR(0) c_address, INTEGER c_nationkey, VARCHAR(0) c_phone, DECIMAL(15, 2) c_acctbal, VARCHAR(0) c_mktsegment, VARCHAR(0) c_comment, BIGINT o_orderkey, BIGINT o_custkey, VARCHAR(0) o_orderstatus, DECIMAL(15, 2) o_totalprice, DATE o_orderdate, VARCHAR(0) o_orderpriority, VARCHAR(0) o_clerk, INTEGER o_shippriority, VARCHAR(0) o_comment)";
[ERROR] 		rel551 [label="rel#551:LogicalJoin\nleft=RelSubset#451,right=RelSubset#550,condition==($0, $9),joinType=inner\nrows=375.0, cost={inf}",shape=box]
[ERROR] 		rel571 [label="rel#571:JdbcJoin\nleft=RelSubset#451,right=RelSubset#570,condition==($0, $9),joinType=inner\nrows=375.0, cost={600.0 rows, 302.0 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		rel591 [label="rel#591:JdbcToEnumerableConverter\ninput=RelSubset#572\nrows=375.0, cost={637.5 rows, 339.5 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		subset552 [label="rel#552:RelSubset#38.NONE"]
[ERROR] 		subset572 [label="rel#572:RelSubset#38.JDBC.DUCK"]
[ERROR] 		subset592 [label="rel#592:RelSubset#38.ENUMERABLE"]
[ERROR] 	}
[ERROR] 	subgraph cluster39{
[ERROR] 		label="Set 39 RecordType(BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment)";
[ERROR] 		rel553 [label="rel#553:LogicalFilter\ninput=RelSubset#97,condition==(CAST($8):VARCHAR(1) NOT NULL, 'R')\nrows=15.0, cost={inf}",shape=box]
[ERROR] 		rel573 [label="rel#573:JdbcFilter\ninput=RelSubset#97,condition==(CAST($8):VARCHAR(1) NOT NULL, 'R')\nrows=15.0, cost={115.0 rows, 201.0 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		rel594 [label="rel#594:JdbcToEnumerableConverter\ninput=RelSubset#574\nrows=15.0, cost={116.5 rows, 202.5 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		subset554 [label="rel#554:RelSubset#39.NONE"]
[ERROR] 		subset574 [label="rel#574:RelSubset#39.JDBC.DUCK"]
[ERROR] 		subset595 [label="rel#595:RelSubset#39.ENUMERABLE"]
[ERROR] 	}
[ERROR] 	subgraph cluster40{
[ERROR] 		label="Set 40 RecordType(BIGINT c_custkey, VARCHAR(0) c_name, VARCHAR(0) c_address, INTEGER c_nationkey, VARCHAR(0) c_phone, DECIMAL(15, 2) c_acctbal, VARCHAR(0) c_mktsegment, VARCHAR(0) c_comment, BIGINT o_orderkey, BIGINT o_custkey, VARCHAR(0) o_orderstatus, DECIMAL(15, 2) o_totalprice, DATE o_orderdate, VARCHAR(0) o_orderpriority, VARCHAR(0) o_clerk, INTEGER o_shippriority, VARCHAR(0) o_comment, BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment)";
[ERROR] 		rel555 [label="rel#555:LogicalJoin\nleft=RelSubset#552,right=RelSubset#554,condition==($17, $8),joinType=inner\nrows=843.75, cost={inf}",shape=box]
[ERROR] 		rel575 [label="rel#575:JdbcJoin\nleft=RelSubset#572,right=RelSubset#574,condition==($17, $8),joinType=inner\nrows=843.75, cost={1558.75 rows, 503.0 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		rel597 [label="rel#597:JdbcToEnumerableConverter\ninput=RelSubset#576\nrows=843.75, cost={1643.125 rows, 587.375 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		subset556 [label="rel#556:RelSubset#40.NONE"]
[ERROR] 		subset576 [label="rel#576:RelSubset#40.JDBC.DUCK"]
[ERROR] 		subset598 [label="rel#598:RelSubset#40.ENUMERABLE"]
[ERROR] 	}
[ERROR] 	subgraph cluster41{
[ERROR] 		label="Set 41 RecordType(BIGINT c_custkey, VARCHAR(0) c_name, VARCHAR(0) c_address, INTEGER c_nationkey, VARCHAR(0) c_phone, DECIMAL(15, 2) c_acctbal, VARCHAR(0) c_mktsegment, VARCHAR(0) c_comment, BIGINT o_orderkey, BIGINT o_custkey, VARCHAR(0) o_orderstatus, DECIMAL(15, 2) o_totalprice, DATE o_orderdate, VARCHAR(0) o_orderpriority, VARCHAR(0) o_clerk, INTEGER o_shippriority, VARCHAR(0) o_comment, BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment, INTEGER n_nationkey, VARCHAR(0) n_name, INTEGER n_regionkey, VARCHAR(0) n_comment)";
[ERROR] 		rel557 [label="rel#557:LogicalJoin\nleft=RelSubset#556,right=RelSubset#210,condition==($3, $33),joinType=inner\nrows=12656.25, cost={inf}",shape=box]
[ERROR] 		rel577 [label="rel#577:JdbcJoin\nleft=RelSubset#576,right=RelSubset#210,condition==($3, $33),joinType=inner\nrows=12656.25, cost={14315.0 rows, 604.0 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		rel600 [label="rel#600:JdbcToEnumerableConverter\ninput=RelSubset#578\nrows=12656.25, cost={15580.625 rows, 1869.625 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		subset558 [label="rel#558:RelSubset#41.NONE"]
[ERROR] 		subset578 [label="rel#578:RelSubset#41.JDBC.DUCK"]
[ERROR] 		subset601 [label="rel#601:RelSubset#41.ENUMERABLE"]
[ERROR] 	}
[ERROR] 	subgraph cluster42{
[ERROR] 		label="Set 42 RecordType(BIGINT c_custkey, VARCHAR(0) c_name, DECIMAL(15, 2) c_acctbal, VARCHAR(0) c_phone, VARCHAR(0) n_name, VARCHAR(0) c_address, VARCHAR(0) c_comment, DECIMAL(19, 4) $f7)";
[ERROR] 		rel559 [label="rel#559:LogicalProject\ninput=RelSubset#558,inputs=0..1,exprs=[$5, $4, $34, $2, $7, *($22, -(1, $23))]\nrows=12656.25, cost={inf}",shape=box]
[ERROR] 		rel579 [label="rel#579:JdbcProject\ninput=RelSubset#578,inputs=0..1,exprs=[$5, $4, $34, $2, $7, *($22, -(1, $23))]\nrows=12656.25, cost={24440.0 rows, 81604.0 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		rel603 [label="rel#603:JdbcToEnumerableConverter\ninput=RelSubset#580\nrows=12656.25, cost={25705.625 rows, 82869.625 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		subset560 [label="rel#560:RelSubset#42.NONE"]
[ERROR] 		subset580 [label="rel#580:RelSubset#42.JDBC.DUCK"]
[ERROR] 		subset604 [label="rel#604:RelSubset#42.ENUMERABLE"]
[ERROR] 	}
[ERROR] 	subgraph cluster43{
[ERROR] 		label="Set 43 RecordType(BIGINT c_custkey, VARCHAR(0) c_name, DECIMAL(15, 2) c_acctbal, VARCHAR(0) c_phone, VARCHAR(0) n_name, VARCHAR(0) c_address, VARCHAR(0) c_comment, DECIMAL(19, 4) REVENUE)";
[ERROR] 		rel561 [label="rel#561:LogicalAggregate\ninput=RelSubset#560,group={0, 1, 2, 3, 4, 5, 6},REVENUE=SUM($7)\nrows=1265.625, cost={inf}",shape=box]
[ERROR] 		rel581 [label="rel#581:JdbcAggregate\ninput=RelSubset#580,group={0, 1, 2, 3, 4, 5, 6},REVENUE=SUM($7)\nrows=1265.625, cost={25879.648497849703 rows, 81604.0 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		rel606 [label="rel#606:JdbcToEnumerableConverter\ninput=RelSubset#582\nrows=1265.625, cost={26006.210997849703 rows, 81730.5625 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		subset562 [label="rel#562:RelSubset#43.NONE"]
[ERROR] 		subset582 [label="rel#582:RelSubset#43.JDBC.DUCK"]
[ERROR] 		subset607 [label="rel#607:RelSubset#43.ENUMERABLE"]
[ERROR] 	}
[ERROR] 	subgraph cluster44{
[ERROR] 		label="Set 44 RecordType(BIGINT C_CUSTKEY, VARCHAR(0) C_NAME, DECIMAL(19, 4) REVENUE, DECIMAL(15, 2) C_ACCTBAL, VARCHAR(0) N_NAME, VARCHAR(0) C_ADDRESS, VARCHAR(0) C_PHONE, VARCHAR(0) C_COMMENT)";
[ERROR] 		rel563 [label="rel#563:LogicalProject\ninput=RelSubset#562,inputs=0..1,exprs=[$7, $2, $4, $5, $3, $6]\nrows=1265.625, cost={inf}",shape=box]
[ERROR] 		rel583 [label="rel#583:JdbcProject\ninput=RelSubset#582,inputs=0..1,exprs=[$7, $2, $4, $5, $3, $6]\nrows=1265.625, cost={26892.148497849703 rows, 89704.0 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		rel609 [label="rel#609:JdbcToEnumerableConverter\ninput=RelSubset#584\nrows=1265.625, cost={27018.710997849703 rows, 89830.5625 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		subset564 [label="rel#564:RelSubset#44.NONE"]
[ERROR] 		subset584 [label="rel#584:RelSubset#44.JDBC.DUCK"]
[ERROR] 		subset610 [label="rel#610:RelSubset#44.ENUMERABLE"]
[ERROR] 	}
[ERROR] 	subgraph cluster45{
[ERROR] 		label="Set 45 RecordType(BIGINT C_CUSTKEY, VARCHAR(0) C_NAME, DECIMAL(19, 4) REVENUE, DECIMAL(15, 2) C_ACCTBAL, VARCHAR(0) N_NAME, VARCHAR(0) C_ADDRESS, VARCHAR(0) C_PHONE, VARCHAR(0) C_COMMENT)";
[ERROR] 		rel565 [label="rel#565:LogicalSort\ninput=RelSubset#564,sort0=$2,dir0=DESC,fetch=20\nrows=20.0, cost={inf}",shape=box]
[ERROR] 		rel568 [label="rel#568:AbstractConverter\ninput=RelSubset#566,convention=ENUMERABLE\nrows=20.0, cost={inf}",shape=box]
[ERROR] 		rel585 [label="rel#585:JdbcSort\ninput=RelSubset#584,sort0=$2,dir0=DESC,fetch=20\nrows=20.0, cost={26910.148497849703 rows, 239846.3568851841 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		rel612 [label="rel#612:JdbcToEnumerableConverter\ninput=RelSubset#586\nrows=20.0, cost={26912.148497849703 rows, 239848.3568851841 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		subset566 [label="rel#566:RelSubset#45.NONE"]
[ERROR] 		subset567 [label="rel#567:RelSubset#45.ENUMERABLE"]
[ERROR] 		subset586 [label="rel#586:RelSubset#45.JDBC.DUCK"]
[ERROR] 	}
[ERROR] 	subgraph cluster46{
[ERROR] 		label="Set 46 RecordType(BIGINT supplier_no, DECIMAL(19, 4) total_revenue)";
[ERROR] 		rel626 [label="rel#626:JdbcTableScan\ntable=[DUCK, revenue0r15721]\nrows=100.0, cost={100.0 rows, 101.0 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		rel665 [label="rel#665:JdbcToEnumerableConverter\ninput=RelSubset#653\nrows=100.0, cost={110.0 rows, 111.0 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		subset653 [label="rel#653:RelSubset#46.JDBC.DUCK"]
[ERROR] 		subset666 [label="rel#666:RelSubset#46.ENUMERABLE"]
[ERROR] 	}
[ERROR] 	subgraph cluster47{
[ERROR] 		label="Set 47 RecordType(BIGINT supplier_no, DECIMAL(19, 4) total_revenue)";
[ERROR] 		rel654 [label="rel#654:LogicalFilter\ninput=RelSubset#653,condition==($1, $SCALAR_QUERY({\nLogicalAggregate(group=[{}], EXPR$0=[MAX($0)])\n  LogicalProject(total_revenue=[$1])\n    JdbcTableScan(table=[[DUCK, revenue0r15721]])\n}))\nrows=15.0, cost={inf}",shape=box]
[ERROR] 		rel667 [label="rel#667:JdbcFilter\ninput=RelSubset#653,condition==($1, $SCALAR_QUERY({\nLogicalAggregate(group=[{}], EXPR$0=[MAX($0)])\n  LogicalProject(total_revenue=[$1])\n    JdbcTableScan(table=[[DUCK, revenue0r15721]])\n}))\nrows=15.0, cost={115.0 rows, 201.0 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		rel676 [label="rel#676:JdbcToEnumerableConverter\ninput=RelSubset#668\nrows=15.0, cost={116.5 rows, 202.5 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		subset655 [label="rel#655:RelSubset#47.NONE"]
[ERROR] 		subset668 [label="rel#668:RelSubset#47.JDBC.DUCK"]
[ERROR] 		subset677 [label="rel#677:RelSubset#47.ENUMERABLE"]
[ERROR] 	}
[ERROR] 	subgraph cluster48{
[ERROR] 		label="Set 48 RecordType(BIGINT s_suppkey, VARCHAR(0) s_name, VARCHAR(0) s_address, INTEGER s_nationkey, VARCHAR(0) s_phone, DECIMAL(15, 2) s_acctbal, VARCHAR(0) s_comment, BIGINT supplier_no, DECIMAL(19, 4) total_revenue)";
[ERROR] 		rel656 [label="rel#656:LogicalJoin\nleft=RelSubset#345,right=RelSubset#655,condition==($0, $7),joinType=inner\nrows=225.0, cost={inf}",shape=box]
[ERROR] 		rel669 [label="rel#669:JdbcJoin\nleft=RelSubset#345,right=RelSubset#668,condition==($0, $7),joinType=inner\nrows=225.0, cost={440.0 rows, 302.0 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		rel679 [label="rel#679:JdbcToEnumerableConverter\ninput=RelSubset#670\nrows=225.0, cost={462.5 rows, 324.5 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		subset657 [label="rel#657:RelSubset#48.NONE"]
[ERROR] 		subset670 [label="rel#670:RelSubset#48.JDBC.DUCK"]
[ERROR] 		subset680 [label="rel#680:RelSubset#48.ENUMERABLE"]
[ERROR] 	}
[ERROR] 	subgraph cluster49{
[ERROR] 		label="Set 49 RecordType(BIGINT S_SUPPKEY, VARCHAR(0) S_NAME, VARCHAR(0) S_ADDRESS, VARCHAR(0) S_PHONE, DECIMAL(19, 4) TOTAL_REVENUE)";
[ERROR] 		rel658 [label="rel#658:LogicalProject\ninput=RelSubset#657,inputs=0..2,exprs=[$4, $8]\nrows=225.0, cost={inf}",shape=box]
[ERROR] 		rel671 [label="rel#671:JdbcProject\ninput=RelSubset#670,inputs=0..2,exprs=[$4, $8]\nrows=225.0, cost={620.0 rows, 1202.0 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		rel682 [label="rel#682:JdbcToEnumerableConverter\ninput=RelSubset#672\nrows=225.0, cost={642.5 rows, 1224.5 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		subset659 [label="rel#659:RelSubset#49.NONE"]
[ERROR] 		subset672 [label="rel#672:RelSubset#49.JDBC.DUCK"]
[ERROR] 		subset683 [label="rel#683:RelSubset#49.ENUMERABLE"]
[ERROR] 	}
[ERROR] 	subgraph cluster50{
[ERROR] 		label="Set 50 RecordType(BIGINT S_SUPPKEY, VARCHAR(0) S_NAME, VARCHAR(0) S_ADDRESS, VARCHAR(0) S_PHONE, DECIMAL(19, 4) TOTAL_REVENUE)";
[ERROR] 		rel660 [label="rel#660:LogicalSort\ninput=RelSubset#659,sort0=$0,dir0=ASC\nrows=225.0, cost={inf}",shape=box]
[ERROR] 		rel663 [label="rel#663:AbstractConverter\ninput=RelSubset#661,convention=ENUMERABLE\nrows=225.0, cost={inf}",shape=box]
[ERROR] 		rel673 [label="rel#673:JdbcSort\ninput=RelSubset#672,sort0=$0,dir0=ASC\nrows=225.0, cost={822.5 rows, 36298.33060628464 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		rel685 [label="rel#685:JdbcToEnumerableConverter\ninput=RelSubset#674\nrows=225.0, cost={845.0 rows, 36320.83060628464 cpu, 0.0 io}",color=blue,shape=box]
[ERROR] 		subset661 [label="rel#661:RelSubset#50.NONE"]
[ERROR] 		subset662 [label="rel#662:RelSubset#50.ENUMERABLE"]
[ERROR] 		subset674 [label="rel#674:RelSubset#50.JDBC.DUCK"]
[ERROR] 	}
[ERROR] 	subgraph cluster51{
[ERROR] 		label="Set 51 RecordType(BIGINT l_orderkey, BIGINT l_partkey, BIGINT l_suppkey, BIGINT l_linenumber, DECIMAL(15, 2) l_quantity, DECIMAL(15, 2) l_extendedprice, DECIMAL(15, 2) l_discount, DECIMAL(15, 2) l_tax, VARCHAR(0) l_returnflag, VARCHAR(0) l_linestatus, DATE l_shipdate, DATE l_commitdate, DATE l_receiptdate, VARCHAR(0) l_shipinstruct, VARCHAR(0) l_shipmode, VARCHAR(0) l_comment, BIGINT p_partkey, VARCHAR(0) p_name, VARCHAR(0) p_mfgr, VARCHAR(0) p_brand, VARCHAR(0) p_type, INTEGER p_size, VARCHAR(0) p_container, DECIMAL(15, 2) p_retailprice, VARCHAR(0) p_comment)";
[ERROR] 		rel714 [label="rel#714:LogicalJoin\nleft=RelSubset#97,right=RelSubset#100,condition=OR(AND(=($16, $1), =(CAST($19):VARCHAR(8) NOT NULL, 'Brand#52'), OR(=($22, 'SM CASE'), =($22, 'SM BOX'), =($22, 'SM PACK'), =($22, 'SM PKG')), >=($4, 9), <=($4, +(9, 10)), >=($21, 1), <=($21, 5), OR(=($14, 'AIR'), =($14, 'AIR REG')), =(CAST($13):VARCHAR(17) NOT NULL, 'DELIVER IN PERSON')), AND(=($16, $1), =(CAST($19):VARCHAR(8) NOT NULL, 'Brand#42'), OR(=($22, 'MED BAG'), =($22, 'MED BOX'), =($22, 'MED PKG'), =($22, 'MED PACK')), >=($4, 18), <=($4, +(18, 10)), >=($21, 1), <=($21, 10), OR(=($14, 'AIR'), =($14, 'AIR REG')), =(CAST($13):VARCHAR(17) NOT NULL, 'DELIVER IN PERSON')), AND(=($16, $1), =(CAST($19):VARCHAR(8) NOT NULL, 'Brand#23'), OR(=($22, 'LG CASE'), =($22, 'LG BOX'), =($22, 'LG PACK'), =($22, 'LG PKG')), >=($4, 22), <=($4, +(22, 10)), >=($21, 1), <=($21, 15), OR(=($14, 'AIR'), =($14, 'AIR REG')), =(CAST($13):VARCHAR(17) NOT NULL, 'DELIVER IN PERSON'))),joinType=inner\nrows=2500.0, cost={inf}",shape=box]
[ERROR] 		subset715 [label="rel#715:RelSubset#51.NONE"]
[ERROR] 		subset722 [label="rel#722:RelSubset#51.JDBC.DUCK",color=red]
[ERROR] 	}
[ERROR] 	subgraph cluster52{
[ERROR] 		label="Set 52 RecordType(DECIMAL(19, 4) $f0)";
[ERROR] 		rel716 [label="rel#716:LogicalProject\ninput=RelSubset#715,exprs=[*($5, -(1, $6))]\nrows=2500.0, cost={inf}",shape=box]
[ERROR] 		rel723 [label="rel#723:JdbcProject\ninput=RelSubset#722,exprs=[*($5, -(1, $6))]\nrows=2500.0, cost={inf}",shape=box]
[ERROR] 		rel728 [label="rel#728:JdbcToEnumerableConverter\ninput=RelSubset#724\nrows=2500.0, cost={inf}",shape=box]
[ERROR] 		subset717 [label="rel#717:RelSubset#52.NONE"]
[ERROR] 		subset724 [label="rel#724:RelSubset#52.JDBC.DUCK"]
[ERROR] 		subset729 [label="rel#729:RelSubset#52.ENUMERABLE"]
[ERROR] 	}
[ERROR] 	subgraph cluster53{
[ERROR] 		label="Set 53 RecordType(DECIMAL(19, 4) REVENUE)";
[ERROR] 		rel718 [label="rel#718:LogicalAggregate\ninput=RelSubset#717,group={},REVENUE=SUM($0)\nrows=1.0, cost={inf}",shape=box]
[ERROR] 		rel721 [label="rel#721:AbstractConverter\ninput=RelSubset#719,convention=ENUMERABLE\nrows=1.0, cost={inf}",shape=box]
[ERROR] 		rel725 [label="rel#725:JdbcAggregate\ninput=RelSubset#724,group={},REVENUE=SUM($0)\nrows=1.0, cost={inf}",shape=box]
[ERROR] 		rel731 [label="rel#731:JdbcToEnumerableConverter\ninput=RelSubset#726\nrows=1.0, cost={inf}",shape=box]
[ERROR] 		subset719 [label="rel#719:RelSubset#53.NONE"]
[ERROR] 		subset720 [label="rel#720:RelSubset#53.ENUMERABLE"]
[ERROR] 		subset726 [label="rel#726:RelSubset#53.JDBC.DUCK"]
[ERROR] 	}
[ERROR] 	root -> subset720;
[ERROR] 	subset27 -> rel1[color=blue];
[ERROR] 	subset42 -> rel41[color=blue]; rel41 -> subset27[color=blue];
[ERROR] 	subset29 -> rel28; rel28 -> subset27;
[ERROR] 	subset44 -> rel43[color=blue]; rel43 -> subset27[color=blue];
[ERROR] 	subset53 -> rel52[color=blue]; rel52 -> subset44[color=blue];
[ERROR] 	subset31 -> rel30; rel30 -> subset29;
[ERROR] 	subset46 -> rel45[color=blue]; rel45 -> subset44[color=blue];
[ERROR] 	subset56 -> rel55[color=blue]; rel55 -> subset46[color=blue];
[ERROR] 	subset33 -> rel32; rel32 -> subset31;
[ERROR] 	subset48 -> rel47[color=blue]; rel47 -> subset46[color=blue];
[ERROR] 	subset59 -> rel58[color=blue]; rel58 -> subset48[color=blue];
[ERROR] 	subset37 -> rel36; rel36 -> subset33;
[ERROR] 	subset38 -> rel39; rel39 -> subset37;
[ERROR] 	subset50 -> rel49[color=blue]; rel49 -> subset48[color=blue];
[ERROR] 	subset38 -> rel61[color=blue]; rel61 -> subset50[color=blue];
[ERROR] 	subset97 -> rel68[color=blue];
[ERROR] 	subset113 -> rel112[color=blue]; rel112 -> subset97[color=blue];
[ERROR] 	subset99 -> rel98; rel98 -> subset97;
[ERROR] 	subset115 -> rel114[color=blue]; rel114 -> subset97[color=blue];
[ERROR] 	subset129 -> rel128[color=blue]; rel128 -> subset115[color=blue];
[ERROR] 	subset100 -> rel70[color=blue];
[ERROR] 	subset118 -> rel117[color=blue]; rel117 -> subset100[color=blue];
[ERROR] 	subset102 -> rel101; rel101 -> subset99[label="0"]; rel101 -> subset100[label="1"];
[ERROR] 	subset120 -> rel119[color=blue]; rel119 -> subset115[color=blue,label="0"]; rel119 -> subset100[color=blue,label="1"];
[ERROR] 	subset132 -> rel131[color=blue]; rel131 -> subset120[color=blue];
[ERROR] 	subset104 -> rel103; rel103 -> subset102;
[ERROR] 	subset122 -> rel121[color=blue]; rel121 -> subset120[color=blue];
[ERROR] 	subset135 -> rel134[color=blue]; rel134 -> subset122[color=blue];
[ERROR] 	subset106 -> rel105; rel105 -> subset104;
[ERROR] 	subset124 -> rel123[color=blue]; rel123 -> subset122[color=blue];
[ERROR] 	subset138 -> rel137[color=blue]; rel137 -> subset124[color=blue];
[ERROR] 	subset108 -> rel107; rel107 -> subset106;
[ERROR] 	subset109 -> rel110; rel110 -> subset108;
[ERROR] 	subset126 -> rel125[color=blue]; rel125 -> subset124[color=blue];
[ERROR] 	subset109 -> rel140[color=blue]; rel140 -> subset126[color=blue];
[ERROR] 	subset209 -> rel202;
[ERROR] 	subset226 -> rel225[color=blue];
[ERROR] 	subset242 -> rel241[color=blue]; rel241 -> subset226[color=blue];
[ERROR] 	subset210 -> rel158[color=blue];
[ERROR] 	subset229 -> rel228[color=blue]; rel228 -> subset210[color=blue];
[ERROR] 	subset212 -> rel211; rel211 -> subset210;
[ERROR] 	subset231 -> rel230[color=blue]; rel230 -> subset210[color=blue];
[ERROR] 	subset245 -> rel244[color=blue]; rel244 -> subset231[color=blue];
[ERROR] 	subset214 -> rel213; rel213 -> subset209[label="0"]; rel213 -> subset212[label="1"];
[ERROR] 	subset233 -> rel232[color=blue]; rel232 -> subset226[color=blue,label="0"]; rel232 -> subset231[color=blue,label="1"];
[ERROR] 	subset248 -> rel247[color=blue]; rel247 -> subset233[color=blue];
[ERROR] 	subset216 -> rel215; rel215 -> subset214;
[ERROR] 	subset235 -> rel234[color=blue]; rel234 -> subset233[color=blue];
[ERROR] 	subset251 -> rel250[color=blue]; rel250 -> subset235[color=blue];
[ERROR] 	subset218 -> rel217; rel217 -> subset216;
[ERROR] 	subset237 -> rel236[color=blue]; rel236 -> subset235[color=blue];
[ERROR] 	subset254 -> rel253[color=blue]; rel253 -> subset237[color=blue];
[ERROR] 	subset222 -> rel221; rel221 -> subset218;
[ERROR] 	subset223 -> rel224; rel224 -> subset222;
[ERROR] 	subset239 -> rel238[color=blue]; rel238 -> subset237[color=blue];
[ERROR] 	subset223 -> rel256[color=blue]; rel256 -> subset239[color=blue];
[ERROR] 	subset344 -> rel343; rel343 -> subset100;
[ERROR] 	subset366 -> rel365[color=blue]; rel365 -> subset100[color=blue];
[ERROR] 	subset391 -> rel390[color=blue]; rel390 -> subset366[color=blue];
[ERROR] 	subset345 -> rel266[color=blue];
[ERROR] 	subset369 -> rel368[color=blue]; rel368 -> subset345[color=blue];
[ERROR] 	subset347 -> rel346; rel346 -> subset344[label="0"]; rel346 -> subset345[label="1"];
[ERROR] 	subset371 -> rel370[color=blue]; rel370 -> subset366[color=blue,label="0"]; rel370 -> subset345[color=blue,label="1"];
[ERROR] 	subset394 -> rel393[color=blue]; rel393 -> subset371[color=blue];
[ERROR] 	subset349 -> rel348; rel348 -> subset347[label="0"]; rel348 -> subset97[label="1"];
[ERROR] 	subset373 -> rel372[color=blue]; rel372 -> subset371[color=blue,label="0"]; rel372 -> subset97[color=blue,label="1"];
[ERROR] 	subset397 -> rel396[color=blue]; rel396 -> subset373[color=blue];
[ERROR] 	subset350 -> rel274[color=blue];
[ERROR] 	subset376 -> rel375[color=blue]; rel375 -> subset350[color=blue];
[ERROR] 	subset352 -> rel351; rel351 -> subset349[label="0"]; rel351 -> subset350[label="1"];
[ERROR] 	subset378 -> rel377[color=blue]; rel377 -> subset373[color=blue,label="0"]; rel377 -> subset350[color=blue,label="1"];
[ERROR] 	subset400 -> rel399[color=blue]; rel399 -> subset378[color=blue];
[ERROR] 	subset354 -> rel353; rel353 -> subset352[label="0"]; rel353 -> subset27[label="1"];
[ERROR] 	subset380 -> rel379[color=blue]; rel379 -> subset378[color=blue,label="0"]; rel379 -> subset27[color=blue,label="1"];
[ERROR] 	subset403 -> rel402[color=blue]; rel402 -> subset380[color=blue];
[ERROR] 	subset356 -> rel355; rel355 -> subset354[label="0"]; rel355 -> subset210[label="1"];
[ERROR] 	subset382 -> rel381[color=blue]; rel381 -> subset380[color=blue,label="0"]; rel381 -> subset210[color=blue,label="1"];
[ERROR] 	subset406 -> rel405[color=blue]; rel405 -> subset382[color=blue];
[ERROR] 	subset358 -> rel357; rel357 -> subset356;
[ERROR] 	subset384 -> rel383[color=blue]; rel383 -> subset382[color=blue];
[ERROR] 	subset409 -> rel408[color=blue]; rel408 -> subset384[color=blue];
[ERROR] 	subset360 -> rel359; rel359 -> subset358;
[ERROR] 	subset386 -> rel385[color=blue]; rel385 -> subset384[color=blue];
[ERROR] 	subset412 -> rel411[color=blue]; rel411 -> subset386[color=blue];
[ERROR] 	subset362 -> rel361; rel361 -> subset360;
[ERROR] 	subset363 -> rel364; rel364 -> subset362;
[ERROR] 	subset388 -> rel387[color=blue]; rel387 -> subset386[color=blue];
[ERROR] 	subset363 -> rel414[color=blue]; rel414 -> subset388[color=blue];
[ERROR] 	subset451 -> rel426[color=blue];
[ERROR] 	subset464 -> rel463[color=blue]; rel463 -> subset451[color=blue];
[ERROR] 	subset453 -> rel452; rel452 -> subset451;
[ERROR] 	subset466 -> rel465[color=blue]; rel465 -> subset451[color=blue];
[ERROR] 	subset475 -> rel474[color=blue]; rel474 -> subset466[color=blue];
[ERROR] 	subset455 -> rel454; rel454 -> subset453[label="0"]; rel454 -> subset27[label="1"];
[ERROR] 	subset468 -> rel467[color=blue]; rel467 -> subset466[color=blue,label="0"]; rel467 -> subset27[color=blue,label="1"];
[ERROR] 	subset478 -> rel477[color=blue]; rel477 -> subset468[color=blue];
[ERROR] 	subset457 -> rel456; rel456 -> subset455;
[ERROR] 	subset470 -> rel469[color=blue]; rel469 -> subset468[color=blue];
[ERROR] 	subset481 -> rel480[color=blue]; rel480 -> subset470[color=blue];
[ERROR] 	subset459 -> rel458; rel458 -> subset457;
[ERROR] 	subset460 -> rel461; rel461 -> subset459;
[ERROR] 	subset472 -> rel471[color=blue]; rel471 -> subset470[color=blue];
[ERROR] 	subset460 -> rel483[color=blue]; rel483 -> subset472[color=blue];
[ERROR] 	subset550 -> rel549; rel549 -> subset27;
[ERROR] 	subset570 -> rel569[color=blue]; rel569 -> subset27[color=blue];
[ERROR] 	subset589 -> rel588[color=blue]; rel588 -> subset570[color=blue];
[ERROR] 	subset552 -> rel551; rel551 -> subset451[label="0"]; rel551 -> subset550[label="1"];
[ERROR] 	subset572 -> rel571[color=blue]; rel571 -> subset451[color=blue,label="0"]; rel571 -> subset570[color=blue,label="1"];
[ERROR] 	subset592 -> rel591[color=blue]; rel591 -> subset572[color=blue];
[ERROR] 	subset554 -> rel553; rel553 -> subset97;
[ERROR] 	subset574 -> rel573[color=blue]; rel573 -> subset97[color=blue];
[ERROR] 	subset595 -> rel594[color=blue]; rel594 -> subset574[color=blue];
[ERROR] 	subset556 -> rel555; rel555 -> subset552[label="0"]; rel555 -> subset554[label="1"];
[ERROR] 	subset576 -> rel575[color=blue]; rel575 -> subset572[color=blue,label="0"]; rel575 -> subset574[color=blue,label="1"];
[ERROR] 	subset598 -> rel597[color=blue]; rel597 -> subset576[color=blue];
[ERROR] 	subset558 -> rel557; rel557 -> subset556[label="0"]; rel557 -> subset210[label="1"];
[ERROR] 	subset578 -> rel577[color=blue]; rel577 -> subset576[color=blue,label="0"]; rel577 -> subset210[color=blue,label="1"];
[ERROR] 	subset601 -> rel600[color=blue]; rel600 -> subset578[color=blue];
[ERROR] 	subset560 -> rel559; rel559 -> subset558;
[ERROR] 	subset580 -> rel579[color=blue]; rel579 -> subset578[color=blue];
[ERROR] 	subset604 -> rel603[color=blue]; rel603 -> subset580[color=blue];
[ERROR] 	subset562 -> rel561; rel561 -> subset560;
[ERROR] 	subset582 -> rel581[color=blue]; rel581 -> subset580[color=blue];
[ERROR] 	subset607 -> rel606[color=blue]; rel606 -> subset582[color=blue];
[ERROR] 	subset564 -> rel563; rel563 -> subset562;
[ERROR] 	subset584 -> rel583[color=blue]; rel583 -> subset582[color=blue];
[ERROR] 	subset610 -> rel609[color=blue]; rel609 -> subset584[color=blue];
[ERROR] 	subset566 -> rel565; rel565 -> subset564;
[ERROR] 	subset567 -> rel568; rel568 -> subset566;
[ERROR] 	subset586 -> rel585[color=blue]; rel585 -> subset584[color=blue];
[ERROR] 	subset567 -> rel612[color=blue]; rel612 -> subset586[color=blue];
[ERROR] 	subset653 -> rel626[color=blue];
[ERROR] 	subset666 -> rel665[color=blue]; rel665 -> subset653[color=blue];
[ERROR] 	subset655 -> rel654; rel654 -> subset653;
[ERROR] 	subset668 -> rel667[color=blue]; rel667 -> subset653[color=blue];
[ERROR] 	subset677 -> rel676[color=blue]; rel676 -> subset668[color=blue];
[ERROR] 	subset657 -> rel656; rel656 -> subset345[label="0"]; rel656 -> subset655[label="1"];
[ERROR] 	subset670 -> rel669[color=blue]; rel669 -> subset345[color=blue,label="0"]; rel669 -> subset668[color=blue,label="1"];
[ERROR] 	subset680 -> rel679[color=blue]; rel679 -> subset670[color=blue];
[ERROR] 	subset659 -> rel658; rel658 -> subset657;
[ERROR] 	subset672 -> rel671[color=blue]; rel671 -> subset670[color=blue];
[ERROR] 	subset683 -> rel682[color=blue]; rel682 -> subset672[color=blue];
[ERROR] 	subset661 -> rel660; rel660 -> subset659;
[ERROR] 	subset662 -> rel663; rel663 -> subset661;
[ERROR] 	subset674 -> rel673[color=blue]; rel673 -> subset672[color=blue];
[ERROR] 	subset662 -> rel685[color=blue]; rel685 -> subset674[color=blue];
[ERROR] 	subset715 -> rel714; rel714 -> subset97[label="0"]; rel714 -> subset100[label="1"];
[ERROR] 	subset717 -> rel716; rel716 -> subset715;
[ERROR] 	subset724 -> rel723; rel723 -> subset722;
[ERROR] 	subset729 -> rel728; rel728 -> subset724;
[ERROR] 	subset719 -> rel718; rel718 -> subset717;
[ERROR] 	subset720 -> rel721; rel721 -> subset719;
[ERROR] 	subset726 -> rel725; rel725 -> subset724;
[ERROR] 	subset720 -> rel731; rel731 -> subset726;
[ERROR] }
[ERROR] -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException
